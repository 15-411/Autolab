Inspecting 224 files
.CCCCEWWWCCCWCCWCCWCWCCCEWCCCCCWWCCCCCCCCCCCCCCWWECCWCWEWCCWCECWECWWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC....CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCECCCCCCCCCCCWCCCCCC.WC......CC....CC.WWCCC

Offenses:

Rakefile:3:81: C: Line is too long. [90/80]
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.
                                                                                ^^^^^^^^^^
app/controllers/admins_controller.rb:13:3: C: Assignment Branch Condition size for emailInstructors is too high. [16.31/15]
  def emailInstructors
  ^^^
app/controllers/admins_controller.rb:13:3: C: Method has too many lines. [11/10]
  def emailInstructors
  ^^^
app/controllers/admins_controller.rb:13:7: C: Use snake_case for method names.
  def emailInstructors
      ^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:14:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.post?
    ^^
app/controllers/admins_controller.rb:21:7: C: Use snake_case for variable names.
      bccString = makeDlist(@cuds)
      ^^^^^^^^^
app/controllers/annotations_controller.rb:45:81: C: Line is too long. [120/80]
    params.require(:annotation).permit(:filename, :position, :line, :text, :submitted_by, :comment, :value, :problem_id)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/annotations_controller.rb:48:3: C: Assignment Branch Condition size for set_submission is too high. [21.95/15]
  def set_submission
  ^^^
app/controllers/annotations_controller.rb:48:3: C: Cyclomatic complexity for set_submission is too high. [10/6]
  def set_submission
  ^^^
app/controllers/annotations_controller.rb:48:3: C: Method has too many lines. [11/10]
  def set_submission
  ^^^
app/controllers/annotations_controller.rb:48:3: C: Perceived complexity for set_submission is too high. [10/7]
  def set_submission
  ^^^
app/controllers/annotations_controller.rb:51:81: C: Line is too long. [98/80]
    unless @cud.instructor || @cud.course_assistant || @submission.course_user_datum_id == @cud.id
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/annotations_controller.rb:53:42: C: Use [33m&&[0m instead of [33mand[0m.
      redirect_to [@course, @assessment] and return false
                                         ^^^
app/controllers/annotations_controller.rb:56:81: C: Line is too long. [102/80]
    if (@assessment.exam? || @course.exam_in_progress?) && !(@cud.instructor || @cud.course_assistant)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/annotations_controller.rb:59:42: C: Use [33m&&[0m instead of [33mand[0m.
      redirect_to [@course, @assessment] and return false
                                         ^^^
app/controllers/announcements_controller.rb:1:1: C: Missing top-level class documentation comment.
class AnnouncementsController < ApplicationController
^^^^^
app/controllers/announcements_controller.rb:17:3: C: Assignment Branch Condition size for create is too high. [20.9/15]
  def create
  ^^^
app/controllers/announcements_controller.rb:17:3: C: Cyclomatic complexity for create is too high. [7/6]
  def create
  ^^^
app/controllers/announcements_controller.rb:17:3: C: Method has too many lines. [12/10]
  def create
  ^^^
app/controllers/announcements_controller.rb:17:3: C: Perceived complexity for create is too high. [8/7]
  def create
  ^^^
app/controllers/announcements_controller.rb:19:81: C: Line is too long. [85/80]
      flash[:error] = "You don't have the permission to create system announcements!"
                                                                                ^^^^^
app/controllers/announcements_controller.rb:41:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if !@cud.user.administrator? && @announcement.system
    ^^
app/controllers/announcements_controller.rb:42:81: C: Line is too long. [83/80]
      flash[:error] = "You don't have the permission to edit system announcements!"
                                                                                ^^^
app/controllers/announcements_controller.rb:63:81: C: Line is too long. [86/80]
      flash[:error] = "You don't have the permission to destroy system announcements!"
                                                                                ^^^^^^
app/controllers/announcements_controller.rb:73:81: C: Line is too long. [108/80]
    params.require(:announcement).permit(:title, :description, :start_date, :end_date, :system, :persistent)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:111:64: E: bare backslash only allowed before newline
        " please contact the Autolab Development team at the " \ 
                                                               ^
app/controllers/assessment/autograde.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentAutograde
^^^^^^
app/controllers/assessment/autograde.rb:7:3: C: Assignment Branch Condition size for autograde_done is too high. [46.63/15]
  def autograde_done
  ^^^
app/controllers/assessment/autograde.rb:7:3: C: Cyclomatic complexity for autograde_done is too high. [11/6]
  def autograde_done
  ^^^
app/controllers/assessment/autograde.rb:7:3: C: Method has too many lines. [28/10]
  def autograde_done
  ^^^
app/controllers/assessment/autograde.rb:7:3: C: Perceived complexity for autograde_done is too high. [12/7]
  def autograde_done
  ^^^
app/controllers/assessment/autograde.rb:8:47: C: Use [33m||[0m instead of [33mor[0m.
    @course = Course.find(params[:course_id]) or (render(nothing: true) && return)
                                              ^^
app/controllers/assessment/autograde.rb:8:81: C: Line is too long. [82/80]
    @course = Course.find(params[:course_id]) or (render(nothing: true) && return)
                                                                                ^^
app/controllers/assessment/autograde.rb:13:81: C: Line is too long. [88/80]
    # there can be multiple submission with the same dave if this was a group submission
                                                                                ^^^^^^^^
app/controllers/assessment/autograde.rb:24:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:29:81: C: Line is too long. [99/80]
    require_relative(Rails.root.join("assessmentConfig", "#{@course.name}-#{@assessment.name}.rb"))
                                                                                ^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:32:5: W: Useless assignment to variable - [33mmodName[0m.
    modName = (assign + (@course.name).gsub(/[^A-Za-z0-9]/, "")).camelize
    ^^^^^^^
app/controllers/assessment/autograde.rb:32:5: C: Use snake_case for variable names.
    modName = (assign + (@course.name).gsub(/[^A-Za-z0-9]/, "")).camelize
    ^^^^^^^
app/controllers/assessment/autograde.rb:49:3: C: Assignment Branch Condition size for regrade is too high. [17.72/15]
  def regrade
  ^^^
app/controllers/assessment/autograde.rb:51:5: C: Use snake_case for variable names.
    @effectiveCud = @submission.course_user_datum
    ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:58:81: C: Line is too long. [107/80]
      redirect_to(history_course_assessment_path(@course, @assessment, cud_id: @effectiveCud.id)) && return
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:63:81: C: Line is too long. [105/80]
    redirect_to(history_course_assessment_path(@course, @assessment, cud_id: @effectiveCud.id)) && return
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:70:3: C: Assignment Branch Condition size for regradeBatch is too high. [28.34/15]
  def regradeBatch
  ^^^
app/controllers/assessment/autograde.rb:70:3: C: Cyclomatic complexity for regradeBatch is too high. [8/6]
  def regradeBatch
  ^^^
app/controllers/assessment/autograde.rb:70:3: C: Method has too many lines. [27/10]
  def regradeBatch
  ^^^
app/controllers/assessment/autograde.rb:70:3: C: Perceived complexity for regradeBatch is too high. [10/7]
  def regradeBatch
  ^^^
app/controllers/assessment/autograde.rb:70:7: C: Use snake_case for method names.
  def regradeBatch
      ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:95:81: C: Line is too long. [98/80]
      flash[:error] = "Warning: Could not regrade #{failed_jobs} submission(s):<br>" + failed_list
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:99:81: C: Line is too long. [88/80]
      link = "<a href=\"#{url_for(controller: 'jobs')}\">#{success_jobs} submission</a>"
                                                                                ^^^^^^^^
app/controllers/assessment/autograde.rb:112:3: C: Assignment Branch Condition size for regradeAll is too high. [28.34/15]
  def regradeAll
  ^^^
app/controllers/assessment/autograde.rb:112:3: C: Cyclomatic complexity for regradeAll is too high. [8/6]
  def regradeAll
  ^^^
app/controllers/assessment/autograde.rb:112:3: C: Method has too many lines. [27/10]
  def regradeAll
  ^^^
app/controllers/assessment/autograde.rb:112:3: C: Perceived complexity for regradeAll is too high. [10/7]
  def regradeAll
  ^^^
app/controllers/assessment/autograde.rb:112:7: C: Use snake_case for method names.
  def regradeAll
      ^^^^^^^^^^
app/controllers/assessment/autograde.rb:114:81: C: Line is too long. [104/80]
    @submissions = @assessment.submissions.where(special_type: Submission::NORMAL).order("version DESC")
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:138:81: C: Line is too long. [98/80]
      flash[:error] = "Warning: Could not regrade #{failed_jobs} submission(s):<br>" + failed_list
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:142:81: C: Line is too long. [86/80]
      link = "<a href=\"#{url_for(controller: 'jobs')}\">#{success_jobs} students</a>"
                                                                                ^^^^^^
app/controllers/assessment/autograde.rb:143:81: C: Line is too long. [88/80]
      flash[:success] = ("Regrading the most recent submissions from #{link}").html_safe
                                                                                ^^^^^^^^
app/controllers/assessment/autograde.rb:153:3: C: Assignment Branch Condition size for autogradeSubmissions is too high. [27.15/15]
  def autogradeSubmissions(course, assessment, submissions)
  ^^^
app/controllers/assessment/autograde.rb:153:3: C: Method has too many lines. [25/10]
  def autogradeSubmissions(course, assessment, submissions)
  ^^^
app/controllers/assessment/autograde.rb:153:3: C: Perceived complexity for autogradeSubmissions is too high. [8/7]
  def autogradeSubmissions(course, assessment, submissions)
  ^^^
app/controllers/assessment/autograde.rb:153:7: C: Use snake_case for method names.
  def autogradeSubmissions(course, assessment, submissions)
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:156:81: C: Line is too long. [86/80]
      flash[:error] = "Submission could not be autograded due to an error in creation"
                                                                                ^^^^^^
app/controllers/assessment/autograde.rb:162:81: C: Line is too long. [92/80]
      flash[:error] = "Autograding failed because of an unexpected exception in the system."
                                                                                ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:164:81: C: Line is too long. [87/80]
      flash[:error] = "Autograding failed because there are no autograding properties."
                                                                                ^^^^^^^
app/controllers/assessment/autograde.rb:166:81: C: Line is too long. [87/80]
        link = "<a href=\"#{url_for(action: 'adminAutograde')}\">Admin Autograding</a>"
                                                                                ^^^^^^^
app/controllers/assessment/autograde.rb:176:81: C: Line is too long. [104/80]
      link = "<a href=\"#{url_for(controller: 'jobs', action: 'getjob', id: job)}\">Job ID = #{job}</a>"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:177:81: C: Line is too long. [97/80]
      flash[:success] = ("Submitted file #{submissions[0].filename} (#{link}) for autograding." \
                                                                                ^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:191:3: C: Assignment Branch Condition size for sendJob is too high. [161.1/15]
  def sendJob(course, assessment, submissions, cud)
  ^^^
app/controllers/assessment/autograde.rb:191:3: C: Cyclomatic complexity for sendJob is too high. [21/6]
  def sendJob(course, assessment, submissions, cud)
  ^^^
app/controllers/assessment/autograde.rb:191:3: C: Method has too many lines. [122/10]
  def sendJob(course, assessment, submissions, cud)
  ^^^
app/controllers/assessment/autograde.rb:191:3: C: Perceived complexity for sendJob is too high. [26/7]
  def sendJob(course, assessment, submissions, cud)
  ^^^
app/controllers/assessment/autograde.rb:191:7: C: Use snake_case for method names.
  def sendJob(course, assessment, submissions, cud)
      ^^^^^^^
app/controllers/assessment/autograde.rb:193:5: C: Use snake_case for variable names.
    assessmentDir = File.join(AUTOCONFIG_COURSE_DIR, course.name, assessment.name)
    ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:193:81: C: Line is too long. [82/80]
    assessmentDir = File.join(AUTOCONFIG_COURSE_DIR, course.name, assessment.name)
                                                                                ^^
app/controllers/assessment/autograde.rb:196:5: C: Use snake_case for variable names.
    openReqURL = "http://#{RESTFUL_HOST}:#{RESTFUL_PORT}/open/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/"
    ^^^^^^^^^^
app/controllers/assessment/autograde.rb:196:81: C: Line is too long. [112/80]
    openReqURL = "http://#{RESTFUL_HOST}:#{RESTFUL_PORT}/open/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:198:5: C: Use snake_case for variable names.
    openResponse = Net::HTTP.get_response(URI.parse(openReqURL))
    ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:199:5: C: Use snake_case for variable names.
    openResponseJSON = JSON.parse(openResponse.body)
    ^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:200:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if openResponseJSON.nil? || openResponseJSON["statusId"] < 0
    ^^
app/controllers/assessment/autograde.rb:203:5: C: Use snake_case for variable names.
    existingFileList = openResponseJSON["files"]
    ^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:207:5: C: Use snake_case for variable names.
    uploadHTTPReq = Net::HTTP.new(RESTFUL_HOST, RESTFUL_PORT)
    ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:212:9: C: Use snake_case for variable names.
        uploadFileList =  assessment.config_module.autogradeInputFiles(assessmentDir)
        ^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:212:81: C: Line is too long. [85/80]
        uploadFileList =  assessment.config_module.autogradeInputFiles(assessmentDir)
                                                                                ^^^^^
app/controllers/assessment/autograde.rb:214:9: C: Use snake_case for variable names.
        uploadFileList =  autogradeInputFiles(assessmentDir, assessment, submissions[0])
        ^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:214:81: C: Line is too long. [88/80]
        uploadFileList =  autogradeInputFiles(assessmentDir, assessment, submissions[0])
                                                                                ^^^^^^^^
app/controllers/assessment/autograde.rb:218:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:224:20: C: Use [33mnext[0m to skip iteration.
    uploadFileList.each do |f|
                   ^^^^
app/controllers/assessment/autograde.rb:226:81: C: Line is too long. [111/80]
      unless existingFileList.any? { |h| h[:md5] == md5hash && h[:localFile] == File.basename(f["localFile"]) }
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:227:9: C: Use snake_case for variable names.
        uploadReq = Net::HTTP::Post.new("/upload/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/")
        ^^^^^^^^^
app/controllers/assessment/autograde.rb:227:81: C: Line is too long. [100/80]
        uploadReq = Net::HTTP::Post.new("/upload/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/")
                                                                                ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:232:9: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
        rescue Exception
        ^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:237:9: C: Use snake_case for variable names.
        uploadResponse = uploadHTTPReq.request(uploadReq)
        ^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:238:81: C: Line is too long. [96/80]
        COURSE_LOGGER.log("Req: " + "/upload/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/")
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:239:9: C: Use snake_case for variable names.
        uploadResponseJSON = JSON.parse(uploadResponse.body)
        ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:248:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless @autograde_prop
    ^^^^^^
app/controllers/assessment/autograde.rb:252:41: C: Favor [33mformat[0m over [33mString#%[0m.
    filename = "%s_%d_%s_autograde.txt" % [submissions[0].course_user_datum.email, submissions[0].version, assessment.name]
                                        ^
app/controllers/assessment/autograde.rb:252:81: C: Line is too long. [123/80]
    filename = "%s_%d_%s_autograde.txt" % [submissions[0].course_user_datum.email, submissions[0].version, assessment.name]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:253:5: C: Use snake_case for variable names.
    feedbackFile = File.join(assessmentDir, assessment.handin_directory, filename)
    ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:253:81: C: Line is too long. [82/80]
    feedbackFile = File.join(assessmentDir, assessment.handin_directory, filename)
                                                                                ^^
app/controllers/assessment/autograde.rb:262:81: C: Line is too long. [85/80]
    # save dave keys.  These let us know which submissions to save the autoresult for
                                                                                ^^^^^
app/controllers/assessment/autograde.rb:272:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:272:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessment/autograde.rb:277:5: C: Use snake_case for variable names.
    callBackURL = if RESTFUL_USE_POLLING
    ^^^^^^^^^^^
app/controllers/assessment/autograde.rb:280:81: C: Line is too long. [146/80]
                    "#{hostname}/courses/#{course.id}/assessments/#{assessment.id}/autograde_done?dave=#{dave}&submission_id=#{submissions[0].id}"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:281:5: W: [33mend[0m at 281, 4 is not aligned with [33mif[0m at 277, 18
    end
    ^^^
app/controllers/assessment/autograde.rb:285:5: C: Use snake_case for variable names.
    jobName = "%s_%s_%d_%s" % [course.name, assessment.name, submissions[0].version, submissions[0].course_user_datum.email]
    ^^^^^^^
app/controllers/assessment/autograde.rb:285:29: C: Favor [33mformat[0m over [33mString#%[0m.
    jobName = "%s_%s_%d_%s" % [course.name, assessment.name, submissions[0].version, submissions[0].course_user_datum.email]
                            ^
app/controllers/assessment/autograde.rb:285:81: C: Line is too long. [124/80]
    jobName = "%s_%s_%d_%s" % [course.name, assessment.name, submissions[0].version, submissions[0].course_user_datum.email]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:288:5: C: Use snake_case for variable names.
    addJobHTTPReq = Net::HTTP.new(RESTFUL_HOST, RESTFUL_PORT)
    ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:289:5: C: Use snake_case for variable names.
    addJobReq = Net::HTTP::Post.new("/addJob/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/")
    ^^^^^^^^^
app/controllers/assessment/autograde.rb:289:81: C: Line is too long. [96/80]
    addJobReq = Net::HTTP::Post.new("/addJob/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/")
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:293:81: C: Line is too long. [84/80]
                           "destFile" => Pathname.new(f["destFile"]).basename.to_s }
                                                                                ^^^^
app/controllers/assessment/autograde.rb:302:81: C: Line is too long. [92/80]
    COURSE_LOGGER.log("Req: " + "/addJob/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/")
                                                                                ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:303:5: C: Use snake_case for variable names.
    addJobResponse = addJobHTTPReq.request(addJobReq)
    ^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:304:5: C: Use snake_case for variable names.
    addJobResponseJSON = JSON.parse(addJobResponse.body)
    ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:307:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if addJobResponseJSON.nil? || addJobResponseJSON["statusId"] < 0
    ^^
app/controllers/assessment/autograde.rb:317:13: C: Use snake_case for variable names.
            pollReqURL = "http://#{RESTFUL_HOST}:#{RESTFUL_PORT}/poll/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/#{URI.encode(filename)}/"
            ^^^^^^^^^^
app/controllers/assessment/autograde.rb:317:81: C: Line is too long. [144/80]
            pollReqURL = "http://#{RESTFUL_HOST}:#{RESTFUL_PORT}/poll/#{RESTFUL_KEY}/#{course.name}-#{assessment.name}/#{URI.encode(filename)}/"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:318:13: C: Use snake_case for variable names.
            pollResponse = Net::HTTP.get_response(URI.parse(pollReqURL))
            ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:320:15: W: Useless assignment to variable - [33mpollResponseStatusId[0m. Did you mean [33mpollResponse[0m?
              pollResponseStatusId = JSON.parse(pollResponse.body)["statusId"]
              ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:320:15: C: Use snake_case for variable names.
              pollResponseStatusId = JSON.parse(pollResponse.body)["statusId"]
              ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:338:81: C: Line is too long. [88/80]
          # this doesn't work because autogradeDone is defined in submissions_controller
                                                                                ^^^^^^^^
app/controllers/assessment/autograde.rb:351:7: C: Use snake_case for method names.
  def autogradeInputFiles(assessmentDir, assessment, submission)
      ^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:357:5: C: Use snake_case for variable names.
    localHandin = File.join(assessmentDir, assessment.handin_directory,
    ^^^^^^^^^^^
app/controllers/assessment/autograde.rb:359:5: C: Use snake_case for variable names.
    localMakefile = File.join(assessmentDir, "autograde-Makefile")
    ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:360:5: C: Use snake_case for variable names.
    localAutograde = File.join(assessmentDir, "autograde.tar")
    ^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:363:5: C: Use snake_case for variable names.
    destHandin = assessment.handin_filename
    ^^^^^^^^^^
app/controllers/assessment/autograde.rb:374:81: C: Line is too long. [93/80]
  # autogradeDone - called when autograding is done, either by the submissions#autograde_done
                                                                                ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:375:81: C: Line is too long. [91/80]
  # route getting called by Tango or by the Autograde module polling Tango. In either case,
                                                                                ^^^^^^^^^^^
app/controllers/assessment/autograde.rb:378:3: C: Assignment Branch Condition size for autogradeDone is too high. [18.47/15]
  def autogradeDone(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:378:3: C: Method has too many lines. [13/10]
  def autogradeDone(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:378:7: C: Use snake_case for method names.
  def autogradeDone(submissions, feedback)
      ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:379:5: C: Use snake_case for variable names.
    assessmentDir = File.join(AUTOCONFIG_COURSE_DIR, @course.name, @assessment.name)
    ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:379:81: C: Line is too long. [84/80]
    assessmentDir = File.join(AUTOCONFIG_COURSE_DIR, @course.name, @assessment.name)
                                                                                ^^^^
app/controllers/assessment/autograde.rb:382:43: C: Favor [33mformat[0m over [33mString#%[0m.
      filename = "%s_%d_%s_autograde.txt" % [submission.course_user_datum.email, submission.version, @assessment.name]
                                          ^
app/controllers/assessment/autograde.rb:382:81: C: Line is too long. [118/80]
      filename = "%s_%d_%s_autograde.txt" % [submission.course_user_datum.email, submission.version, @assessment.name]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:384:7: C: Use snake_case for variable names.
      feedbackFile = File.join(assessmentDir, @assessment.handin_directory, filename)
      ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:384:81: C: Line is too long. [85/80]
      feedbackFile = File.join(assessmentDir, @assessment.handin_directory, filename)
                                                                                ^^^^^
app/controllers/assessment/autograde.rb:404:3: C: Assignment Branch Condition size for saveAutograde is too high. [70.01/15]
  def saveAutograde(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:404:3: C: Cyclomatic complexity for saveAutograde is too high. [10/6]
  def saveAutograde(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:404:3: C: Method has too many lines. [58/10]
  def saveAutograde(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:404:3: C: Perceived complexity for saveAutograde is too high. [11/7]
  def saveAutograde(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:404:7: C: Use snake_case for method names.
  def saveAutograde(submissions, feedback)
      ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:407:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if lines.nil?
      ^^
app/controllers/assessment/autograde.rb:421:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if scores.keys.length == 0
      ^^
app/controllers/assessment/autograde.rb:429:7: C: Prefer [33meach[0m over [33mfor[0m.
      for key in scores.keys do
      ^^^
app/controllers/assessment/autograde.rb:431:9: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        unless problem
        ^^^^^^
app/controllers/assessment/autograde.rb:435:81: C: Line is too long. [81/80]
          score = submission.scores.find_or_initialize_by(problem_id: problem.id)
                                                                                ^
app/controllers/assessment/autograde.rb:451:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:452:81: C: Line is too long. [134/80]
      feedback_str = "An error occurred while parsing the autoresult returned by the Autograder.\n\nError message: " + e.to_s + "\n\n"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:453:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if lines && (lines.length < 10_000)
      ^^
app/controllers/assessment/autograde.rb:457:21: C: Use [33mnext[0m to skip iteration.
        submissions.each do |submission|
                    ^^^^
app/controllers/assessment/autograde.rb:470:81: C: Line is too long. [94/80]
    logger = Logger.new(Rails.root.join("courses", @course.name, @assessment.name, "log.txt"))
                                                                                ^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:472:81: C: Line is too long. [112/80]
      logger.add(Logger::INFO) { "#{submission.course_user_datum.email}, #{submission.version}, #{autoresult}" }
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:481:7: C: Use snake_case for method names.
  def parseAutoresult(autoresult, _isOfficial)
      ^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:482:81: C: Line is too long. [84/80]
    parsed = ActiveSupport::JSON.decode(autoresult.gsub(/([a-zA-Z0-9]+):/, '"\1":'))
                                                                                ^^^^
app/controllers/assessment/autograde.rb:483:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless parsed
    ^^^^^^
app/controllers/assessment/autograde.rb:486:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless parsed["scores"]
    ^^^^^^
app/controllers/assessment/autograde.rb:492:3: C: Assignment Branch Condition size for extend_config_module is too high. [44.7/15]
  def extend_config_module(assessment, submission, cud)
  ^^^
app/controllers/assessment/autograde.rb:492:3: C: Cyclomatic complexity for extend_config_module is too high. [11/6]
  def extend_config_module(assessment, submission, cud)
  ^^^
app/controllers/assessment/autograde.rb:492:3: C: Method has too many lines. [48/10]
  def extend_config_module(assessment, submission, cud)
  ^^^
app/controllers/assessment/autograde.rb:492:3: C: Perceived complexity for extend_config_module is too high. [12/7]
  def extend_config_module(assessment, submission, cud)
  ^^^
app/controllers/assessment/autograde.rb:498:5: C: Use snake_case for variable names.
    assignName = assessment.name
    ^^^^^^^^^^
app/controllers/assessment/autograde.rb:503:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:503:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessment/autograde.rb:509:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:509:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessment/autograde.rb:524:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless @assessment
      ^^^^^^
app/controllers/assessment/autograde.rb:552:3: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
  rescue Exception => error
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:4:1: C: Missing top-level module documentation comment.
module AssessmentGrading
^^^^^^
app/controllers/assessment/grading.rb:6:7: C: Use snake_case for method names.
  def bulkExport
      ^^^^^^^^^^
app/controllers/assessment/grading.rb:17:3: C: Assignment Branch Condition size for bulkGrade is too high. [25.96/15]
  def bulkGrade
  ^^^
app/controllers/assessment/grading.rb:17:3: C: Cyclomatic complexity for bulkGrade is too high. [10/6]
  def bulkGrade
  ^^^
app/controllers/assessment/grading.rb:17:3: C: Method has too many lines. [22/10]
  def bulkGrade
  ^^^
app/controllers/assessment/grading.rb:17:3: C: Perceived complexity for bulkGrade is too high. [12/7]
  def bulkGrade
  ^^^
app/controllers/assessment/grading.rb:17:7: C: Use snake_case for method names.
  def bulkGrade
      ^^^^^^^^^
app/controllers/assessment/grading.rb:21:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if params[:upload]
    ^^
app/controllers/assessment/grading.rb:50:3: C: Assignment Branch Condition size for bulkGrade_complete is too high. [29.58/15]
  def bulkGrade_complete
  ^^^
app/controllers/assessment/grading.rb:50:3: C: Cyclomatic complexity for bulkGrade_complete is too high. [12/6]
  def bulkGrade_complete
  ^^^
app/controllers/assessment/grading.rb:50:3: C: Method has too many lines. [19/10]
  def bulkGrade_complete
  ^^^
app/controllers/assessment/grading.rb:50:3: C: Perceived complexity for bulkGrade_complete is too high. [13/7]
  def bulkGrade_complete
  ^^^
app/controllers/assessment/grading.rb:50:7: C: Use snake_case for method names.
  def bulkGrade_complete
      ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:71:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless save_entries @entries, data_type
    ^^^^^^
app/controllers/assessment/grading.rb:88:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Hash
      ^^^^
app/controllers/assessment/grading.rb:96:3: C: Assignment Branch Condition size for save_entries is too high. [40.63/15]
  def save_entries(entries, data_type)
  ^^^
app/controllers/assessment/grading.rb:96:3: C: Cyclomatic complexity for save_entries is too high. [8/6]
  def save_entries(entries, data_type)
  ^^^
app/controllers/assessment/grading.rb:96:3: C: Method has too many lines. [43/10]
  def save_entries(entries, data_type)
  ^^^
app/controllers/assessment/grading.rb:107:81: C: Line is too long. [84/80]
            aud.grade_type = AssessmentUserDatum::GRADE_TYPE_MAP[entry[:grade_type]]
                                                                                ^^^^
app/controllers/assessment/grading.rb:111:22: W: Assignment in condition - you probably meant to use [33m==[0m.
          unless sub = aud.latest_submission
                     ^
app/controllers/assessment/grading.rb:152:3: C: Method has too many lines. [13/10]
  def parse_csv(csv, data_type)
  ^^^
app/controllers/assessment/grading.rb:155:81: C: Line is too long. [96/80]
    emails = Set.new(CourseUserDatum.joins(:user).where(course: @assessment.course).map &:email)
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:155:89: W: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the [33m&[0m if it should be a binary AND.
    emails = Set.new(CourseUserDatum.joins(:user).where(course: @assessment.course).map &:email)
                                                                                        ^
app/controllers/assessment/grading.rb:172:3: C: Assignment Branch Condition size for parse_csv_row is too high. [33.62/15]
  def parse_csv_row(row, kind, problems, emails)
  ^^^
app/controllers/assessment/grading.rb:172:3: C: Cyclomatic complexity for parse_csv_row is too high. [10/6]
  def parse_csv_row(row, kind, problems, emails)
  ^^^
app/controllers/assessment/grading.rb:172:3: C: Method has too many lines. [36/10]
  def parse_csv_row(row, kind, problems, emails)
  ^^^
app/controllers/assessment/grading.rb:172:3: C: Perceived complexity for parse_csv_row is too high. [12/7]
  def parse_csv_row(row, kind, problems, emails)
  ^^^
app/controllers/assessment/grading.rb:190:5: W: [33mend[0m at 190, 4 is not aligned with [33mif[0m at 184, 24
    end
    ^^^
app/controllers/assessment/grading.rb:199:11: C: Avoid using [33mrescue[0m in its modifier form.
          Float(datum) rescue({ error: datum })
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:210:81: C: Line is too long. [86/80]
    problems.each_with_index { |problem, i| processed[:data][problem.name] = data[i] }
                                                                                ^^^^^^
app/controllers/assessment/grading.rb:215:81: C: Line is too long. [93/80]
                             elsif AssessmentUserDatum::GRADE_TYPE_MAP.key? grade_type.to_sym
                                                                                ^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:219:5: W: [33mend[0m at 219, 4 is not aligned with [33mif[0m at 213, 29
    end
    ^^^
app/controllers/assessment/grading.rb:226:3: C: Assignment Branch Condition size for quickSetScore is too high. [27.66/15]
  def quickSetScore
  ^^^
app/controllers/assessment/grading.rb:226:3: C: Method has too many lines. [14/10]
  def quickSetScore
  ^^^
app/controllers/assessment/grading.rb:226:7: C: Use snake_case for method names.
  def quickSetScore
      ^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:237:81: C: Line is too long. [85/80]
    score = Score.find_or_initialize_by_submission_id_and_problem_id(sub_id, prob_id)
                                                                                ^^^^^
app/controllers/assessment/grading.rb:255:3: C: Assignment Branch Condition size for quickSetScoreDetails is too high. [29.55/15]
  def quickSetScoreDetails
  ^^^
app/controllers/assessment/grading.rb:255:3: C: Method has too many lines. [15/10]
  def quickSetScoreDetails
  ^^^
app/controllers/assessment/grading.rb:255:7: C: Use snake_case for method names.
  def quickSetScoreDetails
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:266:81: C: Line is too long. [85/80]
    score = Score.find_or_initialize_by_submission_id_and_problem_id(sub_id, prob_id)
                                                                                ^^^^^
app/controllers/assessment/grading.rb:286:81: C: Line is too long. [90/80]
    render partial: "popover", locals: { s: Submission.find(params[:submission_id].to_i) }
                                                                                ^^^^^^^^^^
app/controllers/assessment/grading.rb:291:15: C: Favor the ternary operator (?:) over if/then/else/end constructs.
    grader = (if score then score.grader else nil end)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:291:42: C: Redundant empty [33melse[0m-clause.
    grader = (if score then score.grader else nil end)
                                         ^^^^
app/controllers/assessment/grading.rb:299:7: C: Use snake_case for method names.
  def viewGradesheet
      ^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:303:7: C: Use snake_case for method names.
  def quickGetTotal
      ^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:312:3: C: Assignment Branch Condition size for statistics is too high. [41.05/15]
  def statistics
  ^^^
app/controllers/assessment/grading.rb:312:3: C: Method has too many lines. [21/10]
  def statistics
  ^^^
app/controllers/assessment/grading.rb:314:81: C: Line is too long. [93/80]
    latest_submissions = @assessment.submissions.latest.includes(:scores, :course_user_datum)
                                                                                ^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:378:81: C: Line is too long. [97/80]
  #     @users = @course.users.where(["andrewID LIKE ?",params[:andrewID]]).order("andrewID ASC")
                                                                                ^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:426:81: C: Line is too long. [88/80]
  #     require 'libarchive' # this must be removed if this function is ever uncommented
                                                                                ^^^^^^^^
app/controllers/assessment/grading.rb:444:81: C: Line is too long. [104/80]
  #         submission = @assessment.submissions.where(:user_id=>student.id).order("version DESC").first
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:503:3: C: Method has too many lines. [12/10]
  def load_course_config
  ^^^
app/controllers/assessment/grading.rb:508:7: W: The use of [33meval[0m is a serious security risk.
      eval("extend(Course#{course.camelize})")
      ^^^^
app/controllers/assessment/grading.rb:509:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception
    ^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:512:69: C: Use [33m&&[0m instead of [33mand[0m.
        "admin/reload'>here</a> to reload the file, and try again") and
                                                                    ^^^
app/controllers/assessment/grading.rb:518:3: C: Assignment Branch Condition size for stats_for_grouping is too high. [37.39/15]
  def stats_for_grouping(grouping)
  ^^^
app/controllers/assessment/grading.rb:518:3: C: Method has too many lines. [25/10]
  def stats_for_grouping(grouping)
  ^^^
app/controllers/assessment/grading.rb:520:5: W: Useless assignment to variable - [33mproblem_id_to_name[0m.
    problem_id_to_name = @assessment.problem_id_to_name
    ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:560:3: C: Assignment Branch Condition size for stats_for_grader is too high. [51.35/15]
  def stats_for_grader(submissions)
  ^^^
app/controllers/assessment/grading.rb:560:3: C: Method has too many lines. [48/10]
  def stats_for_grader(submissions)
  ^^^
app/controllers/assessment/grading.rb:562:5: W: Useless assignment to variable - [33mproblem_id_to_name[0m.
    problem_id_to_name = @assessment.problem_id_to_name
    ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:580:5: C: Method has too many lines. [11/10]
    def find_user(i)
    ^^^
app/controllers/assessment/grading.rb:620:3: C: Assignment Branch Condition size for load_gradesheet_data is too high. [17.12/15]
  def load_gradesheet_data
  ^^^
app/controllers/assessment/grading.rb:620:3: C: Method has too many lines. [16/10]
  def load_gradesheet_data
  ^^^
app/controllers/assessment/grading.rb:625:9: C: Avoid multi-line ?: (the ternary operator); use [33mif[0m/[33munless[0m instead.
    o = params[:section] ? {
        ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:626:81: C: Line is too long. [84/80]
      conditions: { assessment_id: id, course_user_data: { section: @cud.section } }
                                                                                ^^^^
app/controllers/assessment/grading.rb:631:81: C: Line is too long. [82/80]
    # currently loads *all* assessment AUDs, scores in spite of the section filter
                                                                                ^^
app/controllers/assessment/grading.rb:633:47: W: Do not use prefix [33m_[0m for a variable that is used.
    cache = AssociationCache.new(@course) do |_|
                                              ^
app/controllers/assessment/grading.rb:637:81: C: Line is too long. [89/80]
      _.load_latest_submission_scores(conditions: { submissions: { assessment_id: id } })
                                                                                ^^^^^^^^^
app/controllers/assessment/handin.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentHandin
^^^^^^
app/controllers/assessment/handin.rb:9:81: C: Line is too long. [92/80]
  # autogradeSubmissions(course, assessment, submissions): Does any post-handing-in actions.
                                                                                ^^^^^^^^^^^^
app/controllers/assessment/handin.rb:10:81: C: Line is too long. [93/80]
  #     arguments are the course object, assessment object, and a list of submissions objects
                                                                                ^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:12:81: C: Line is too long. [83/80]
  # Both validateHandin() and autogradeSubmissions() cannot modify the state of the
                                                                                ^^^
app/controllers/assessment/handin.rb:18:3: C: Assignment Branch Condition size for handin is too high. [21.24/15]
  def handin
  ^^^
app/controllers/assessment/handin.rb:18:3: C: Cyclomatic complexity for handin is too high. [10/6]
  def handin
  ^^^
app/controllers/assessment/handin.rb:18:3: C: Method has too many lines. [18/10]
  def handin
  ^^^
app/controllers/assessment/handin.rb:18:3: C: Perceived complexity for handin is too high. [10/7]
  def handin
  ^^^
app/controllers/assessment/handin.rb:20:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless validateHandin
    ^^^^^^
app/controllers/assessment/handin.rb:27:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:27:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessment/handin.rb:50:3: C: Assignment Branch Condition size for local_submit is too high. [96.09/15]
  def local_submit
  ^^^
app/controllers/assessment/handin.rb:50:3: C: Cyclomatic complexity for local_submit is too high. [33/6]
  def local_submit
  ^^^
app/controllers/assessment/handin.rb:50:3: C: Method has too many lines. [79/10]
  def local_submit
  ^^^
app/controllers/assessment/handin.rb:50:3: C: Perceived complexity for local_submit is too high. [37/7]
  def local_submit
  ^^^
app/controllers/assessment/handin.rb:57:12: C: Favor the ternary operator (?:) over if/then/else/end constructs.
    @cud = if @user then @course.course_user_data.find_by(user_id: @user.id) else nil end
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:57:78: C: Redundant empty [33melse[0m-clause.
    @cud = if @user then @course.course_user_data.find_by(user_id: @user.id) else nil end
                                                                             ^^^^
app/controllers/assessment/handin.rb:57:81: C: Line is too long. [89/80]
    @cud = if @user then @course.course_user_data.find_by(user_id: @user.id) else nil end
                                                                                ^^^^^^^^^
app/controllers/assessment/handin.rb:65:81: C: Line is too long. [81/80]
      err = "ERROR: Invalid Assessment (#{params[:id]}) for course #{@course.id}"
                                                                                ^
app/controllers/assessment/handin.rb:73:5: C: Use snake_case for variable names.
    remoteHandinDir = File.join(@assessment.remote_handin_path, personal_directory)
    ^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:73:81: C: Line is too long. [83/80]
    remoteHandinDir = File.join(@assessment.remote_handin_path, personal_directory)
                                                                                ^^^
app/controllers/assessment/handin.rb:75:5: W: Useless assignment to variable - [33msubmission_count[0m. Did you mean [33msubmissons_count[0m?
    submission_count = 0
    ^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:80:9: C: Use snake_case for variable names.
        handinFile = params[:submit]
        ^^^^^^^^^^
app/controllers/assessment/handin.rb:83:81: C: Line is too long. [81/80]
          submission_count = @cud.submissions.where(assessment: @assessment).size
                                                                                ^
app/controllers/assessment/handin.rb:85:81: C: Line is too long. [114/80]
            render(plain: "You have no remaining submissions for this assessment", status: :bad_request) && return
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:95:81: C: Line is too long. [97/80]
          submissions = saveHandin("local_submit_file" => File.join(remoteHandinDir, handinFile))
                                                                                ^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:96:9: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
        rescue Exception => e
        ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:97:11: C: Do not write to stdout. Use Rails' logger if you want to log.
          puts "Error Saving Submission:\n#{e}"
          ^^^^
app/controllers/assessment/handin.rb:115:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception  => e
      ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:116:9: C: Do not write to stdout. Use Rails' logger if you want to log.
        print e
        ^^^^^
app/controllers/assessment/handin.rb:121:9: C: Do not write to stdout. Use Rails' logger if you want to log.
        puts "Submission received, ID##{submissions[0].id}"
        ^^^^
app/controllers/assessment/handin.rb:123:81: C: Line is too long. [93/80]
        err = "There was an error saving your submission. Please contact your course staff\n"
                                                                                ^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:128:81: C: Line is too long. [114/80]
        render(plain: " - You have #{assessment.max_submissions - submissons_count} submissions left\n") && return
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:143:81: C: Line is too long. [95/80]
          render(plain: "WARNING: could not clear previous handin directory, please") && return
                                                                                ^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:150:9: C: Do not write to stdout. Use Rails' logger if you want to log.
        puts "ERROR: Could not create handin directory. Please contact
        ^^^^
app/controllers/assessment/handin.rb:162:3: C: Assignment Branch Condition size for log_submit is too high. [80.67/15]
  def log_submit
  ^^^
app/controllers/assessment/handin.rb:162:3: C: Cyclomatic complexity for log_submit is too high. [18/6]
  def log_submit
  ^^^
app/controllers/assessment/handin.rb:162:3: C: Method has too many lines. [57/10]
  def log_submit
  ^^^
app/controllers/assessment/handin.rb:162:3: C: Perceived complexity for log_submit is too high. [21/7]
  def log_submit
  ^^^
app/controllers/assessment/handin.rb:169:12: C: Favor the ternary operator (?:) over if/then/else/end constructs.
    @cud = if @user then @course.course_user_data.find_by(user_id: @user.id) else nil end
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:169:78: C: Redundant empty [33melse[0m-clause.
    @cud = if @user then @course.course_user_data.find_by(user_id: @user.id) else nil end
                                                                             ^^^^
app/controllers/assessment/handin.rb:169:81: C: Line is too long. [89/80]
    @cud = if @user then @course.course_user_data.find_by(user_id: @user.id) else nil end
                                                                                ^^^^^^^^^
app/controllers/assessment/handin.rb:177:81: C: Line is too long. [81/80]
      err = "ERROR: Invalid Assessment (#{params[:id]}) for course #{@course.id}"
                                                                                ^
app/controllers/assessment/handin.rb:189:81: C: Line is too long. [84/80]
    # Everything looks OK, so append the autoresult to the log.txt file for this lab
                                                                                ^^^^
app/controllers/assessment/handin.rb:190:81: C: Line is too long. [95/80]
    @logger = Logger.new(Rails.root.join("courses", @course.name, @assessment.name, "log.txt"))
                                                                                ^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:194:5: C: Use snake_case for variable names.
    modName = @assessment.name + (@course.name).gsub(/[^A-Za-z0-9]/, "")
    ^^^^^^^
app/controllers/assessment/handin.rb:195:81: C: Line is too long. [90/80]
    require(Rails.root.join("assessmentConfig", "#{@course.name}-#{@assessment.name}.rb"))
                                                                                ^^^^^^^^^^
app/controllers/assessment/handin.rb:196:5: W: The use of [33meval[0m is a serious security risk.
    eval("extend #{modName.camelcase}")
    ^^^^
app/controllers/assessment/handin.rb:206:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if scores.keys.length == 0
      ^^
app/controllers/assessment/handin.rb:211:81: C: Line is too long. [93/80]
      submission = @assessment.submissions.find_by(version: 0, course_user_datum_id: @cud.id)
                                                                                ^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:228:7: C: Prefer [33meach[0m over [33mfor[0m.
      for key in scores.keys do
      ^^^
app/controllers/assessment/handin.rb:236:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception  => e
    ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:237:7: C: Do not write to stdout. Use Rails' logger if you want to log.
      print e
      ^^^^^
app/controllers/assessment/handin.rb:249:3: C: Assignment Branch Condition size for validateHandin is too high. [37.34/15]
  def validateHandin
  ^^^
app/controllers/assessment/handin.rb:249:3: C: Method has too many lines. [22/10]
  def validateHandin
  ^^^
app/controllers/assessment/handin.rb:249:7: C: Use snake_case for method names.
  def validateHandin
      ^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:287:3: C: Assignment Branch Condition size for validateForGroups is too high. [20.15/15]
  def validateForGroups
  ^^^
app/controllers/assessment/handin.rb:287:3: C: Cyclomatic complexity for validateForGroups is too high. [7/6]
  def validateForGroups
  ^^^
app/controllers/assessment/handin.rb:287:3: C: Method has too many lines. [19/10]
  def validateForGroups
  ^^^
app/controllers/assessment/handin.rb:287:7: C: Use snake_case for method names.
  def validateForGroups
      ^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:288:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless @assessment.has_groups?
    ^^^^^^
app/controllers/assessment/handin.rb:292:40: C: Use [33m||[0m instead of [33mor[0m.
    aud = @assessment.aud_for(@cud.id) or return true
                                       ^^
app/controllers/assessment/handin.rb:293:23: C: Use [33m||[0m instead of [33mor[0m.
    group = aud.group or return true
                      ^^
app/controllers/assessment/handin.rb:295:32: C: Use [33mnext[0m to skip iteration.
    group.assessment_user_data.each do |aud|
                               ^^^^
app/controllers/assessment/handin.rb:295:41: W: Shadowing outer local variable - [33maud[0m.
    group.assessment_user_data.each do |aud|
                                        ^^^
app/controllers/assessment/handin.rb:297:81: C: Line is too long. [98/80]
        flash[:error] = "You cannot submit until all group members confirm their group membership"
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:302:81: C: Line is too long. [96/80]
        submission_count = aud.course_user_datum.submissions.where(assessment: @assessment).size
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:304:81: C: Line is too long. [103/80]
          flash[:error] = "A member of your group has reached the submission limit for this assessment"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:316:3: C: Assignment Branch Condition size for saveHandin is too high. [27.73/15]
  def saveHandin(sub)
  ^^^
app/controllers/assessment/handin.rb:316:3: C: Method has too many lines. [24/10]
  def saveHandin(sub)
  ^^^
app/controllers/assessment/handin.rb:316:7: C: Use snake_case for method names.
  def saveHandin(sub)
      ^^^^^^^^^^
app/controllers/assessment/handin.rb:319:81: C: Line is too long. [82/80]
                                                  submitter_ip: request.remote_ip)
                                                                                ^^
app/controllers/assessment/handin.rb:328:81: C: Line is too long. [82/80]
                                                  submitter_ip: request.remote_ip)
                                                                                ^^
app/controllers/assessment/handin.rb:336:81: C: Line is too long. [81/80]
        submission = @assessment.submissions.create(course_user_datum_id: cud.id,
                                                                                ^
app/controllers/assessment/handin.rb:337:81: C: Line is too long. [84/80]
                                                    submitter_ip: request.remote_ip)
                                                                                ^^^^
app/controllers/assessment/handin.rb:345:3: C: Assignment Branch Condition size for get_handin is too high. [22.38/15]
  def get_handin
  ^^^
app/controllers/assessment/handin.rb:345:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_handin
      ^^^^^^^^^^
app/controllers/assessment/handin.rb:350:81: C: Line is too long. [89/80]
    submission_count = @assessment.submissions.where(course_user_datum_id: @cud.id).count
                                                                                ^^^^^^^^^
app/controllers/assessment/handout.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentHandout
^^^^^^
app/controllers/assessment/handout.rb:4:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when ".html" then "text/html"
      ^^^^
app/controllers/assessment/handout.rb:5:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when ".pdf" then "application/pdf"
      ^^^^
app/controllers/assessment/handout.rb:10:3: C: Assignment Branch Condition size for handout is too high. [16.61/15]
  def handout
  ^^^
app/controllers/assessment/handout.rb:10:3: C: Method has too many lines. [20/10]
  def handout
  ^^^
app/controllers/assessment/SVN.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentSVN
^^^^^^
app/controllers/assessment/SVN.rb:1:1: C: Use snake_case for source file names.
module AssessmentSVN
^
app/controllers/assessment/SVN.rb:3:7: C: Use snake_case for method names.
  def adminSVN
      ^^^^^^^^
app/controllers/assessment/SVN.rb:8:81: C: Line is too long. [89/80]
    @assessments = @course.assessments.where(has_svn: true).where.not(id: @assessment.id)
                                                                                ^^^^^^^^^
app/controllers/assessment/SVN.rb:12:7: C: Use snake_case for method names.
  def setRepository
      ^^^^^^^^^^^^^
app/controllers/assessment/SVN.rb:21:3: C: Assignment Branch Condition size for importSVN is too high. [18.17/15]
  def importSVN
  ^^^
app/controllers/assessment/SVN.rb:21:3: C: Method has too many lines. [15/10]
  def importSVN
  ^^^
app/controllers/assessment/SVN.rb:21:7: C: Use snake_case for method names.
  def importSVN
      ^^^^^^^^^
app/controllers/assessment/SVN.rb:28:5: C: Prefer [33meach[0m over [33mfor[0m.
    for cud in @course.course_user_data do
    ^^^
app/controllers/assessment/SVN.rb:28:5: C: Use [33mnext[0m to skip iteration.
    for cud in @course.course_user_data do
    ^^^
app/controllers/assessment/SVN.rb:29:7: C: Use snake_case for variable names.
      oldRepo = assessment.aud_for(cud).repository
      ^^^^^^^
app/controllers/assessment/SVN.rb:43:7: C: Use snake_case for method names.
  def svnValidateHandin
      ^^^^^^^^^^^^^^^^^
app/controllers/assessment/SVN.rb:48:81: C: Line is too long. [99/80]
      flash[:error] = "Your repository has not been registered.  Please contact your course staff."
                                                                                ^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/SVN.rb:53:3: C: Assignment Branch Condition size for svnSaveHandin is too high. [27.82/15]
  def svnSaveHandin
  ^^^
app/controllers/assessment/SVN.rb:53:3: C: Method has too many lines. [25/10]
  def svnSaveHandin
  ^^^
app/controllers/assessment/SVN.rb:53:7: C: Use snake_case for method names.
  def svnSaveHandin
      ^^^^^^^^^^^^^
app/controllers/assessment/SVN.rb:59:5: C: Use snake_case for variable names.
    assDir = Rails.root("courses", @course.name, @assessment.name, @assessment.handin_directory)
    ^^^^^^
app/controllers/assessment/SVN.rb:59:81: C: Line is too long. [96/80]
    assDir = Rails.root("courses", @course.name, @assessment.name, @assessment.handin_directory)
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/assessment/SVN.rb:60:5: C: Use snake_case for variable names.
    svnDir = File.join(assDir, @cud.user.email + "_svn_checkout")
    ^^^^^^
app/controllers/assessment/SVN.rb:61:5: C: Use snake_case for variable names.
    svnTar = File.join(assDir, @cud.user.email + "_svn_checkout.tar.gz")
    ^^^^^^
app/controllers/assessment/SVN.rb:79:81: C: Line is too long. [90/80]
      flash[:error] = "There was a problem with checking out your work, please try again."
                                                                                ^^^^^^^^^^
app/controllers/assessment/SVN.rb:85:81: C: Line is too long. [86/80]
    @submission.saveFile(sub) # this will also save the submission model if successful
                                                                                ^^^^^^
app/controllers/assessment_user_data_controller.rb:1:1: C: Missing top-level class documentation comment.
class AssessmentUserDataController < ApplicationController
^^^^^
app/controllers/assessment_user_data_controller.rb:8:81: C: Line is too long. [96/80]
    @breadcrumbs << (view_context.link_to "Gradesheet", [:viewGradesheet, @course, @assessment])
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:7:1: C: Class definition is too long. [1184/100]
class AssessmentsController < ApplicationController
^^^^^
app/controllers/assessments_controller.rb:7:1: C: Missing top-level class documentation comment.
class AssessmentsController < ApplicationController
^^^^^
app/controllers/assessments_controller.rb:10:81: C: Line is too long. [81/80]
  autolabRequire Rails.root.join("app", "controllers", "assessment", "handin.rb")
                                                                                ^
app/controllers/assessments_controller.rb:13:81: C: Line is too long. [82/80]
  autolabRequire Rails.root.join("app", "controllers", "assessment", "handout.rb")
                                                                                ^^
app/controllers/assessments_controller.rb:16:81: C: Line is too long. [82/80]
  autolabRequire Rails.root.join("app", "controllers", "assessment", "grading.rb")
                                                                                ^^
app/controllers/assessments_controller.rb:19:81: C: Line is too long. [84/80]
  autolabRequire Rails.root.join("app", "controllers", "assessment", "autograde.rb")
                                                                                ^^^^
app/controllers/assessments_controller.rb:23:81: C: Line is too long. [98/80]
  before_action :set_assessment, except: [:index, :new, :create, :installQuiz, :installAssessment,
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:25:81: C: Line is too long. [86/80]
                                          :log_submit, :local_submit, :autograde_done]
                                                                                ^^^^^^
app/controllers/assessments_controller.rb:27:81: C: Line is too long. [85/80]
  # We have to do this here, because the modules don't inherit ApplicationController.
                                                                                ^^^^^
app/controllers/assessments_controller.rb:70:81: C: Line is too long. [166/80]
    @announcements = Announcement.where("start_date<? and end_date>? and (course_id=? or system) and !persistent", Time.now, Time.now, @course.id).order("start_date")
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:71:81: C: Line is too long. [103/80]
    @attachments = (@cud.instructor?) ? @course.attachments : @course.attachments.where(released: true)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:79:3: C: Method has too many lines. [12/10]
  def new
  ^^^
app/controllers/assessments_controller.rb:82:5: C: Use snake_case for variable names.
    @moduleDir = File.join(Rails.root, "lib", "modules")
    ^^^^^^^^^^
app/controllers/assessments_controller.rb:86:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if filename =~ /.*\.rb/
        ^^
app/controllers/assessments_controller.rb:90:5: W: Do not suppress exceptions.
    rescue Exception
    ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:90:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception
    ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:95:3: C: Assignment Branch Condition size for installQuiz is too high. [57.2/15]
  def installQuiz
  ^^^
app/controllers/assessments_controller.rb:95:3: C: Cyclomatic complexity for installQuiz is too high. [7/6]
  def installQuiz
  ^^^
app/controllers/assessments_controller.rb:95:3: C: Method has too many lines. [39/10]
  def installQuiz
  ^^^
app/controllers/assessments_controller.rb:95:3: C: Perceived complexity for installQuiz is too high. [8/7]
  def installQuiz
  ^^^
app/controllers/assessments_controller.rb:95:7: C: Use snake_case for method names.
  def installQuiz
      ^^^^^^^^^^^
app/controllers/assessments_controller.rb:104:9: C: Use snake_case for variable names.
        quizJSON = params[:quiz]
        ^^^^^^^^
app/controllers/assessments_controller.rb:105:9: C: Use snake_case for variable names.
        quizDisplayName = params[:quizName]
        ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:106:9: C: Use snake_case for variable names.
        quizName = quizDisplayName.downcase.gsub(/[^a-z0-9]/, "")
        ^^^^^^^^
app/controllers/assessments_controller.rb:107:81: C: Line is too long. [96/80]
        category_name = params[:new_category].blank? ? params[:category] : params[:new_category]
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:126:81: C: Line is too long. [103/80]
        @assessment.max_submissions = params.include?(:max_submissions) ? params[:max_submissions] : -1
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:130:9: C: Use snake_case for variable names.
        quizData = JSON.parse(quizJSON)
        ^^^^^^^^
app/controllers/assessments_controller.rb:142:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:153:3: C: Assignment Branch Condition size for takeQuiz is too high. [16.03/15]
  def takeQuiz
  ^^^
app/controllers/assessments_controller.rb:153:7: C: Use snake_case for method names.
  def takeQuiz
      ^^^^^^^^
app/controllers/assessments_controller.rb:154:81: C: Line is too long. [99/80]
    submission_count = @assessment.submissions.count(conditions: { course_user_datum_id: @cud.id })
                                                                                ^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:159:5: C: Use snake_case for variable names.
    @quizData = JSON.parse(@assessment.quizData)
    ^^^^^^^^^
app/controllers/assessments_controller.rb:160:5: C: Use snake_case for variable names.
    @submitPath = submitQuiz_course_assessment_path(@course, @assessment)
    ^^^^^^^^^^^
app/controllers/assessments_controller.rb:165:3: C: Assignment Branch Condition size for submitQuiz is too high. [36.24/15]
  def submitQuiz
  ^^^
app/controllers/assessments_controller.rb:165:3: C: Cyclomatic complexity for submitQuiz is too high. [7/6]
  def submitQuiz
  ^^^
app/controllers/assessments_controller.rb:165:3: C: Method has too many lines. [27/10]
  def submitQuiz
  ^^^
app/controllers/assessments_controller.rb:165:7: C: Use snake_case for method names.
  def submitQuiz
      ^^^^^^^^^^
app/controllers/assessments_controller.rb:166:81: C: Line is too long. [99/80]
    submission_count = @assessment.submissions.count(conditions: { course_user_datum_id: @cud.id })
                                                                                ^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:171:5: C: Use snake_case for variable names.
    @quizData = JSON.parse(@assessment.quizData)
    ^^^^^^^^^
app/controllers/assessments_controller.rb:175:7: C: Use snake_case for variable names.
      actualAnswer = @quizData[i]["answer"]
      ^^^^^^^^^^^^
app/controllers/assessments_controller.rb:176:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if (answer.to_i == actualAnswer)
      ^^
app/controllers/assessments_controller.rb:183:5: C: Use snake_case for variable names.
    quizScore = Score.new(score: score,
    ^^^^^^^^^
app/controllers/assessments_controller.rb:189:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless quizScore.save
    ^^^^^^
app/controllers/assessments_controller.rb:200:3: C: Method has too many lines. [18/10]
  def installAssessment
  ^^^
app/controllers/assessments_controller.rb:200:7: C: Use snake_case for method names.
  def installAssessment
      ^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:201:5: C: Use snake_case for variable names.
    @assignDir = File.join(Rails.root, "courses", @course.name)
    ^^^^^^^^^^
app/controllers/assessments_controller.rb:202:5: C: Use snake_case for variable names.
    @availableAssessments = []
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:207:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if filename =~ /[^a-z0-9]/
          ^^
app/controllers/assessments_controller.rb:213:11: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          unless assessment
          ^^^^^^
app/controllers/assessments_controller.rb:218:7: C: Use snake_case for variable names.
      @availableAssessments = @availableAssessments.sort
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:219:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => error
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:225:3: C: Assignment Branch Condition size for importAsmtFromTar is too high. [90.76/15]
  def importAsmtFromTar
  ^^^
app/controllers/assessments_controller.rb:225:3: C: Cyclomatic complexity for importAsmtFromTar is too high. [24/6]
  def importAsmtFromTar
  ^^^
app/controllers/assessments_controller.rb:225:3: C: Method has too many lines. [89/10]
  def importAsmtFromTar
  ^^^
app/controllers/assessments_controller.rb:225:3: C: Perceived complexity for importAsmtFromTar is too high. [28/7]
  def importAsmtFromTar
  ^^^
app/controllers/assessments_controller.rb:225:7: C: Use snake_case for method names.
  def importAsmtFromTar
      ^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:228:5: C: Use snake_case for variable names.
    tarFile = params["tarFile"]
    ^^^^^^^
app/controllers/assessments_controller.rb:234:7: C: Use snake_case for variable names.
      tarFile = File.new(tarFile.open, "rb")
      ^^^^^^^
app/controllers/assessments_controller.rb:257:16: C: Use [33mnext[0m to skip iteration.
      dir_list.each do |dir|
               ^^^^
app/controllers/assessments_controller.rb:274:81: C: Line is too long. [94/80]
      valid_file = (valid_file != false) && !asmt_name.nil? && asmt_rb_exist && asmt_yml_exist
                                                                                ^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:276:81: C: Line is too long. [94/80]
        flash[:error] = "Invalid tarball. Please verify the existence of configuration files."
                                                                                ^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:279:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:285:81: C: Line is too long. [116/80]
      flash[:error] = "An assessment with the same name already exists for the course. Please use a different name."
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:300:81: C: Line is too long. [84/80]
          FileUtils.mkdir_p File.join(course_root, File.dirname(relative_pathname)),
                                                                                ^^^^
app/controllers/assessments_controller.rb:305:81: C: Line is too long. [87/80]
          FileUtils.chmod entry.header.mode, File.join(course_root, relative_pathname),
                                                                                ^^^^^^^
app/controllers/assessments_controller.rb:308:81: C: Line is too long. [87/80]
          File.symlink entry.header.linkname, File.join(course_root, relative_pathname)
                                                                                ^^^^^^^
app/controllers/assessments_controller.rb:312:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:313:81: C: Line is too long. [81/80]
      flash[:error] = "Error while extracting tarball to server -- #{e.message}."
                                                                                ^
app/controllers/assessments_controller.rb:324:3: C: Assignment Branch Condition size for importAssessment is too high. [30.43/15]
  def importAssessment
  ^^^
app/controllers/assessments_controller.rb:324:3: C: Cyclomatic complexity for importAssessment is too high. [8/6]
  def importAssessment
  ^^^
app/controllers/assessments_controller.rb:324:3: C: Method has too many lines. [21/10]
  def importAssessment
  ^^^
app/controllers/assessments_controller.rb:324:3: C: Perceived complexity for importAssessment is too high. [10/7]
  def importAssessment
  ^^^
app/controllers/assessments_controller.rb:324:7: C: Use snake_case for method names.
  def importAssessment
      ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:326:81: C: Line is too long. [82/80]
    filename = File.join(Rails.root, "courses", @course.name, name, "#{name}.yml")
                                                                                ^^
app/controllers/assessments_controller.rb:342:81: C: Line is too long. [85/80]
      props["general"]["category_name"] ||= props["general"]["category"] || "General"
                                                                                ^^^^^
app/controllers/assessments_controller.rb:358:3: C: Assignment Branch Condition size for create is too high. [96.62/15]
  def create
  ^^^
app/controllers/assessments_controller.rb:358:3: C: Cyclomatic complexity for create is too high. [21/6]
  def create
  ^^^
app/controllers/assessments_controller.rb:358:3: C: Method has too many lines. [65/10]
  def create
  ^^^
app/controllers/assessments_controller.rb:358:3: C: Perceived complexity for create is too high. [21/7]
  def create
  ^^^
app/controllers/assessments_controller.rb:363:7: C: Use snake_case for variable names.
      assName = @assessment.display_name.downcase.gsub(/[^a-z0-9]/, "")
      ^^^^^^^
app/controllers/assessments_controller.rb:377:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:382:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e2
      ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:400:81: C: Line is too long. [99/80]
    @assessment.max_submissions = params.include?(:max_submissions) ? params[:max_submissions] : -1
                                                                                ^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:404:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:404:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessments_controller.rb:413:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if !File.exist?(f) && !put_props
      ^^
app/controllers/assessments_controller.rb:416:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:425:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:437:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:438:9: C: Do not write to stdout. Use Rails' logger if you want to log.
        puts "\n\n ERROR: \n #{e} \n #{e.backtrace} \n"
        ^^^^
app/controllers/assessments_controller.rb:448:3: C: Assignment Branch Condition size for assessmentInitialize is too high. [16.4/15]
  def assessmentInitialize(assignName)
  ^^^
app/controllers/assessments_controller.rb:448:3: C: Method has too many lines. [15/10]
  def assessmentInitialize(assignName)
  ^^^
app/controllers/assessments_controller.rb:448:7: C: Use snake_case for method names.
  def assessmentInitialize(assignName)
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:450:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless @assessment
    ^^^^^^
app/controllers/assessments_controller.rb:476:3: C: Method has too many lines. [13/10]
  def installProblems
  ^^^
app/controllers/assessments_controller.rb:476:7: C: Use snake_case for method names.
  def installProblems
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:477:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless @cud.instructor?
    ^^^^^^
app/controllers/assessments_controller.rb:481:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if Problem.where(assessment_id: @assessment.id).count == 0
    ^^
app/controllers/assessments_controller.rb:482:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @problems do
      ^^^
app/controllers/assessments_controller.rb:510:3: C: Assignment Branch Condition size for grade is too high. [19.95/15]
  def grade
  ^^^
app/controllers/assessments_controller.rb:510:3: C: Method has too many lines. [12/10]
  def grade
  ^^^
app/controllers/assessments_controller.rb:515:7: C: Use snake_case for variable names.
      subFile = File.join(Rails.root, "courses",
      ^^^^^^^
app/controllers/assessments_controller.rb:519:7: C: Use snake_case for variable names.
      @submissionData = File.read(subFile)
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:521:7: C: Use snake_case for variable names.
      @submissionData = "Could not read #{subFile}"
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:526:7: C: Use snake_case for method names.
  def getAssessmentVariable(key)
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:537:3: C: Assignment Branch Condition size for export is too high. [49.59/15]
  def export
  ^^^
app/controllers/assessments_controller.rb:537:3: C: Method has too many lines. [33/10]
  def export
  ^^^
app/controllers/assessments_controller.rb:546:7: C: Use snake_case for variable names.
      tarStream = StringIO.new("")
      ^^^^^^^^^
app/controllers/assessments_controller.rb:551:36: W: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the [33m/[0m if it should be a division.
          relative_path = file.sub /^#{Regexp.escape base_path}\/?/, ""
                                   ^
app/controllers/assessments_controller.rb:555:81: C: Line is too long. [101/80]
          elsif !relative_path.starts_with? File.join(@assessment.name, @assessment.handin_directory)
                                                                                ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:564:81: C: Line is too long. [160/80]
      send_data tarStream.string.force_encoding("binary"), filename: "#{@assessment.name}_#{Time.now.strftime('%Y%m%d')}.tar", content_type: "application/x-tar"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:565:31: W: Useless assignment to variable - [33me[0m.
    rescue SystemCallError => e
                              ^
app/controllers/assessments_controller.rb:568:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:579:3: C: Assignment Branch Condition size for import is too high. [66.59/15]
  def import
  ^^^
app/controllers/assessments_controller.rb:579:3: C: Cyclomatic complexity for import is too high. [14/6]
  def import
  ^^^
app/controllers/assessments_controller.rb:579:3: C: Method has too many lines. [52/10]
  def import
  ^^^
app/controllers/assessments_controller.rb:579:3: C: Perceived complexity for import is too high. [16/7]
  def import
  ^^^
app/controllers/assessments_controller.rb:581:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if !props || !props["general"]
    ^^
app/controllers/assessments_controller.rb:588:5: C: Use snake_case for variable names.
    catName = general["category"] || @assessment.category_name
    ^^^^^^^
app/controllers/assessments_controller.rb:590:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if !catName || catName.blank?
    ^^
app/controllers/assessments_controller.rb:591:7: C: Use snake_case for variable names.
      catName = "Default"
      ^^^^^^^
app/controllers/assessments_controller.rb:603:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in problems do
      ^^^
app/controllers/assessments_controller.rb:616:81: C: Line is too long. [82/80]
      autograde_prop = AutogradingSetup.where(assessment_id: @assessment.id).first
                                                                                ^^
app/controllers/assessments_controller.rb:632:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if !scoreboard.nil? && !scoreboard.empty?
    ^^
app/controllers/assessments_controller.rb:633:81: C: Line is too long. [82/80]
      scoreboard_prop = ScoreboardSetup.where(assessment_id: @assessment.id).first
                                                                                ^^
app/controllers/assessments_controller.rb:649:5: C: Prefer [33meach[0m over [33mfor[0m.
    for submission in @assessment.submissions do
    ^^^
app/controllers/assessments_controller.rb:653:5: C: Prefer [33meach[0m over [33mfor[0m.
    for attachment in @assessment.attachments do
    ^^^
app/controllers/assessments_controller.rb:664:3: C: Assignment Branch Condition size for show is too high. [52.84/15]
  def show
  ^^^
app/controllers/assessments_controller.rb:664:3: C: Cyclomatic complexity for show is too high. [7/6]
  def show
  ^^^
app/controllers/assessments_controller.rb:664:3: C: Method has too many lines. [45/10]
  def show
  ^^^
app/controllers/assessments_controller.rb:664:3: C: Perceived complexity for show is too high. [8/7]
  def show
  ^^^
app/controllers/assessments_controller.rb:679:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if params[:cud_id]
    ^^
app/controllers/assessments_controller.rb:683:5: C: Use snake_case for variable names.
    @startTime = Time.now
    ^^^^^^^^^^
app/controllers/assessments_controller.rb:685:7: C: Use snake_case for variable names.
      @effectiveCud = @course.course_user_data.find(params[:cud_id])
      ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:687:7: C: Use snake_case for variable names.
      @effectiveCud = @cud
      ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:689:81: C: Line is too long. [110/80]
    @submissions = @assessment.submissions.where(course_user_datum_id: @effectiveCud.id).order("version DESC")
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:690:81: C: Line is too long. [87/80]
    @extension = @assessment.extensions.find_by(course_user_datum_id: @effectiveCud.id)
                                                                                ^^^^^^^
app/controllers/assessments_controller.rb:705:5: C: Prefer [33meach[0m over [33mfor[0m.
    for result in results do
    ^^^
app/controllers/assessments_controller.rb:706:7: C: Use snake_case for variable names.
      subId = result["submission_id"].to_i
      ^^^^^
app/controllers/assessments_controller.rb:707:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless @scores.key?(subId)
      ^^^^^^
app/controllers/assessments_controller.rb:726:3: C: Assignment Branch Condition size for history is too high. [48.05/15]
  def history
  ^^^
app/controllers/assessments_controller.rb:726:3: C: Cyclomatic complexity for history is too high. [8/6]
  def history
  ^^^
app/controllers/assessments_controller.rb:726:3: C: Method has too many lines. [40/10]
  def history
  ^^^
app/controllers/assessments_controller.rb:726:3: C: Perceived complexity for history is too high. [9/7]
  def history
  ^^^
app/controllers/assessments_controller.rb:728:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if params[:cud_id]
    ^^
app/controllers/assessments_controller.rb:732:5: C: Use snake_case for variable names.
    @startTime = Time.now
    ^^^^^^^^^^
app/controllers/assessments_controller.rb:734:7: C: Use snake_case for variable names.
      @effectiveCud = @course.course_user_data.find(params[:cud_id])
      ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:736:7: C: Use snake_case for variable names.
      @effectiveCud = @cud
      ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:738:81: C: Line is too long. [110/80]
    @submissions = @assessment.submissions.where(course_user_datum_id: @effectiveCud.id).order("version DESC")
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:739:81: C: Line is too long. [87/80]
    @extension = @assessment.extensions.find_by(course_user_datum_id: @effectiveCud.id)
                                                                                ^^^^^^^
app/controllers/assessments_controller.rb:754:5: C: Prefer [33meach[0m over [33mfor[0m.
    for result in results do
    ^^^
app/controllers/assessments_controller.rb:755:7: C: Use snake_case for variable names.
      subId = result["submission_id"].to_i
      ^^^^^
app/controllers/assessments_controller.rb:756:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless @scores.key?(subId)
      ^^^^^^
app/controllers/assessments_controller.rb:773:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if params[:partial]
    ^^
app/controllers/assessments_controller.rb:780:3: C: Assignment Branch Condition size for viewFeedback is too high. [25.48/15]
  def viewFeedback
  ^^^
app/controllers/assessments_controller.rb:780:3: C: Cyclomatic complexity for viewFeedback is too high. [9/6]
  def viewFeedback
  ^^^
app/controllers/assessments_controller.rb:780:3: C: Method has too many lines. [15/10]
  def viewFeedback
  ^^^
app/controllers/assessments_controller.rb:780:3: C: Perceived complexity for viewFeedback is too high. [9/7]
  def viewFeedback
  ^^^
app/controllers/assessments_controller.rb:780:7: C: Use snake_case for method names.
  def viewFeedback
      ^^^^^^^^^^^^
app/controllers/assessments_controller.rb:784:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless @score
    ^^^^^^
app/controllers/assessments_controller.rb:796:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if Archive.is_archive? @submission.handin_file_path
    ^^
app/controllers/assessments_controller.rb:802:3: C: Assignment Branch Condition size for downloadFeedbackFile is too high. [17.29/15]
  def downloadFeedbackFile
  ^^^
app/controllers/assessments_controller.rb:802:3: C: Method has too many lines. [13/10]
  def downloadFeedbackFile
  ^^^
app/controllers/assessments_controller.rb:802:7: C: Use snake_case for method names.
  def downloadFeedbackFile
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:805:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @score.feedback_file.nil?
    ^^
app/controllers/assessments_controller.rb:809:81: C: Line is too long. [81/80]
      send_data(@score.feedback_file,        filename: @score.feedback_file_name,
                                                                                ^
app/controllers/assessments_controller.rb:812:81: C: Line is too long. [81/80]
      send_data(@score.feedback_file,        filename: @score.feedback_file_name,
                                                                                ^
app/controllers/assessments_controller.rb:821:3: W: Do not suppress exceptions.
  rescue Exception => @error
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:821:3: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
  rescue Exception => @error
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:851:7: C: Use snake_case for method names.
  def releaseAllGrades
      ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:856:43: C: Favor [33mformat[0m over [33mString#%[0m.
      flash[:success] = "%d %s released." % [num_released, (num_released > 1 ? "grades were" : "grade was")]
                                          ^
app/controllers/assessments_controller.rb:856:81: C: Line is too long. [108/80]
      flash[:success] = "%d %s released." % [num_released, (num_released > 1 ? "grades were" : "grade was")]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:858:81: C: Line is too long. [91/80]
      flash[:error] = "No grades were released. They might have all already been released."
                                                                                ^^^^^^^^^^^
app/controllers/assessments_controller.rb:864:3: C: Assignment Branch Condition size for releaseSectionGrades is too high. [22.83/15]
  def releaseSectionGrades
  ^^^
app/controllers/assessments_controller.rb:864:3: C: Cyclomatic complexity for releaseSectionGrades is too high. [7/6]
  def releaseSectionGrades
  ^^^
app/controllers/assessments_controller.rb:864:3: C: Method has too many lines. [14/10]
  def releaseSectionGrades
  ^^^
app/controllers/assessments_controller.rb:864:3: C: Perceived complexity for releaseSectionGrades is too high. [8/7]
  def releaseSectionGrades
  ^^^
app/controllers/assessments_controller.rb:864:7: C: Use snake_case for method names.
  def releaseSectionGrades
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:865:81: C: Line is too long. [88/80]
    unless @cud.section? && !@cud.section.empty? && @cud.lecture && !@cud.lecture.empty?
                                                                                ^^^^^^^^
app/controllers/assessments_controller.rb:866:81: C: Line is too long. [110/80]
      flash[:error] = "You haven't been assigned to a lecture and/or section. Please contact your instructor."
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:871:81: C: Line is too long. [101/80]
    num_released = releaseMatchingGrades { |submission, _| @cud.CA_of? submission.course_user_datum }
                                                                                ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:874:43: C: Favor [33mformat[0m over [33mString#%[0m.
      flash[:success] = "%d %s released." % [num_released, (num_released > 1 ? "grades were" : "grade was")]
                                          ^
app/controllers/assessments_controller.rb:874:81: C: Line is too long. [108/80]
      flash[:success] = "%d %s released." % [num_released, (num_released > 1 ? "grades were" : "grade was")]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:877:81: C: Line is too long. [102/80]
                      "Either they were all already released or you might be assigned to a lecture " \
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:878:81: C: Line is too long. [88/80]
                      "and/or section that doesn't exist. Please contact an instructor."
                                                                                ^^^^^^^^
app/controllers/assessments_controller.rb:884:7: C: Use snake_case for method names.
  def withdrawAllGrades
      ^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:904:3: C: Assignment Branch Condition size for writeup is too high. [17.72/15]
  def writeup
  ^^^
app/controllers/assessments_controller.rb:904:3: C: Method has too many lines. [19/10]
  def writeup
  ^^^
app/controllers/assessments_controller.rb:910:5: C: Do not write to stdout. Use Rails' logger if you want to log.
    print "\n\n\n"
    ^^^^^
app/controllers/assessments_controller.rb:911:5: C: Do not write to stdout. Use Rails' logger if you want to log.
    print @assessment.writeup_path
    ^^^^^
app/controllers/assessments_controller.rb:933:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless name.blank?
    ^^^^^^
app/controllers/assessments_controller.rb:944:3: C: Assignment Branch Condition size for adminAutograde is too high. [22.56/15]
  def adminAutograde
  ^^^
app/controllers/assessments_controller.rb:944:3: C: Method has too many lines. [19/10]
  def adminAutograde
  ^^^
app/controllers/assessments_controller.rb:944:7: C: Use snake_case for method names.
  def adminAutograde
      ^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:947:81: C: Line is too long. [83/80]
      @autograde_prop = AutogradingSetup.where(assessment_id: @assessment.id).first
                                                                                ^^^
app/controllers/assessments_controller.rb:951:81: C: Line is too long. [87/80]
        flash[:error] = "Errors prevented the autograding properties from being saved."
                                                                                ^^^^^^^
app/controllers/assessments_controller.rb:958:81: C: Line is too long. [83/80]
      @autograde_prop = AutogradingSetup.where(assessment_id: @assessment.id).first
                                                                                ^^^
app/controllers/assessments_controller.rb:971:3: C: Assignment Branch Condition size for adminScoreboard is too high. [31/15]
  def adminScoreboard
  ^^^
app/controllers/assessments_controller.rb:971:3: C: Cyclomatic complexity for adminScoreboard is too high. [7/6]
  def adminScoreboard
  ^^^
app/controllers/assessments_controller.rb:971:3: C: Method has too many lines. [24/10]
  def adminScoreboard
  ^^^
app/controllers/assessments_controller.rb:971:3: C: Perceived complexity for adminScoreboard is too high. [9/7]
  def adminScoreboard
  ^^^
app/controllers/assessments_controller.rb:971:7: C: Use snake_case for method names.
  def adminScoreboard
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:979:7: W: Useless assignment to variable - [33mcolspec[0m.
      colspec = params[:scoreboard_prop][:colspec]
      ^^^^^^^
app/controllers/assessments_controller.rb:980:81: C: Line is too long. [83/80]
      @scoreboard_prop = ScoreboardSetup.where(assessment_id: @assessment.id).first
                                                                                ^^^
app/controllers/assessments_controller.rb:985:81: C: Line is too long. [86/80]
        flash[:error] = "Errors prevented the scoreboard properties from being saved."
                                                                                ^^^^^^
app/controllers/assessments_controller.rb:991:81: C: Line is too long. [83/80]
      @scoreboard_prop = ScoreboardSetup.where(assessment_id: @assessment.id).first
                                                                                ^^^
app/controllers/assessments_controller.rb:1008:3: C: Assignment Branch Condition size for scoreboard is too high. [91.58/15]
  def scoreboard
  ^^^
app/controllers/assessments_controller.rb:1008:3: C: Cyclomatic complexity for scoreboard is too high. [18/6]
  def scoreboard
  ^^^
app/controllers/assessments_controller.rb:1008:3: C: Method has too many lines. [94/10]
  def scoreboard
  ^^^
app/controllers/assessments_controller.rb:1008:3: C: Perceived complexity for scoreboard is too high. [21/7]
  def scoreboard
  ^^^
app/controllers/assessments_controller.rb:1010:81: C: Line is too long. [120/80]
    @students = CourseUserDatum.joins("INNER JOIN submissions ON course_user_datum.id=submissions.course_user_datum_id")
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1017:5: C: Use snake_case for variable names.
    problemQuery = "SELECT scores.score AS score,
    ^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1031:5: C: Prefer [33meach[0m over [33mfor[0m.
    for row in result do
    ^^^
app/controllers/assessments_controller.rb:1057:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1059:9: C: Use snake_case for variable names.
        @errorMessage = "An error occurred while calling scoreboardHeader()"
        ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1068:5: C: Prefer [33meach[0m over [33mfor[0m.
    for grade in @grades.values do
    ^^^
app/controllers/assessments_controller.rb:1080:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1086:11: C: Use snake_case for variable names.
          @errorMessage = "An error occurred while calling " \
          ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1105:5: C: Use snake_case for variable names.
    @sortedGrades = @grades.values.sort do|a, b|
    ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1114:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1116:11: C: Use snake_case for variable names.
          @errorMessage = "An error occurred while calling "\
          ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1127:81: C: Line is too long. [95/80]
      @colspec = ActiveSupport::JSON.decode(@assessment.scoreboard_setup.colspec)["scoreboard"]
                                                                                ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1137:3: C: Assignment Branch Condition size for setupAssessment is too high. [22.34/15]
  def setupAssessment(assName)
  ^^^
app/controllers/assessments_controller.rb:1137:3: C: Method has too many lines. [20/10]
  def setupAssessment(assName)
  ^^^
app/controllers/assessments_controller.rb:1137:7: C: Use snake_case for method names.
  def setupAssessment(assName)
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1140:5: C: Use snake_case for variable names.
    assDir = File.join(Rails.root, "courses", @course.name, assName)
    ^^^^^^
app/controllers/assessments_controller.rb:1141:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless File.directory?(assDir)
    ^^^^^^
app/controllers/assessments_controller.rb:1146:5: C: Use snake_case for variable names.
    defaultName = File.join(Rails.root, "lib", "__defaultAssessment.rb")
    ^^^^^^^^^^^
app/controllers/assessments_controller.rb:1147:5: C: Use snake_case for variable names.
    defaultConfigFile = File.open(defaultName, "r")
    ^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1148:5: C: Use snake_case for variable names.
    defaultConfig = defaultConfigFile.read
    ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1155:5: C: Use snake_case for variable names.
    assessmentConfigName = File.join(assDir, "#{assName}.rb")
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1158:7: C: Use snake_case for variable names.
      assessmentConfigFile = File.open(assessmentConfigName, "w")
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1164:5: C: Use snake_case for variable names.
    handinDir = File.join(assDir, "handin")
    ^^^^^^^^^
app/controllers/assessments_controller.rb:1165:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless File.directory?(handinDir)
    ^^^^^^
app/controllers/assessments_controller.rb:1165:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless File.directory?(handinDir)
    ^^^^^^
app/controllers/assessments_controller.rb:1171:7: C: Use snake_case for method names.
  def updateScore(_user, score)
      ^^^^^^^^^^^
app/controllers/assessments_controller.rb:1177:7: C: Use snake_case for method names.
  def loadHandinPage
      ^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1183:3: C: Assignment Branch Condition size for put_props is too high. [96.6/15]
  def put_props
  ^^^
app/controllers/assessments_controller.rb:1183:3: C: Cyclomatic complexity for put_props is too high. [16/6]
  def put_props
  ^^^
app/controllers/assessments_controller.rb:1183:3: C: Method has too many lines. [64/10]
  def put_props
  ^^^
app/controllers/assessments_controller.rb:1183:3: C: Perceived complexity for put_props is too high. [16/7]
  def put_props
  ^^^
app/controllers/assessments_controller.rb:1204:81: C: Line is too long. [81/80]
    props["general"]["display_name"] = "" unless props["general"]["display_name"]
                                                                                ^
app/controllers/assessments_controller.rb:1206:81: C: Line is too long. [87/80]
    props["general"]["handin_filename"] = "" unless props["general"]["handin_filename"]
                                                                                ^^^^^^^
app/controllers/assessments_controller.rb:1207:81: C: Line is too long. [89/80]
    props["general"]["handin_directory"] = "" unless props["general"]["handin_directory"]
                                                                                ^^^^^^^^^
app/controllers/assessments_controller.rb:1208:81: C: Line is too long. [84/80]
    props["general"]["max_grace_days"] = 0 unless props["general"]["max_grace_days"]
                                                                                ^^^^
app/controllers/assessments_controller.rb:1211:81: C: Line is too long. [92/80]
    props["general"]["allow_unofficial"] = false unless props["general"]["allow_unofficial"]
                                                                                ^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1212:81: C: Line is too long. [90/80]
    props["general"]["disable_handins"] = false unless props["general"]["disable_handins"]
                                                                                ^^^^^^^^^^
app/controllers/assessments_controller.rb:1213:81: C: Line is too long. [87/80]
    props["general"]["max_submissions"] = -1 unless props["general"]["max_submissions"]
                                                                                ^^^^^^^
app/controllers/assessments_controller.rb:1222:5: C: Prefer [33meach[0m over [33mfor[0m.
    for p in probs do
    ^^^
app/controllers/assessments_controller.rb:1259:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1259:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessments_controller.rb:1266:3: C: Assignment Branch Condition size for emitColSpec is too high. [25.69/15]
  def emitColSpec(colspec)
  ^^^
app/controllers/assessments_controller.rb:1266:3: C: Cyclomatic complexity for emitColSpec is too high. [9/6]
  def emitColSpec(colspec)
  ^^^
app/controllers/assessments_controller.rb:1266:3: C: Method has too many lines. [30/10]
  def emitColSpec(colspec)
  ^^^
app/controllers/assessments_controller.rb:1266:3: C: Perceived complexity for emitColSpec is too high. [10/7]
  def emitColSpec(colspec)
  ^^^
app/controllers/assessments_controller.rb:1266:7: C: Use snake_case for method names.
  def emitColSpec(colspec)
      ^^^^^^^^^^^
app/controllers/assessments_controller.rb:1271:81: C: Line is too long. [88/80]
      quoted = colspec.gsub(/([a-zA-Z0-9]+):/, '"\1":').gsub(/:([a-zA-Z0-9]+)/, ':"\1"')
                                                                                ^^^^^^^^
app/controllers/assessments_controller.rb:1273:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1273:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessments_controller.rb:1280:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @assessment.problems do
      ^^^
app/controllers/assessments_controller.rb:1289:5: C: Prefer [33meach[0m over [33mfor[0m.
    for hash in parsed["scoreboard"] do
    ^^^
app/controllers/assessments_controller.rb:1297:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if i < 3
      ^^
app/controllers/assessments_controller.rb:1318:3: C: Assignment Branch Condition size for scoreboardOrderSubmissions is too high. [77.9/15]
  def scoreboardOrderSubmissions(a, b)
  ^^^
app/controllers/assessments_controller.rb:1318:3: C: Cyclomatic complexity for scoreboardOrderSubmissions is too high. [23/6]
  def scoreboardOrderSubmissions(a, b)
  ^^^
app/controllers/assessments_controller.rb:1318:3: C: Method has too many lines. [53/10]
  def scoreboardOrderSubmissions(a, b)
  ^^^
app/controllers/assessments_controller.rb:1318:3: C: Perceived complexity for scoreboardOrderSubmissions is too high. [29/7]
  def scoreboardOrderSubmissions(a, b)
  ^^^
app/controllers/assessments_controller.rb:1318:7: C: Use snake_case for method names.
  def scoreboardOrderSubmissions(a, b)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1324:7: C: Use snake_case for variable names.
      aSum = 0; bSum = 0
      ^^^^
app/controllers/assessments_controller.rb:1324:15: C: Do not use semicolons to terminate expressions.
      aSum = 0; bSum = 0
              ^
app/controllers/assessments_controller.rb:1324:17: C: Use snake_case for variable names.
      aSum = 0; bSum = 0
                ^^^^
app/controllers/assessments_controller.rb:1325:7: C: Prefer [33meach[0m over [33mfor[0m.
      for key in a[:problems].keys do
      ^^^
app/controllers/assessments_controller.rb:1326:9: C: Use snake_case for variable names.
        aSum += a[:problems][key].to_f
        ^^^^
app/controllers/assessments_controller.rb:1328:7: C: Prefer [33meach[0m over [33mfor[0m.
      for key in b[:problems].keys do
      ^^^
app/controllers/assessments_controller.rb:1329:9: C: Use snake_case for variable names.
        bSum += b[:problems][key].to_f
        ^^^^
app/controllers/assessments_controller.rb:1352:7: W: Do not suppress exceptions.
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1352:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1352:27: W: Useless assignment to variable - [33me[0m.
      rescue Exception => e
                          ^
app/controllers/assessments_controller.rb:1395:3: C: Assignment Branch Condition size for createScoreboardEntry is too high. [35.37/15]
  def createScoreboardEntry(scores, autoresult)
  ^^^
app/controllers/assessments_controller.rb:1395:3: C: Cyclomatic complexity for createScoreboardEntry is too high. [14/6]
  def createScoreboardEntry(scores, autoresult)
  ^^^
app/controllers/assessments_controller.rb:1395:3: C: Method has too many lines. [32/10]
  def createScoreboardEntry(scores, autoresult)
  ^^^
app/controllers/assessments_controller.rb:1395:3: C: Perceived complexity for createScoreboardEntry is too high. [14/7]
  def createScoreboardEntry(scores, autoresult)
  ^^^
app/controllers/assessments_controller.rb:1395:7: C: Use snake_case for method names.
  def createScoreboardEntry(scores, autoresult)
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1406:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @assessment.problems do
      ^^^
app/controllers/assessments_controller.rb:1413:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @assessment.problems do
      ^^^
app/controllers/assessments_controller.rb:1425:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1425:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessments_controller.rb:1434:9: C: Prefer [33meach[0m over [33mfor[0m.
        for item in parsed["scoreboard"] do
        ^^^
app/controllers/assessments_controller.rb:1434:13: W: Useless assignment to variable - [33mitem[0m.
        for item in parsed["scoreboard"] do
            ^^^^
app/controllers/assessments_controller.rb:1456:3: C: Assignment Branch Condition size for scoreboardHeader is too high. [33.23/15]
  def scoreboardHeader
  ^^^
app/controllers/assessments_controller.rb:1456:3: C: Cyclomatic complexity for scoreboardHeader is too high. [9/6]
  def scoreboardHeader
  ^^^
app/controllers/assessments_controller.rb:1456:3: C: Method has too many lines. [26/10]
  def scoreboardHeader
  ^^^
app/controllers/assessments_controller.rb:1456:3: C: Perceived complexity for scoreboardHeader is too high. [9/7]
  def scoreboardHeader
  ^^^
app/controllers/assessments_controller.rb:1456:7: C: Use snake_case for method names.
  def scoreboardHeader
      ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1458:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @grades.values.empty?
    ^^
app/controllers/assessments_controller.rb:1463:81: C: Line is too long. [81/80]
    @scoreboard_prop = ScoreboardSetup.where(assessment_id: @assessment.id).first
                                                                                ^
app/controllers/assessments_controller.rb:1478:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @assessment.problems do
      ^^^
app/controllers/assessments_controller.rb:1490:5: C: Prefer [33meach[0m over [33mfor[0m.
    for object in parsed["scoreboard"] do
    ^^^
app/controllers/assessments_controller.rb:1499:3: C: Assignment Branch Condition size for get_props is too high. [27.59/15]
  def get_props
  ^^^
app/controllers/assessments_controller.rb:1499:3: C: Method has too many lines. [17/10]
  def get_props
  ^^^
app/controllers/assessments_controller.rb:1499:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_props
      ^^^^^^^^^
app/controllers/assessments_controller.rb:1522:3: C: Assignment Branch Condition size for releaseMatchingGrades is too high. [15.94/15]
  def releaseMatchingGrades
  ^^^
app/controllers/assessments_controller.rb:1522:3: C: Method has too many lines. [20/10]
  def releaseMatchingGrades
  ^^^
app/controllers/assessments_controller.rb:1522:7: C: Use snake_case for method names.
  def releaseMatchingGrades
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1555:81: C: Line is too long. [104/80]
    params[:autograde_prop].permit(:assessment_id, :autograde_timeout, :autograde_image, :release_score)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1569:81: C: Line is too long. [108/80]
    ass.permit(:name, :display_name, :category_name, :has_autograde, :has_svn, :has_scoreboard, :group_size)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:1:1: C: Missing top-level class documentation comment.
class AttachmentsController < ApplicationController
^^^^^
app/controllers/attachments_controller.rb:3:81: C: Line is too long. [87/80]
  # this will also set an @is_assessment variable based on the result of is_assessment?
                                                                                ^^^^^^^
app/controllers/attachments_controller.rb:10:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if @is_assessment
    ^^
app/controllers/attachments_controller.rb:10:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @is_assessment
    ^^
app/controllers/attachments_controller.rb:21:81: C: Line is too long. [94/80]
    @attachment = Attachment.new(course_id: @course.id, assessment_id: params[:assessment_id])
                                                                                ^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:24:81: C: Line is too long. [98/80]
        redirect_to(course_assessment_attachments_path(@course, @attachment.assessment)) && return
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:33:3: C: Assignment Branch Condition size for show is too high. [20.71/15]
  def show
  ^^^
app/controllers/attachments_controller.rb:33:3: C: Method has too many lines. [11/10]
  def show
  ^^^
app/controllers/attachments_controller.rb:41:81: C: Line is too long. [86/80]
      flash[:error] = "Error loading #{@attachment.name} from #{@attachment.filename}"
                                                                                ^^^^^^
app/controllers/attachments_controller.rb:44:81: C: Line is too long. [117/80]
    send_file(filename, disposition: "inline", type: @attachment.mime_type, filename: @attachment.filename) && return
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:50:81: C: Line is too long. [107/80]
      @attachment = @course.attachments.where(assessment_id: params[:assessment_id], id: params[:id]).first
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:57:3: C: Assignment Branch Condition size for update is too high. [21.93/15]
  def update
  ^^^
app/controllers/attachments_controller.rb:57:3: C: Cyclomatic complexity for update is too high. [7/6]
  def update
  ^^^
app/controllers/attachments_controller.rb:57:3: C: Method has too many lines. [12/10]
  def update
  ^^^
app/controllers/attachments_controller.rb:57:3: C: Perceived complexity for update is too high. [9/7]
  def update
  ^^^
app/controllers/attachments_controller.rb:59:81: C: Line is too long. [90/80]
      @attachment = @course.attachments.where(assessment_id: params[:assessment_id]).first
                                                                                ^^^^^^^^^^
app/controllers/attachments_controller.rb:61:81: C: Line is too long. [98/80]
        redirect_to(course_assessment_attachments_path(@course, @attachment.assessment)) && return
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:63:81: C: Line is too long. [84/80]
        redirect_to([:edit, @course, @attachment.assessment, @attachment]) && return
                                                                                ^^^^
app/controllers/attachments_controller.rb:77:81: C: Line is too long. [96/80]
      redirect_to(course_assessment_attachments_path(@course, params[:assessment_id])) && return
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:85:7: C: Rename [33mis_assessment?[0m to [33massessment?[0m.
  def is_assessment?
      ^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:91:81: C: Line is too long. [107/80]
      @breadcrumbs << (view_context.link_to "Assessment Attachments", [@course, @assessment, :attachments])
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/attachments_controller.rb:93:81: C: Line is too long. [90/80]
      @breadcrumbs << (view_context.link_to "Course Attachments", [@course, :attachments])
                                                                                ^^^^^^^^^^
app/controllers/course_user_data_controller.rb:1:1: C: Class definition is too long. [195/100]
class CourseUserDataController < ApplicationController
^^^^^
app/controllers/course_user_data_controller.rb:1:1: C: Missing top-level class documentation comment.
class CourseUserDataController < ApplicationController
^^^^^
app/controllers/course_user_data_controller.rb:6:5: C: Use snake_case for variable names.
    @requestedUser = @cud
    ^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:12:5: C: Use snake_case for variable names.
    @newCUD = @course.course_user_data.new
    ^^^^^^^
app/controllers/course_user_data_controller.rb:18:3: C: Assignment Branch Condition size for create is too high. [51.34/15]
  def create
  ^^^
app/controllers/course_user_data_controller.rb:18:3: C: Cyclomatic complexity for create is too high. [11/6]
  def create
  ^^^
app/controllers/course_user_data_controller.rb:18:3: C: Method has too many lines. [39/10]
  def create
  ^^^
app/controllers/course_user_data_controller.rb:18:3: C: Perceived complexity for create is too high. [15/7]
  def create
  ^^^
app/controllers/course_user_data_controller.rb:19:5: C: Use snake_case for variable names.
    @newCUD = @course.course_user_data.new(cud_params)
    ^^^^^^^
app/controllers/course_user_data_controller.rb:30:7: C: Use snake_case for variable names.
      @newUser = User.new(cud_params[:user_attributes])
      ^^^^^^^^
app/controllers/course_user_data_controller.rb:40:11: C: Do not write to stdout. Use Rails' logger if you want to log.
          print msg
          ^^^^^
app/controllers/course_user_data_controller.rb:57:81: C: Line is too long. [81/80]
      flash[:success] = "Success: added user #{email} in #{@course.display_name}"
                                                                                ^
app/controllers/course_user_data_controller.rb:71:5: C: Use snake_case for variable names.
    @requestedUser = @cud.course.course_user_data.find(params[:id])
    ^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:83:3: C: Assignment Branch Condition size for edit is too high. [21.93/15]
  def edit
  ^^^
app/controllers/course_user_data_controller.rb:83:3: C: Cyclomatic complexity for edit is too high. [7/6]
  def edit
  ^^^
app/controllers/course_user_data_controller.rb:83:3: C: Method has too many lines. [11/10]
  def edit
  ^^^
app/controllers/course_user_data_controller.rb:84:5: C: Use snake_case for variable names.
    @editCUD = @course.course_user_data.find(params[:id])
    ^^^^^^^^
app/controllers/course_user_data_controller.rb:100:3: C: Assignment Branch Condition size for update is too high. [38.33/15]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:100:3: C: Cyclomatic complexity for update is too high. [14/6]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:100:3: C: Method has too many lines. [27/10]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:100:3: C: Perceived complexity for update is too high. [17/7]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:103:81: C: Line is too long. [85/80]
    # application_controller's authenticate_user redirects here if nickname isn't set
                                                                                ^^^^^
app/controllers/course_user_data_controller.rb:104:5: C: Use snake_case for variable names.
    @editCUD = @course.course_user_data.find(params[:id])
    ^^^^^^^^
app/controllers/course_user_data_controller.rb:105:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @editCUD.nil?
    ^^
app/controllers/course_user_data_controller.rb:140:3: C: Assignment Branch Condition size for destroy is too high. [15.26/15]
  def destroy
  ^^^
app/controllers/course_user_data_controller.rb:140:3: C: Cyclomatic complexity for destroy is too high. [7/6]
  def destroy
  ^^^
app/controllers/course_user_data_controller.rb:141:5: C: Use snake_case for variable names.
    @destroyCUD = @course.course_user_data.find(params[:id])
    ^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:142:81: C: Line is too long. [92/80]
    if @destroyCUD && @destroyCUD != @cud && params[:yes1] && params[:yes2] && params[:yes3]
                                                                                ^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:152:7: C: Use snake_case for method names.
  def destroyConfirm
      ^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:153:5: C: Use snake_case for variable names.
    @destroyCUD = @course.course_user_data.find(params[:course_user_datum_id])
    ^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:157:3: C: Assignment Branch Condition size for sudo is too high. [71.22/15]
  def sudo
  ^^^
app/controllers/course_user_data_controller.rb:157:3: C: Cyclomatic complexity for sudo is too high. [14/6]
  def sudo
  ^^^
app/controllers/course_user_data_controller.rb:157:3: C: Method has too many lines. [29/10]
  def sudo
  ^^^
app/controllers/course_user_data_controller.rb:157:3: C: Perceived complexity for sudo is too high. [14/7]
  def sudo
  ^^^
app/controllers/course_user_data_controller.rb:162:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.post?
    ^^
app/controllers/course_user_data_controller.rb:206:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if @cud.instructor
    ^^
app/controllers/course_user_data_controller.rb:211:3: C: Method has too many lines. [13/10]
  def cud_params
  ^^^
app/controllers/course_user_data_controller.rb:214:81: C: Line is too long. [120/80]
                                                :lecture, :section, :instructor, :dropped, :nickname, :course_assistant,
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:215:81: C: Line is too long. [99/80]
                                                user_attributes: [:first_name, :last_name, :email],
                                                                                ^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:216:81: C: Line is too long. [93/80]
                                                tweak_attributes: [:_destroy, :kind, :value])
                                                                                ^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:219:81: C: Line is too long. [120/80]
                                                :lecture, :section, :instructor, :dropped, :nickname, :course_assistant,
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:220:81: C: Line is too long. [99/80]
                                                user_attributes: [:email, :first_name, :last_name],
                                                                                ^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:221:81: C: Line is too long. [93/80]
                                                tweak_attributes: [:_destroy, :kind, :value])
                                                                                ^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:228:3: C: Method has too many lines. [13/10]
  def edit_cud_params
  ^^^
app/controllers/course_user_data_controller.rb:231:81: C: Line is too long. [120/80]
                                                :lecture, :section, :instructor, :dropped, :nickname, :course_assistant,
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:232:81: C: Line is too long. [104/80]
                                                user_attributes: [:id, :email, :first_name, :last_name],
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:233:81: C: Line is too long. [93/80]
                                                tweak_attributes: [:_destroy, :kind, :value])
                                                                                ^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:236:81: C: Line is too long. [120/80]
                                                :lecture, :section, :instructor, :dropped, :nickname, :course_assistant,
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:237:81: C: Line is too long. [104/80]
                                                user_attributes: [:id, :email, :first_name, :last_name],
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:238:81: C: Line is too long. [93/80]
                                                tweak_attributes: [:_destroy, :kind, :value])
                                                                                ^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:240:81: C: Line is too long. [104/80]
      params.require(:course_user_datum).permit(:nickname) # user_attributes: [:first_name, :last_name])
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:6:1: C: Class definition is too long. [527/100]
class CoursesController < ApplicationController
^^^^^
app/controllers/courses_controller.rb:6:1: C: Missing top-level class documentation comment.
class CoursesController < ApplicationController
^^^^^
app/controllers/courses_controller.rb:10:81: C: Line is too long. [84/80]
  skip_before_action :update_persistent_announcements, only: [:index, :new, :create]
                                                                                ^^^^
app/controllers/courses_controller.rb:28:3: C: Assignment Branch Condition size for manage is too high. [22.89/15]
  def manage
  ^^^
app/controllers/courses_controller.rb:28:3: C: Method has too many lines. [18/10]
  def manage
  ^^^
app/controllers/courses_controller.rb:65:5: C: Use snake_case for variable names.
    @newCourse = Course.new
    ^^^^^^^^^^
app/controllers/courses_controller.rb:70:3: C: Assignment Branch Condition size for create is too high. [66.29/15]
  def create
  ^^^
app/controllers/courses_controller.rb:70:3: C: Cyclomatic complexity for create is too high. [13/6]
  def create
  ^^^
app/controllers/courses_controller.rb:70:3: C: Method has too many lines. [49/10]
  def create
  ^^^
app/controllers/courses_controller.rb:70:3: C: Perceived complexity for create is too high. [16/7]
  def create
  ^^^
app/controllers/courses_controller.rb:77:5: C: Use snake_case for variable names.
    @newCourse = Course.new(new_course_params)
    ^^^^^^^^^^
app/controllers/courses_controller.rb:102:9: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
        rescue Exception => e
        ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:109:7: C: Use snake_case for variable names.
      newCUD = @newCourse.course_user_data.new
      ^^^^^^
app/controllers/courses_controller.rb:115:81: C: Line is too long. [81/80]
          flash[:success] = "New Course #{@newCourse.name} successfully created!"
                                                                                ^
app/controllers/courses_controller.rb:157:3: C: Assignment Branch Condition size for destroy is too high. [19.67/15]
  def destroy
  ^^^
app/controllers/courses_controller.rb:157:3: C: Method has too many lines. [12/10]
  def destroy
  ^^^
app/controllers/courses_controller.rb:177:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.post?
    ^^
app/controllers/courses_controller.rb:190:3: C: Assignment Branch Condition size for userLookup is too high. [17.58/15]
  def userLookup
  ^^^
app/controllers/courses_controller.rb:190:3: C: Method has too many lines. [12/10]
  def userLookup
  ^^^
app/controllers/courses_controller.rb:190:7: C: Use snake_case for method names.
  def userLookup
      ^^^^^^^^^^
app/controllers/courses_controller.rb:199:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if user.nil?
    ^^
app/controllers/courses_controller.rb:214:81: C: Line is too long. [135/80]
      @cuds = @course.course_user_data.joins(:user).order("users.email ASC").where(CourseUserDatum.conditions_by_like(params[:search]))
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:223:81: C: Line is too long. [81/80]
    redirect_to course_course_user_datum_sudo_path(course_user_datum_id: @cud.id)
                                                                                ^
app/controllers/courses_controller.rb:242:3: C: Assignment Branch Condition size for uploadRoster is too high. [191.8/15]
  def uploadRoster
  ^^^
app/controllers/courses_controller.rb:242:3: C: Cyclomatic complexity for uploadRoster is too high. [28/6]
  def uploadRoster
  ^^^
app/controllers/courses_controller.rb:242:3: C: Method has too many lines. [141/10]
  def uploadRoster
  ^^^
app/controllers/courses_controller.rb:242:3: C: Perceived complexity for uploadRoster is too high. [32/7]
  def uploadRoster
  ^^^
app/controllers/courses_controller.rb:242:7: C: Use snake_case for method names.
  def uploadRoster
      ^^^^^^^^^^^^
app/controllers/courses_controller.rb:243:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.post?
    ^^
app/controllers/courses_controller.rb:253:13: C: Use snake_case for variable names.
            rowNum = 0
            ^^^^^^
app/controllers/courses_controller.rb:256:15: C: Use snake_case for variable names.
              newCUD = params["cuds"][rowNum.to_s]
              ^^^^^^
app/controllers/courses_controller.rb:258:15: C: Avoid more than 3 levels of block nesting.
              if newCUD["color"] == "green"
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:270:81: C: Line is too long. [81/80]
                  user = User.roster_create(email, first_name, last_name, school,
                                                                                ^
app/controllers/courses_controller.rb:302:81: C: Line is too long. [87/80]
                cud.assign_attributes(newCUD.permit(:lecture, :section, :grade_policy))
                                                                                ^^^^^^^
app/controllers/courses_controller.rb:309:81: C: Line is too long. [113/80]
                existing = @course.course_user_data.includes(:user).where(users: { email: newCUD[:email] }).first
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:311:17: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
                if existing.nil?
                ^^
app/controllers/courses_controller.rb:320:81: C: Line is too long. [113/80]
                existing = @course.course_user_data.includes(:user).where(users: { email: newCUD[:email] }).first
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:322:17: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
                if existing.nil?
                ^^
app/controllers/courses_controller.rb:328:81: C: Line is too long. [84/80]
                  fail "User associated to black CUD doesn't exist in the database."
                                                                                ^^^^
app/controllers/courses_controller.rb:347:81: C: Line is too long. [92/80]
                existing.assign_attributes(newCUD.permit(:lecture, :section, :grade_policy))
                                                                                ^^^^^^^^^^^^
app/controllers/courses_controller.rb:351:15: C: Use snake_case for variable names.
              rowNum += 1
              ^^^^^^
app/controllers/courses_controller.rb:357:9: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
        rescue Exception => e
        ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:366:9: C: Use snake_case for variable names.
        @currentCUDs = @course.course_user_data.all.to_a
        ^^^^^^^^^^^^
app/controllers/courses_controller.rb:367:9: C: Use snake_case for variable names.
        @newCUDs = []
        ^^^^^^^^
app/controllers/courses_controller.rb:373:13: C: Use snake_case for variable names.
            newCUD = { email: row[1].to_s,
            ^^^^^^
app/controllers/courses_controller.rb:382:41: W: Shadowing outer local variable - [33mcud[0m.
            cud = @currentCUDs.find do |cud|
                                        ^^^
app/controllers/courses_controller.rb:395:9: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
        rescue Exception => e
        ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:397:11: W: Unreachable code detected.
          flash[:error] = "Error uploading the CSV file!: " +
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:408:11: C: Avoid more than 3 levels of block nesting.
          for cud in @currentCUDs do # These are the drops
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:408:11: C: Prefer [33meach[0m over [33mfor[0m.
          for cud in @currentCUDs do # These are the drops
          ^^^
app/controllers/courses_controller.rb:409:13: C: Use snake_case for variable names.
            newCUD = { email: cud.user.email,
            ^^^^^^
app/controllers/courses_controller.rb:427:3: C: Assignment Branch Condition size for downloadRoster is too high. [16.19/15]
  def downloadRoster
  ^^^
app/controllers/courses_controller.rb:427:7: C: Use snake_case for method names.
  def downloadRoster
      ^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:432:5: C: Prefer [33meach[0m over [33mfor[0m.
    for cud in @cuds do
    ^^^
app/controllers/courses_controller.rb:434:81: C: Line is too long. [183/80]
      output += "#{@course.semester},#{cud.user.email},#{user.last_name},#{user.first_name},#{cud.school},#{cud.major},#{cud.year},#{cud.grade_policy},#{cud.lecture},#{cud.section}\n"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:436:81: C: Line is too long. [85/80]
    send_data output, filename: "roster.csv", type: "text/csv", disposition: "inline"
                                                                                ^^^^^
app/controllers/courses_controller.rb:443:3: C: Method has too many lines. [18/10]
  def installAssessment
  ^^^
app/controllers/courses_controller.rb:443:7: C: Use snake_case for method names.
  def installAssessment
      ^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:444:5: C: Use snake_case for variable names.
    @assignDir = File.join(Rails.root, "courses", @course.name)
    ^^^^^^^^^^
app/controllers/courses_controller.rb:445:5: C: Use snake_case for variable names.
    @availableAssessments = []
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:450:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if filename =~ /[^a-z0-9]/
          ^^
app/controllers/courses_controller.rb:456:11: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          unless assessment
          ^^^^^^
app/controllers/courses_controller.rb:461:7: C: Use snake_case for variable names.
      @availableAssessments = @availableAssessments.sort
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:462:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => error
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:470:3: C: Assignment Branch Condition size for email is too high. [22.05/15]
  def email
  ^^^
app/controllers/courses_controller.rb:470:3: C: Method has too many lines. [21/10]
  def email
  ^^^
app/controllers/courses_controller.rb:471:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.post?
    ^^
app/controllers/courses_controller.rb:485:7: C: Use snake_case for variable names.
      bccString = makeDlist(@cuds)
      ^^^^^^^^^
app/controllers/courses_controller.rb:504:3: C: Assignment Branch Condition size for runMoss is too high. [109/15]
  def runMoss
  ^^^
app/controllers/courses_controller.rb:504:3: C: Cyclomatic complexity for runMoss is too high. [23/6]
  def runMoss
  ^^^
app/controllers/courses_controller.rb:504:3: C: Method has too many lines. [88/10]
  def runMoss
  ^^^
app/controllers/courses_controller.rb:504:3: C: Perceived complexity for runMoss is too high. [23/7]
  def runMoss
  ^^^
app/controllers/courses_controller.rb:504:7: C: Use snake_case for method names.
  def runMoss
      ^^^^^^^
app/controllers/courses_controller.rb:510:5: C: Use snake_case for variable names.
    assessmentIDs = params[:assessments]
    ^^^^^^^^^^^^^
app/controllers/courses_controller.rb:515:7: C: Prefer [33meach[0m over [33mfor[0m.
      for aID in assessmentIDs.keys do
      ^^^
app/controllers/courses_controller.rb:515:11: C: Use snake_case for variable names.
      for aID in assessmentIDs.keys do
          ^^^
app/controllers/courses_controller.rb:521:9: C: Use snake_case for variable names.
        assessmentCUD = assessment.course.course_user_data.joins(:user).find_by(users: { email: current_user.email }, instructor: true)
        ^^^^^^^^^^^^^
app/controllers/courses_controller.rb:521:81: C: Line is too long. [135/80]
        assessmentCUD = assessment.course.course_user_data.joins(:user).find_by(users: { email: current_user.email }, instructor: true)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:530:5: C: Use snake_case for variable names.
    @mossCmd = [Rails.root.join("vendor", "mossnet -d")]
    ^^^^^^^^
app/controllers/courses_controller.rb:533:5: C: Use snake_case for variable names.
    tmpDir = Dir.mktmpdir("#{@cud.user.email}Moss", Rails.root.join("tmp"))
    ^^^^^^
app/controllers/courses_controller.rb:538:5: C: Prefer [33meach[0m over [33mfor[0m.
    for ass in assessments do
    ^^^
app/controllers/courses_controller.rb:540:7: C: Use snake_case for variable names.
      assDir = File.join(tmpDir, "#{ass.name}-#{ass.course.name}")
      ^^^^^^
app/controllers/courses_controller.rb:543:7: C: Use snake_case for variable names.
      isArchive = params[:isArchive][ass.id.to_s]
      ^^^^^^^^^
app/controllers/courses_controller.rb:546:7: C: Prefer [33meach[0m over [33mfor[0m.
      for sub in ass.submissions.latest do
      ^^^
app/controllers/courses_controller.rb:546:7: C: Use [33mnext[0m to skip iteration.
      for sub in ass.submissions.latest do
      ^^^
app/controllers/courses_controller.rb:547:9: C: Use snake_case for variable names.
        subFile = sub.handin_file_path
        ^^^^^^^
app/controllers/courses_controller.rb:551:9: C: Use snake_case for variable names.
        stuDir = File.join(assDir, sub.course_user_datum.email)
        ^^^^^^
app/controllers/courses_controller.rb:564:29: C: Use [33mnext[0m to skip iteration.
            archive_extract.each do |entry|
                            ^^^^
app/controllers/courses_controller.rb:566:15: C: Avoid more than 3 levels of block nesting.
              unless Archive.looks_like_directory?(pathname)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:572:19: C: Avoid using [33mrescue[0m in its modifier form.
                  out.fsync rescue nil # for filesystems without fsync(2)
                  ^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:576:11: C: Avoid more than 3 levels of block nesting.
          rescue
          ^^^^^^
app/controllers/courses_controller.rb:590:7: C: Use snake_case for variable names.
      extTarDir = File.join(tmpDir, "external_input")
      ^^^^^^^^^
app/controllers/courses_controller.rb:594:7: C: Use snake_case for variable names.
      extTarPath = File.join(extTarDir, "input_file")
      ^^^^^^^^^^
app/controllers/courses_controller.rb:596:81: C: Line is too long. [86/80]
      File.open(extTarPath, "wb") { |f| f.write(external_tar.read) } # Write tar file.
                                                                                ^^^^^^
app/controllers/courses_controller.rb:599:7: C: Use snake_case for variable names.
      extFilesDir = File.join(extTarDir, "submissions")
      ^^^^^^^^^^^
app/controllers/courses_controller.rb:608:25: C: Use [33mnext[0m to skip iteration.
        archive_extract.each do |entry|
                        ^^^^
app/controllers/courses_controller.rb:616:15: C: Avoid using [33mrescue[0m in its modifier form.
              out.fsync rescue nil # for filesystems without fsync(2)
              ^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:632:5: C: Use snake_case for variable names.
    @mossCmdString = @mossCmd.join(" ")
    ^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:633:5: C: Use snake_case for variable names.
    @mossExit = $CHILD_STATUS
    ^^^^^^^^^
app/controllers/courses_controller.rb:634:5: C: Use snake_case for variable names.
    @mossOutput = `#{@mossCmdString} 2>&1`
    ^^^^^^^^^^^
app/controllers/courses_controller.rb:647:81: C: Line is too long. [121/80]
    params.require(:editCourse).permit(:name, :semester, :late_slack, :grace_days, :display_name, :start_date, :end_date,
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:648:81: C: Line is too long. [101/80]
                                       :disabled, :exam_in_progress, :version_threshold, :gb_message,
                                                                                ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:650:81: C: Line is too long. [83/80]
                                       version_penalty_attributes: [:kind, :value])
                                                                                ^^^
app/controllers/courses_controller.rb:653:3: C: Method has too many lines. [13/10]
  def categorize_courses_for_listing(courses)
  ^^^
app/controllers/courses_controller.rb:676:3: C: Assignment Branch Condition size for detectAndConvertRoster is too high. [78.39/15]
  def detectAndConvertRoster(roster)
  ^^^
app/controllers/courses_controller.rb:676:3: C: Method has too many lines. [32/10]
  def detectAndConvertRoster(roster)
  ^^^
app/controllers/courses_controller.rb:676:3: C: Perceived complexity for detectAndConvertRoster is too high. [9/7]
  def detectAndConvertRoster(roster)
  ^^^
app/controllers/courses_controller.rb:676:7: C: Use snake_case for method names.
  def detectAndConvertRoster(roster)
      ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:677:5: C: Use snake_case for variable names.
    parsedRoster = CSV.parse(roster)
    ^^^^^^^^^^^^
app/controllers/courses_controller.rb:694:7: C: Use snake_case for variable names.
      numRows = parsedRoster.length - offset
      ^^^^^^^
app/controllers/courses_controller.rb:695:7: C: Use snake_case for variable names.
      convertedRoster = Array.new(numRows) { Array.new(11) }
      ^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:697:7: C: Prefer [33meach[0m over [33mfor[0m.
      for i in 0..(numRows - 1)
      ^^^
app/controllers/courses_controller.rb:700:81: C: Line is too long. [81/80]
          convertedRoster[i][1] = parsedRoster[i + offset][8] + "@andrew.cmu.edu"
                                                                                ^
app/controllers/extensions_controller.rb:1:1: C: Missing top-level class documentation comment.
class ExtensionsController < ApplicationController
^^^^^
app/controllers/extensions_controller.rb:10:5: C: Prefer [33meach[0m over [33mfor[0m.
    for u in @course.course_user_data do
    ^^^
app/controllers/extensions_controller.rb:13:5: C: Use snake_case for variable names.
    @newExtension = @assessment.extensions.new
    ^^^^^^^^^^^^^
app/controllers/extensions_controller.rb:17:3: C: Assignment Branch Condition size for create is too high. [17.29/15]
  def create
  ^^^
app/controllers/extensions_controller.rb:23:81: C: Line is too long. [114/80]
      flash[:error] = "No student with id #{params[:extension][:course_user_datum_id]} was found for this course."
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/extensions_controller.rb:40:81: C: Line is too long. [115/80]
    params.require(:extension).permit(:course_user_datum_id, :days, :infinite, :commit, :course_id, :assessment_id)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/gradebooks_controller.rb:6:1: C: Missing top-level class documentation comment.
class GradebooksController < ApplicationController
^^^^^
app/controllers/gradebooks_controller.rb:19:3: C: Method has too many lines. [13/10]
  def view
  ^^^
app/controllers/gradebooks_controller.rb:31:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless @cud.has_auth_level?(:instructor) || @section == @cud.section
    ^^^^^^
app/controllers/gradebooks_controller.rb:38:3: C: Assignment Branch Condition size for student is too high. [24.43/15]
  def student
  ^^^
app/controllers/gradebooks_controller.rb:38:3: C: Cyclomatic complexity for student is too high. [9/6]
  def student
  ^^^
app/controllers/gradebooks_controller.rb:38:3: C: Method has too many lines. [15/10]
  def student
  ^^^
app/controllers/gradebooks_controller.rb:38:3: C: Perceived complexity for student is too high. [10/7]
  def student
  ^^^
app/controllers/gradebooks_controller.rb:39:13: C: Avoid multi-line ?: (the ternary operator); use [33mif[0m/[33munless[0m instead.
    @_cud = params[:id] ?
            ^^^^^^^^^^^^^
app/controllers/gradebooks_controller.rb:74:3: C: Assignment Branch Condition size for statistics is too high. [22.89/15]
  def statistics
  ^^^
app/controllers/gradebooks_controller.rb:74:3: C: Method has too many lines. [18/10]
  def statistics
  ^^^
app/controllers/gradebooks_controller.rb:106:7: C: Use snake_case for method names.
  def bulkRelease
      ^^^^^^^^^^^
app/controllers/gradebooks_controller.rb:107:5: C: Prefer [33meach[0m over [33mfor[0m.
    for assessment in @course.assessments do
    ^^^
app/controllers/gradebooks_controller.rb:108:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in assessment.problems do
      ^^^
app/controllers/gradebooks_controller.rb:110:9: C: Prefer [33meach[0m over [33mfor[0m.
        for score in scores do
        ^^^
app/controllers/groups_controller.rb:1:1: C: Class definition is too long. [225/100]
class GroupsController < ApplicationController
^^^^^
app/controllers/groups_controller.rb:1:1: C: Missing top-level class documentation comment.
class GroupsController < ApplicationController
^^^^^
app/controllers/groups_controller.rb:5:81: C: Line is too long. [88/80]
  before_action :set_group, only: [:show, :edit, :update, :destroy, :add, :join, :leave]
                                                                                ^^^^^^^^
app/controllers/groups_controller.rb:14:3: C: Assignment Branch Condition size for index is too high. [16.97/15]
  def index
  ^^^
app/controllers/groups_controller.rb:14:3: C: Method has too many lines. [13/10]
  def index
  ^^^
app/controllers/groups_controller.rb:25:5: C: Use snake_case for variable names.
    @groupAssessments = @course.assessments
    ^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:26:81: C: Line is too long. [126/80]
                        .where("`group_size` > 1 AND `group_size` <= ?", @assessment.group_size).where.not(id: @assessment.id)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:27:5: C: Use snake_case for variable names.
    @grouplessCUDs = @assessment.grouplessCUDs
    ^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:36:3: C: Assignment Branch Condition size for show is too high. [20.35/15]
  def show
  ^^^
app/controllers/groups_controller.rb:36:3: C: Cyclomatic complexity for show is too high. [8/6]
  def show
  ^^^
app/controllers/groups_controller.rb:36:3: C: Method has too many lines. [12/10]
  def show
  ^^^
app/controllers/groups_controller.rb:36:3: C: Perceived complexity for show is too high. [9/7]
  def show
  ^^^
app/controllers/groups_controller.rb:47:7: C: Use snake_case for variable names.
      @grouplessCUDs = @assessment.grouplessCUDs
      ^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:56:3: C: Assignment Branch Condition size for new is too high. [15.81/15]
  def new
  ^^^
app/controllers/groups_controller.rb:59:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if aud.group
      ^^
app/controllers/groups_controller.rb:65:5: C: Use snake_case for variable names.
    @grouplessCUDs = @assessment.grouplessCUDs
    ^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:66:5: C: Use snake_case for variable names.
    @unfullGroups = @assessment.groups.all.select { |g| g.assessment_user_data.size < @assessment.group_size }
    ^^^^^^^^^^^^^
app/controllers/groups_controller.rb:66:81: C: Line is too long. [110/80]
    @unfullGroups = @assessment.groups.all.select { |g| g.assessment_user_data.size < @assessment.group_size }
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:76:3: C: Assignment Branch Condition size for create is too high. [33.97/15]
  def create
  ^^^
app/controllers/groups_controller.rb:76:3: C: Cyclomatic complexity for create is too high. [8/6]
  def create
  ^^^
app/controllers/groups_controller.rb:76:3: C: Method has too many lines. [25/10]
  def create
  ^^^
app/controllers/groups_controller.rb:76:3: C: Perceived complexity for create is too high. [9/7]
  def create
  ^^^
app/controllers/groups_controller.rb:77:17: W: Assignment in condition - you probably meant to use [33m==[0m.
    unless cud2 = get_member_cud
                ^
app/controllers/groups_controller.rb:116:81: C: Line is too long. [89/80]
        flash[:notice] = "Group was successfully updated." if @group.update(group_params)
                                                                                ^^^^^^^^^
app/controllers/groups_controller.rb:140:81: C: Line is too long. [82/80]
  # it will leave currently created groups untouched, and won't work if importFrom
                                                                                ^^
app/controllers/groups_controller.rb:144:3: C: Assignment Branch Condition size for import is too high. [40.87/15]
  def import
  ^^^
app/controllers/groups_controller.rb:144:3: C: Cyclomatic complexity for import is too high. [11/6]
  def import
  ^^^
app/controllers/groups_controller.rb:144:3: C: Method has too many lines. [29/10]
  def import
  ^^^
app/controllers/groups_controller.rb:144:3: C: Perceived complexity for import is too high. [12/7]
  def import
  ^^^
app/controllers/groups_controller.rb:149:81: C: Line is too long. [97/80]
    elsif !ass.has_groups? || ass.group_size > @assessment.group_size || @assessment.id == ass.id
                                                                                ^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:158:30: C: Use [33mnext[0m to skip iteration.
      g.assessment_user_data.each do |a|
                             ^^^^
app/controllers/groups_controller.rb:164:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if aud.save!
          ^^
app/controllers/groups_controller.rb:169:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if count > 0
      ^^
app/controllers/groups_controller.rb:186:3: C: Assignment Branch Condition size for add is too high. [26.74/15]
  def add
  ^^^
app/controllers/groups_controller.rb:186:3: C: Cyclomatic complexity for add is too high. [10/6]
  def add
  ^^^
app/controllers/groups_controller.rb:186:3: C: Method has too many lines. [18/10]
  def add
  ^^^
app/controllers/groups_controller.rb:186:3: C: Perceived complexity for add is too high. [10/7]
  def add
  ^^^
app/controllers/groups_controller.rb:190:16: W: Assignment in condition - you probably meant to use [33m==[0m.
    unless cud = get_member_cud
               ^
app/controllers/groups_controller.rb:193:5: C: Use snake_case for variable names.
    newMemberAUD = @assessment.aud_for cud.id
    ^^^^^^^^^^^^
app/controllers/groups_controller.rb:195:81: C: Line is too long. [111/80]
    # if we're adding a new member, and not group-confirming someone, make sure that the group is not too large
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:201:81: C: Line is too long. [104/80]
    # if the new member has no previous group or was already in this group, group-confirm the new member
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:202:81: C: Line is too long. [111/80]
    if newMemberAUD.membership_status == AssessmentUserDatum::UNCONFIRMED || newMemberAUD.group_id == @group.id
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:217:3: C: Assignment Branch Condition size for join is too high. [18.55/15]
  def join
  ^^^
app/controllers/groups_controller.rb:217:3: C: Method has too many lines. [12/10]
  def join
  ^^^
app/controllers/groups_controller.rb:218:5: C: Use snake_case for variable names.
    newMemberAUD = @assessment.aud_for(@cud.id)
    ^^^^^^^^^^^^
app/controllers/groups_controller.rb:226:81: C: Line is too long. [104/80]
    # if the new member has no previous group or was already in this group, group-confirm the new member
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:227:81: C: Line is too long. [111/80]
    if newMemberAUD.membership_status == AssessmentUserDatum::UNCONFIRMED || newMemberAUD.group_id == @group.id
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:244:3: C: Assignment Branch Condition size for leave is too high. [30.1/15]
  def leave
  ^^^
app/controllers/groups_controller.rb:244:3: C: Cyclomatic complexity for leave is too high. [8/6]
  def leave
  ^^^
app/controllers/groups_controller.rb:244:3: C: Method has too many lines. [25/10]
  def leave
  ^^^
app/controllers/groups_controller.rb:244:3: C: Perceived complexity for leave is too high. [9/7]
  def leave
  ^^^
app/controllers/groups_controller.rb:264:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if @group.assessment_user_data.size == 0
        ^^
app/controllers/groups_controller.rb:275:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless @assessment.has_groups?
    ^^^^^^
app/controllers/groups_controller.rb:293:3: C: Assignment Branch Condition size for get_member_cud is too high. [22.38/15]
  def get_member_cud
  ^^^
app/controllers/groups_controller.rb:293:3: C: Method has too many lines. [15/10]
  def get_member_cud
  ^^^
app/controllers/groups_controller.rb:293:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_member_cud
      ^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:297:81: C: Line is too long. [98/80]
            @course.course_user_data.joins(:user).find_by(users: { email: params[:member_email] })
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:298:11: C: Redundant empty [33melse[0m-clause.
          else
          ^^^^
app/controllers/groups_controller.rb:300:5: W: [33mend[0m at 300, 4 is not aligned with [33mif[0m at 294, 10
    end
    ^^^
app/controllers/home_controller.rb:1:1: C: Missing top-level class documentation comment.
class HomeController < ApplicationController
^^^^^
app/controllers/home_controller.rb:8:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.post?
    ^^
app/controllers/home_controller.rb:22:3: C: Assignment Branch Condition size for publicSignUp is too high. [30.35/15]
  def publicSignUp
  ^^^
app/controllers/home_controller.rb:22:3: C: Cyclomatic complexity for publicSignUp is too high. [9/6]
  def publicSignUp
  ^^^
app/controllers/home_controller.rb:22:3: C: Method has too many lines. [22/10]
  def publicSignUp
  ^^^
app/controllers/home_controller.rb:22:3: C: Perceived complexity for publicSignUp is too high. [10/7]
  def publicSignUp
  ^^^
app/controllers/home_controller.rb:22:7: C: Use snake_case for method names.
  def publicSignUp
      ^^^^^^^^^^^^
app/controllers/home_controller.rb:26:81: C: Line is too long. [82/80]
      flash[:error] = "Public course doesn't exist. Please check your link again."
                                                                                ^^
app/controllers/home_controller.rb:56:3: C: Assignment Branch Condition size for vmlist is too high. [18.06/15]
  def vmlist
  ^^^
app/controllers/home_controller.rb:56:3: C: Method has too many lines. [17/10]
  def vmlist
  ^^^
app/controllers/jobs_controller.rb:4:1: C: Class definition is too long. [166/100]
class JobsController < ApplicationController
^^^^^
app/controllers/jobs_controller.rb:4:1: C: Missing top-level class documentation comment.
class JobsController < ApplicationController
^^^^^
app/controllers/jobs_controller.rb:10:7: C: Use snake_case for method names.
  def getCurrentJobs
      ^^^^^^^^^^^^^^
app/controllers/jobs_controller.rb:17:7: C: Use snake_case for method names.
  def getDeadJobs
      ^^^^^^^^^^^
app/controllers/jobs_controller.rb:24:3: C: Assignment Branch Condition size for index is too high. [30.87/15]
  def index
  ^^^
app/controllers/jobs_controller.rb:24:3: C: Cyclomatic complexity for index is too high. [10/6]
  def index
  ^^^
app/controllers/jobs_controller.rb:24:3: C: Method has too many lines. [33/10]
  def index
  ^^^
app/controllers/jobs_controller.rb:24:3: C: Perceived complexity for index is too high. [11/7]
  def index
  ^^^
app/controllers/jobs_controller.rb:33:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if params[:id]
    ^^
app/controllers/jobs_controller.rb:36:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if dead_count < 0
    ^^
app/controllers/jobs_controller.rb:48:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if raw_live_jobs && raw_dead_jobs
    ^^
app/controllers/jobs_controller.rb:49:7: C: Prefer [33meach[0m over [33mfor[0m.
      for rjob in raw_live_jobs do
      ^^^
app/controllers/jobs_controller.rb:61:7: C: Prefer [33meach[0m over [33mfor[0m.
      for rjob in raw_dead_jobs do
      ^^^
app/controllers/jobs_controller.rb:64:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if job[:name] != "*"
        ^^
app/controllers/jobs_controller.rb:80:3: C: Assignment Branch Condition size for getjob is too high. [66.24/15]
  def getjob
  ^^^
app/controllers/jobs_controller.rb:80:3: C: Cyclomatic complexity for getjob is too high. [25/6]
  def getjob
  ^^^
app/controllers/jobs_controller.rb:80:3: C: Method has too many lines. [64/10]
  def getjob
  ^^^
app/controllers/jobs_controller.rb:80:3: C: Perceived complexity for getjob is too high. [27/7]
  def getjob
  ^^^
app/controllers/jobs_controller.rb:97:7: C: Prefer [33meach[0m over [33mfor[0m.
      for item in raw_live_jobs do
      ^^^
app/controllers/jobs_controller.rb:97:7: C: Use [33mnext[0m to skip iteration.
      for item in raw_live_jobs do
      ^^^
app/controllers/jobs_controller.rb:105:9: C: Prefer [33meach[0m over [33mfor[0m.
        for item in raw_dead_jobs do
        ^^^
app/controllers/jobs_controller.rb:106:11: C: Avoid more than 3 levels of block nesting.
          if item["id"] == job_id
          ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/jobs_controller.rb:150:7: C: Prefer [33meach[0m over [33mfor[0m.
      for score in scores do
      ^^^
app/controllers/jobs_controller.rb:150:7: C: Use [33mnext[0m to skip iteration.
      for score in scores do
      ^^^
app/controllers/jobs_controller.rb:162:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if !@cud.user.administrator? && !@cud.instructor?
    ^^
app/controllers/jobs_controller.rb:164:81: C: Line is too long. [155/80]
        redirect_to(viewFeedback_course_assessment_path(url_course.to_i, url_assessment.to_i, submission: submission.id, feedback: feedback_num)) && return
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/jobs_controller.rb:174:7: C: Use snake_case for method names.
  def getJobs(suffix = "0/")
      ^^^^^^^
app/controllers/jobs_controller.rb:176:5: C: Use snake_case for variable names.
    reqURL = "http://#{RESTFUL_HOST}:#{RESTFUL_PORT}/jobs/#{RESTFUL_KEY}/" + suffix
    ^^^^^^
app/controllers/jobs_controller.rb:176:81: C: Line is too long. [83/80]
    reqURL = "http://#{RESTFUL_HOST}:#{RESTFUL_PORT}/jobs/#{RESTFUL_KEY}/" + suffix
                                                                                ^^^
app/controllers/jobs_controller.rb:180:5: W: Useless assignment to variable - [33mjobs[0m.
    jobs = response["jobs"]
    ^^^^
app/controllers/jobs_controller.rb:185:3: C: Assignment Branch Condition size for formatRawJob is too high. [71.06/15]
  def formatRawJob(rjob, is_live)
  ^^^
app/controllers/jobs_controller.rb:185:3: C: Cyclomatic complexity for formatRawJob is too high. [11/6]
  def formatRawJob(rjob, is_live)
  ^^^
app/controllers/jobs_controller.rb:185:3: C: Method has too many lines. [45/10]
  def formatRawJob(rjob, is_live)
  ^^^
app/controllers/jobs_controller.rb:185:3: C: Perceived complexity for formatRawJob is too high. [15/7]
  def formatRawJob(rjob, is_live)
  ^^^
app/controllers/jobs_controller.rb:185:7: C: Use snake_case for method names.
  def formatRawJob(rjob, is_live)
      ^^^^^^^^^^^^
app/controllers/jobs_controller.rb:202:9: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        unless job[:name][@cud.user.email]
        ^^^^^^
app/controllers/problems_controller.rb:1:1: C: Missing top-level class documentation comment.
class ProblemsController < ApplicationController
^^^^^
app/controllers/problems_controller.rb:38:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @problem.destroy
    ^^
app/controllers/problems_controller.rb:58:81: C: Line is too long. [89/80]
  # this function says which problem attributes can be mass-assigned to, and which cannot
                                                                                ^^^^^^^^^
app/controllers/schedulers_controller.rb:1:1: C: Missing top-level class documentation comment.
class SchedulersController < ApplicationController
^^^^^
app/controllers/scores_controller.rb:1:1: C: Missing top-level class documentation comment.
class ScoresController < ApplicationController
^^^^^
app/controllers/scores_controller.rb:7:3: C: Assignment Branch Condition size for create is too high. [21.05/15]
  def create
  ^^^
app/controllers/scores_controller.rb:7:3: C: Method has too many lines. [14/10]
  def create
  ^^^
app/controllers/scores_controller.rb:29:3: C: Assignment Branch Condition size for update is too high. [15.13/15]
  def update
  ^^^
app/controllers/scores_controller.rb:44:3: C: Assignment Branch Condition size for set_submission is too high. [21.95/15]
  def set_submission
  ^^^
app/controllers/scores_controller.rb:44:3: C: Cyclomatic complexity for set_submission is too high. [10/6]
  def set_submission
  ^^^
app/controllers/scores_controller.rb:44:3: C: Method has too many lines. [11/10]
  def set_submission
  ^^^
app/controllers/scores_controller.rb:44:3: C: Perceived complexity for set_submission is too high. [10/7]
  def set_submission
  ^^^
app/controllers/scores_controller.rb:47:81: C: Line is too long. [98/80]
    unless @cud.instructor || @cud.course_assistant || @submission.course_user_datum_id == @cud.id
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/scores_controller.rb:49:42: C: Use [33m&&[0m instead of [33mand[0m.
      redirect_to [@course, @assessment] and return false
                                         ^^^
app/controllers/scores_controller.rb:52:81: C: Line is too long. [102/80]
    if (@assessment.exam? || @course.exam_in_progress?) && !(@cud.instructor || @cud.course_assistant)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/scores_controller.rb:55:42: C: Use [33m&&[0m instead of [33mand[0m.
      redirect_to [@course, @assessment] and return false
                                         ^^^
app/controllers/scores_controller.rb:62:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless (@score.submission.course_user_datum_id == @cud.id) ||
    ^^^^^^
app/controllers/submissions_controller.rb:33:72: E: bare backslash only allowed before newline
          "Expected #{cud_ids.size} course_user_data, but only found " \ 
                                                                       ^
app/controllers/users/omniauth_callbacks_controller.rb:1:1: C: Missing top-level class documentation comment.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:1:7: C: Use nested module/class definitions instead of compact style.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:3: C: Assignment Branch Condition size for facebook is too high. [33.79/15]
  def facebook
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:3: C: Cyclomatic complexity for facebook is too high. [8/6]
  def facebook
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:3: C: Method has too many lines. [20/10]
  def facebook
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:3: C: Perceived complexity for facebook is too high. [10/7]
  def facebook
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:4:15: W: Assignment in condition - you probably meant to use [33m==[0m.
      if data = request.env["omniauth.auth"]
              ^
app/controllers/users/omniauth_callbacks_controller.rb:14:81: C: Line is too long. [86/80]
      @user = User.find_for_facebook_oauth(request.env["omniauth.auth"], current_user)
                                                                                ^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:17:81: C: Line is too long. [102/80]
        sign_in_and_redirect @user, event: :authentication # this will throw if @user is not activated
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:18:81: C: Line is too long. [89/80]
        set_flash_message(:notice, :success, kind: "Facebook") if is_navigational_format?
                                                                                ^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:22:81: C: Line is too long. [86/80]
        session["devise.facebook_data"] = request.env["omniauth.auth"].except("extra")
                                                                                ^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:28:3: C: Assignment Branch Condition size for google_oauth2 is too high. [33.44/15]
  def google_oauth2
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:28:3: C: Method has too many lines. [19/10]
  def google_oauth2
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:28:3: C: Perceived complexity for google_oauth2 is too high. [8/7]
  def google_oauth2
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:30:15: W: Assignment in condition - you probably meant to use [33m==[0m.
      if data = request.env["omniauth.auth"]
              ^
app/controllers/users/omniauth_callbacks_controller.rb:39:81: C: Line is too long. [91/80]
      @user = User.find_for_google_oauth2_oauth(request.env["omniauth.auth"], current_user)
                                                                                ^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:42:81: C: Line is too long. [102/80]
        sign_in_and_redirect @user, event: :authentication # this will throw if @user is not activated
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:43:81: C: Line is too long. [94/80]
        set_flash_message(:notice, :success, kind: "Google_OAuth2") if is_navigational_format?
                                                                                ^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:46:81: C: Line is too long. [91/80]
        session["devise.google_oauth2_data"] = request.env["omniauth.auth"].except("extra")
                                                                                ^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:52:3: C: Assignment Branch Condition size for shibboleth is too high. [61.8/15]
  def shibboleth
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:52:3: C: Cyclomatic complexity for shibboleth is too high. [8/6]
  def shibboleth
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:52:3: C: Method has too many lines. [38/10]
  def shibboleth
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:52:3: C: Perceived complexity for shibboleth is too high. [10/7]
  def shibboleth
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:54:15: W: Assignment in condition - you probably meant to use [33m==[0m.
      if data = request.env["omniauth.auth"]
              ^
app/controllers/users/omniauth_callbacks_controller.rb:63:81: C: Line is too long. [88/80]
      @user = User.find_for_shibboleth_oauth(request.env["omniauth.auth"], current_user)
                                                                                ^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:66:81: C: Line is too long. [102/80]
        sign_in_and_redirect @user, event: :authentication # this will throw if @user is not activated
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:67:81: C: Line is too long. [91/80]
        set_flash_message(:notice, :success, kind: "Shibboleth") if is_navigational_format?
                                                                                ^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:96:81: C: Line is too long. [102/80]
        sign_in_and_redirect @user, event: :authentication # this will throw if @user is not activated
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:97:81: C: Line is too long. [91/80]
        set_flash_message(:notice, :success, kind: "Shibboleth") if is_navigational_format?
                                                                                ^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Class definition is too long. [157/100]
class UsersController < ApplicationController
^^^^^
app/controllers/users_controller.rb:1:1: C: Missing top-level class documentation comment.
class UsersController < ApplicationController
^^^^^
app/controllers/users_controller.rb:8:3: C: Method has too many lines. [12/10]
  def index
  ^^^
app/controllers/users_controller.rb:16:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if cud.instructor?
        ^^
app/controllers/users_controller.rb:29:3: C: Assignment Branch Condition size for show is too high. [34.47/15]
  def show
  ^^^
app/controllers/users_controller.rb:29:3: C: Cyclomatic complexity for show is too high. [9/6]
  def show
  ^^^
app/controllers/users_controller.rb:29:3: C: Method has too many lines. [31/10]
  def show
  ^^^
app/controllers/users_controller.rb:29:3: C: Perceived complexity for show is too high. [11/7]
  def show
  ^^^
app/controllers/users_controller.rb:45:12: C: Use [33mnext[0m to skip iteration.
      cuds.each do |cud|
           ^^^^
app/controllers/users_controller.rb:49:11: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          unless user_cud.nil?
          ^^^^^^
app/controllers/users_controller.rb:87:3: C: Assignment Branch Condition size for create is too high. [26.65/15]
  def create
  ^^^
app/controllers/users_controller.rb:87:3: C: Method has too many lines. [20/10]
  def create
  ^^^
app/controllers/users_controller.rb:87:3: C: Perceived complexity for create is too high. [8/7]
  def create
  ^^^
app/controllers/users_controller.rb:115:3: C: Assignment Branch Condition size for edit is too high. [17.97/15]
  def edit
  ^^^
app/controllers/users_controller.rb:115:3: C: Method has too many lines. [15/10]
  def edit
  ^^^
app/controllers/users_controller.rb:115:3: C: Perceived complexity for edit is too high. [8/7]
  def edit
  ^^^
app/controllers/users_controller.rb:137:3: C: Assignment Branch Condition size for update is too high. [33.66/15]
  def update
  ^^^
app/controllers/users_controller.rb:137:3: C: Cyclomatic complexity for update is too high. [11/6]
  def update
  ^^^
app/controllers/users_controller.rb:137:3: C: Method has too many lines. [24/10]
  def update
  ^^^
app/controllers/users_controller.rb:137:3: C: Perceived complexity for update is too high. [14/7]
  def update
  ^^^
app/controllers/users_controller.rb:157:20: C: Avoid multi-line ?: (the ternary operator); use [33mif[0m/[33munless[0m instead.
    if user.update(current_user.administrator? ?
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:169:3: C: Assignment Branch Condition size for destroy is too high. [19.67/15]
  def destroy
  ^^^
app/controllers/users_controller.rb:169:3: C: Method has too many lines. [12/10]
  def destroy
  ^^^
app/controllers/users_controller.rb:181:7: C: Annotation keywords should be all upper case, followed by a colon and a space, then a note describing the problem.
    # TODO Need to cleanup user resources here
      ^^^^
app/controllers/users_controller.rb:195:81: C: Line is too long. [81/80]
    params.require(:user).permit(:email, :first_name, :last_name, :administrator)
                                                                                ^
app/form_builders/form_builder_with_date_time_input.rb:1:1: C: Missing top-level class documentation comment.
class FormBuilderWithDateTimeInput < ActionView::Helpers::FormBuilder
^^^^^
app/form_builders/form_builder_with_date_time_input.rb:24:81: C: Line is too long. [119/80]
          f.select(:kind, { "points" => "points", "%" => "percent" }, {}, class: "form-control kind input-group-addon")
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/form_builders/form_builder_with_date_time_input.rb:72:81: C: Line is too long. [91/80]
    formatted_datetime = existing_time.to_time.strftime(strftime) if existing_time.present?
                                                                                ^^^^^^^^^^^
app/form_builders/form_builder_with_date_time_input.rb:77:81: C: Line is too long. [83/80]
                                     :"data-date-less-than" => options[:less_than],
                                                                                ^^^
app/form_builders/form_builder_with_date_time_input.rb:78:81: C: Line is too long. [89/80]
                                     :"data-date-greater-than" => options[:greater_than])
                                                                                ^^^^^^^^^
app/form_builders/form_builder_with_date_time_input.rb:85:81: C: Line is too long. [92/80]
      label(name, display_name, class: "control-label") + field + help_text(name, help_text)
                                                                                ^^^^^^^^^^^^
app/helpers/account_helper.rb:1:1: C: Missing top-level module documentation comment.
module AccountHelper
^^^^^^
app/helpers/admin_helper.rb:1:1: C: Missing top-level module documentation comment.
module AdminHelper
^^^^^^
app/helpers/annotations_helper.rb:1:1: C: Missing top-level module documentation comment.
module AnnotationsHelper
^^^^^^
app/helpers/application_helper.rb:1:81: C: Line is too long. [85/80]
# Methods added to this helper will be available to all templates in the application.
                                                                                ^^^^^
app/helpers/application_helper.rb:9:81: C: Line is too long. [82/80]
    link_to @assessment.display_name, course_assessment_path(@course, @assessment)
                                                                                ^^
app/helpers/application_helper.rb:19:7: C: Use snake_case for method names.
  def processStackDump(dump)
      ^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:25:7: C: Use snake_case for method names.
  def roundValue(val)
      ^^^^^^^^^^
app/helpers/application_helper.rb:47:3: C: Method has too many lines. [19/10]
  def editor_mode_options
  ^^^
app/helpers/application_helper.rb:70:81: C: Line is too long. [96/80]
    link_to title, download_course_assessment_submission_path(@course, @assessment, submission),
                                                                                ^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:79:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if submission.is_syntax
    ^^
app/helpers/application_helper.rb:80:81: C: Line is too long. [94/80]
      link_to title, view_course_assessment_submission_path(@course, @assessment, submission),
                                                                                ^^^^^^^^^^^^^^
app/helpers/application_helper.rb:86:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if submission.is_syntax
    ^^
app/helpers/application_helper.rb:92:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if Archive.is_archive? submission.handin_file_path
    ^^
app/helpers/application_helper.rb:93:81: C: Line is too long. [102/80]
      link_to title, list_archive_course_assessment_submission_path(@course, @assessment, submission),
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:98:81: C: Line is too long. [88/80]
  def view_file(submission, list_archive_title, view_source_title, download_title = nil)
                                                                                ^^^^^^^^
app/helpers/application_helper.rb:109:63: C: Favor [33mformat[0m over [33mString#%[0m.
    image_tag("/images/go.png", style: "vertical-align: %dpx" % vertical_align)
                                                              ^
app/helpers/application_helper.rb:117:3: C: Cyclomatic complexity for computed_score is too high. [7/6]
  def computed_score(link = nil, nil_to_dash = true)
  ^^^
app/helpers/application_helper.rb:121:39: W: Useless assignment to variable - [33me[0m.
  rescue ScoreComputationException => e
                                      ^
app/helpers/application_helper.rb:134:81: C: Line is too long. [81/80]
    fs = computed_score(history_url(@_cud, asmt), false) { aud.final_score @cud }
                                                                                ^
app/helpers/application_helper.rb:154:81: C: Line is too long. [88/80]
      stylesheet_link_tag "#{cloudflare}/twitter-bootstrap/#{version}/css/bootstrap.css"
                                                                                ^^^^^^^^
app/helpers/application_helper.rb:158:3: C: Cyclomatic complexity for external_javascript_include_tag is too high. [11/6]
  def external_javascript_include_tag(library, version)
  ^^^
app/helpers/application_helper.rb:158:3: C: Method has too many lines. [24/10]
  def external_javascript_include_tag(library, version)
  ^^^
app/helpers/application_helper.rb:172:81: C: Line is too long. [83/80]
      javascript_include_tag "#{cloudflare}/backbone.js/#{version}/backbone-min.js"
                                                                                ^^^
app/helpers/application_helper.rb:174:81: C: Line is too long. [102/80]
      javascript_include_tag "#{cloudflare}/backbone-relational/#{version}/backbone-relational.min.js"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:176:81: C: Line is too long. [94/80]
      javascript_include_tag "#{cloudflare}/datatables/#{version}/js/jquery.dataTables.min.js"
                                                                                ^^^^^^^^^^^^^^
app/helpers/application_helper.rb:178:81: C: Line is too long. [87/80]
      javascript_include_tag "#{cloudflare}/handlebars.js/#{version}/handlebars.min.js"
                                                                                ^^^^^^^
app/helpers/application_helper.rb:180:81: C: Line is too long. [89/80]
      javascript_include_tag "#{cloudflare}/twitter-bootstrap/#{version}/js/bootstrap.js"
                                                                                ^^^^^^^^^
app/helpers/assessment_helper.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentHelper
^^^^^^
app/helpers/assessment_helper.rb:2:3: C: Assignment Branch Condition size for stats_table is too high. [19.92/15]
  def stats_table(data)
  ^^^
app/helpers/assessment_helper.rb:2:3: C: Method has too many lines. [27/10]
  def stats_table(data)
  ^^^
app/helpers/assessment_helper.rb:41:3: C: Method has too many lines. [11/10]
  def gradesheet_csv(asmt, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:62:3: C: Assignment Branch Condition size for csv_row_for is too high. [29.02/15]
  def csv_row_for(asmt, cud, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:62:3: C: Cyclomatic complexity for csv_row_for is too high. [8/6]
  def csv_row_for(asmt, cud, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:62:3: C: Method has too many lines. [24/10]
  def csv_row_for(asmt, cud, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:62:3: C: Perceived complexity for csv_row_for is too high. [8/7]
  def csv_row_for(asmt, cud, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:75:81: C: Line is too long. [95/80]
                    # map from problem id to score for the problem (or nil, if no score exists)
                                                                                ^^^^^^^^^^^^^^^
app/helpers/assessment_helper.rb:76:81: C: Line is too long. [81/80]
                    problem_scores_map = aud.latest_submission.problems_to_scores
                                                                                ^
app/helpers/assessment_helper.rb:85:5: W: [33mend[0m at 85, 4 is not aligned with [33mif[0m at 73, 18
    end
    ^^^
app/helpers/assessment_helper.rb:93:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Symbol
      ^^^^
app/helpers/assessment_helper.rb:95:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Float
      ^^^^
app/helpers/assessment_helper.rb:102:7: C: Use snake_case for method names.
  def bulkGrade_cell(cell)
      ^^^^^^^^^^^^^^
app/helpers/assessment_helper.rb:105:81: C: Line is too long. [96/80]
      cell[:error] ? cell[:error] : '<span class="glyphicon glyphicon-search"></span>'.html_safe
                                                                                ^^^^^^^^^^^^^^^^
app/helpers/assessment_helper.rb:113:7: C: Use snake_case for method names.
  def bulkGrade_cell_class(cell)
      ^^^^^^^^^^^^^^^^^^^^
app/helpers/assessment_user_datum_helper.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentUserDatumHelper
^^^^^^
app/helpers/assessment_user_datum_helper.rb:13:81: C: Line is too long. [111/80]
  # Due At in string form. If it is nil (meaning there is infinite extension), display appropriate information.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/assessment_user_datum_helper.rb:18:81: C: Line is too long. [108/80]
  # End At string form. If it is nil (meaning there is infinite extension), display appropriate information.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/course_helper.rb:1:1: C: Missing top-level module documentation comment.
module CourseHelper
^^^^^^
app/helpers/extension_helper.rb:1:1: C: Missing top-level module documentation comment.
module ExtensionHelper
^^^^^^
app/helpers/gradebook_helper.rb:3:1: C: Missing top-level module documentation comment.
module GradebookHelper
^^^^^^
app/helpers/gradebook_helper.rb:4:3: C: Assignment Branch Condition size for gradebook_columns is too high. [17.15/15]
  def gradebook_columns(matrix, course)
  ^^^
app/helpers/gradebook_helper.rb:4:3: C: Method has too many lines. [35/10]
  def gradebook_columns(matrix, course)
  ^^^
app/helpers/gradebook_helper.rb:29:81: C: Line is too long. [81/80]
                     sortable: true, cssClass: "computed assessment_final_score",
                                                                                ^
app/helpers/gradebook_helper.rb:31:81: C: Line is too long. [88/80]
                     before_grading_deadline: matrix.before_grading_deadline?(asmt.id) }
                                                                                ^^^^^^^^
app/helpers/gradebook_helper.rb:43:81: C: Line is too long. [81/80]
                 sortable: true, width: 100, cssClass: "computed course_average",
                                                                                ^
app/helpers/gradebook_helper.rb:53:3: C: Assignment Branch Condition size for gradebook_rows is too high. [57.65/15]
  def gradebook_rows(matrix, course, section = nil, lecture = nil)
  ^^^
app/helpers/gradebook_helper.rb:53:3: C: Cyclomatic complexity for gradebook_rows is too high. [8/6]
  def gradebook_rows(matrix, course, section = nil, lecture = nil)
  ^^^
app/helpers/gradebook_helper.rb:53:3: C: Method has too many lines. [34/10]
  def gradebook_rows(matrix, course, section = nil, lecture = nil)
  ^^^
app/helpers/gradebook_helper.rb:53:3: C: Perceived complexity for gradebook_rows is too high. [8/7]
  def gradebook_rows(matrix, course, section = nil, lecture = nil)
  ^^^
app/helpers/gradebook_helper.rb:60:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if section
      ^^
app/helpers/gradebook_helper.rb:64:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if lecture
      ^^
app/helpers/gradebook_helper.rb:109:3: C: Method has too many lines. [11/10]
  def csv_header(matrix, course)
  ^^^
app/helpers/gradebook_helper.rb:126:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Float
      ^^^^
app/helpers/gradebook_helper.rb:128:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when String
      ^^^^
app/helpers/gradebook_helper.rb:135:3: C: Assignment Branch Condition size for gradebook_csv is too high. [40.12/15]
  def gradebook_csv(matrix, course)
  ^^^
app/helpers/gradebook_helper.rb:135:3: C: Method has too many lines. [17/10]
  def gradebook_csv(matrix, course)
  ^^^
app/helpers/gradebook_helper.rb:143:81: C: Line is too long. [130/80]
        row = [cud.user.email, cud.user.first_name, cud.user.last_name, cud.lecture, cud.section, cud.school, cud.major, cud.year]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/grading_helper.rb:1:1: C: Missing top-level module documentation comment.
module GradingHelper
^^^^^^
app/helpers/groups_helper.rb:1:1: C: Missing top-level module documentation comment.
module GroupsHelper
^^^^^^
app/helpers/home_helper.rb:1:1: C: Missing top-level module documentation comment.
module HomeHelper
^^^^^^
app/helpers/quick_grades_helper.rb:1:1: C: Missing top-level module documentation comment.
module QuickGradesHelper
^^^^^^
app/helpers/scheduler_helper.rb:1:1: C: Missing top-level module documentation comment.
module SchedulerHelper
^^^^^^
app/helpers/submission_helper.rb:1:1: C: Missing top-level module documentation comment.
module SubmissionHelper
^^^^^^
app/helpers/users_helper.rb:1:1: C: Missing top-level module documentation comment.
module UsersHelper
^^^^^^
app/mailers/course_mailer.rb:1:1: C: Missing top-level class documentation comment.
class CourseMailer < ActionMailer::Base
^^^^^
app/mailers/course_mailer.rb:13:26: C: Avoid parameter lists longer than 5 parameters.
  def course_announcement(sender, to, subject, text, cud, course)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/annotation.rb:1:1: C: Missing top-level class documentation comment.
class Annotation < ActiveRecord::Base
^^^^^
app/models/annotation.rb:5:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :submission_id, :filename
  ^^^^^^^^^^^^^^^^^^^^^
app/models/annotation.rb:6:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :line, :comment
  ^^^^^^^^^^^^^^^^^^^^^
app/models/annotation.rb:8:3: C: Method has too many lines. [11/10]
  def as_text
  ^^^
app/models/announcement.rb:1:1: C: Missing top-level class documentation comment.
class Announcement < ActiveRecord::Base
^^^^^
app/models/assessment.rb:4:1: C: Class definition is too long. [276/100]
class Assessment < ActiveRecord::Base
^^^^^
app/models/assessment.rb:4:1: C: Missing top-level class documentation comment.
class Assessment < ActiveRecord::Base
^^^^^
app/models/assessment.rb:22:3: C: Prefer the new style validations [33mvalidates :column, uniqueness: value[0m over [33mvalidates_uniqueness_of[0m.
  validates_uniqueness_of :name, scope: :course_id
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:23:3: C: Prefer the new style validations [33mvalidates :column, length: value[0m over [33mvalidates_length_of[0m.
  validates_length_of :display_name, minimum: 1
  ^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:27:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :max_size, :max_submissions
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:28:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :version_threshold, only_integer: true,
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:29:81: C: Line is too long. [93/80]
                                                greater_than_or_equal_to: -1, allow_nil: true
                                                                                ^^^^^^^^^^^^^
app/models/assessment.rb:30:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :max_grace_days, only_integer: true,
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:31:81: C: Line is too long. [89/80]
                                             greater_than_or_equal_to: 0, allow_nil: true
                                                                                ^^^^^^^^^
app/models/assessment.rb:32:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :group_size, only_integer: true, greater_than_or_equal_to: 1, allow_nil: true
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:32:81: C: Line is too long. [105/80]
  validates_numericality_of :group_size, only_integer: true, greater_than_or_equal_to: 1, allow_nil: true
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:33:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :name, :display_name, :due_at, :end_at, :start_at,
  ^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:34:81: C: Line is too long. [86/80]
                        :grading_deadline, :category_name, :max_size, :max_submissions
                                                                                ^^^^^^
app/models/assessment.rb:37:81: C: Line is too long. [90/80]
  trim_field :name, :display_name, :handin_filename, :handin_directory, :handout, :writeup
                                                                                ^^^^^^^^^^
app/models/assessment.rb:52:81: C: Line is too long. [84/80]
  accepts_nested_attributes_for :late_penalty, :version_penalty, allow_destroy: true
                                                                                ^^^^
app/models/assessment.rb:57:7: C: Use snake_case for method names.
  def create_AUDs_modulo_callbacks
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:69:81: C: Line is too long. [96/80]
      AssessmentUserDatum.where(assessment_id: id, course_user_datum_id: s.course_user_datum_id)
                                                                                ^^^^^^^^^^^^^^^^
app/models/assessment.rb:76:81: C: Line is too long. [83/80]
  # This gives assessments a defined ordering, required for grace day calculations.
                                                                                ^^^
app/models/assessment.rb:103:81: C: Line is too long. [91/80]
  # { problem_id => problem_name } mapping for all problems associated with this assessment
                                                                                ^^^^^^^^^^^
app/models/assessment.rb:115:81: C: Line is too long. [83/80]
    File.join Rails.root, "assessmentConfig", "#{course.name}-#{sanitized_name}.rb"
                                                                                ^^^
app/models/assessment.rb:163:3: C: Assignment Branch Condition size for construct_config_file is too high. [15.52/15]
  def construct_config_file
  ^^^
app/models/assessment.rb:169:81: C: Line is too long. [97/80]
    # uniquely rename module (so that it's unique among all assessment modules loaded in Autolab)
                                                                                ^^^^^^^^^^^^^^^^^
app/models/assessment.rb:170:81: C: Line is too long. [101/80]
    config = source_config.gsub "module #{source_config_module_name}", "module #{config_module_name}"
                                                                                ^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:177:81: C: Line is too long. [88/80]
    # config file might have an updated custom raw score function: clear raw score cache
                                                                                ^^^^^^^^
app/models/assessment.rb:187:81: C: Line is too long. [84/80]
    # (re)load config file if it was updated or wasn't ever loaded into this process
                                                                                ^^^^
app/models/assessment.rb:191:5: W: The use of [33meval[0m is a serious security risk.
    eval config_module_name
    ^^^^
app/models/assessment.rb:240:7: C: Rename [33mhas_groups?[0m to [33mgroups?[0m.
  def has_groups?
      ^^^^^^^^^^^
app/models/assessment.rb:245:81: C: Line is too long. [98/80]
    Group.joins(:assessment_user_data).where(assessment_user_data: { assessment_id: id }).distinct
                                                                                ^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:248:7: C: Use snake_case for method names.
  def grouplessCUDs
      ^^^^^^^^^^^^^
app/models/assessment.rb:249:81: C: Line is too long. [160/80]
    course.course_user_data.joins(:assessment_user_data).where(assessment_user_data: { assessment_id: id, membership_status: AssessmentUserDatum::UNCONFIRMED })
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:259:81: C: Line is too long. [82/80]
    Rails.root.join "courses", course.name, sanitized_name, "#{sanitized_name}.rb"
                                                                                ^^
app/models/assessment.rb:266:3: C: Replace class var @@CONFIG_FILE_LAST_LOADED with a class instance var.
  @@CONFIG_FILE_LAST_LOADED = {}
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:266:3: C: Use snake_case for variable names.
  @@CONFIG_FILE_LAST_LOADED = {}
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:270:81: C: Line is too long. [93/80]
    Object.send :remove_const, config_module_name if Object.const_defined? config_module_name
                                                                                ^^^^^^^^^^^^^
app/models/assessment.rb:292:81: C: Line is too long. [89/80]
  # Manually calculate most recent unignored submission for each user for this assessment
                                                                                ^^^^^^^^^
app/models/assessment.rb:296:81: C: Line is too long. [84/80]
    max_version_subquery = "SELECT * FROM (SELECT MAX(version), course_user_datum_id
                                                                                ^^^^
app/models/assessment.rb:300:81: C: Line is too long. [134/80]
    Submission.select("submissions.*").where("(version, course_user_datum_id) IN (#{max_version_subquery}) AND assessment_id = ?", id)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:317:34: W: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the [33m&[0m if it should be a binary AND.
    s["problems"] = problems.map &:serialize
                                 ^
app/models/assessment.rb:323:81: C: Line is too long. [222/80]
  GENERAL_SERIALIZABLE = Set.new %w(name display_name category_name description handin_filename handin_directory has_autograde has_svn has_scoreboard max_grace_days handout writeup max_submissions disable_handins max_size)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:330:5: W: Useless assignment to variable - [33mattributes[0m.
    attributes = s["general"] if s["general"]
    ^^^^^^^^^^
app/models/assessment.rb:331:5: W: Useless assignment to variable - [33mproblems[0m.
    problems = Problem.deserialize_list s["problems"] if s["problems"]
    ^^^^^^^^
app/models/assessment.rb:332:5: W: Useless assignment to variable - [33mautograding_setup[0m.
    autograding_setup = AutogradingSetup.deserialize s["autograding_setup"] if s["autograding_setup"]
    ^^^^^^^^^^^^^^^^^
app/models/assessment.rb:332:81: C: Line is too long. [101/80]
    autograding_setup = AutogradingSetup.deserialize s["autograding_setup"] if s["autograding_setup"]
                                                                                ^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:333:5: W: Useless assignment to variable - [33mscoreboard_setup[0m.
    scoreboard_setup = ScoreboardSetup.deserialize s["autograding_setup"] if s["scoreboard_setup"]
    ^^^^^^^^^^^^^^^^
app/models/assessment.rb:333:81: C: Line is too long. [98/80]
    scoreboard_setup = ScoreboardSetup.deserialize s["autograding_setup"] if s["scoreboard_setup"]
                                                                                ^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:351:7: C: Rename [33mis_file?[0m to [33mfile?[0m.
  def is_file?(name)
      ^^^^^^^^
app/models/assessment.rb:356:81: C: Line is too long. [89/80]
    errors.add :start_at, "must be before time assessment is due at" if start_at > due_at
                                                                                ^^^^^^^^^
app/models/assessment.rb:357:81: C: Line is too long. [83/80]
    errors.add :due_at, "must be before time assessment ends at" if due_at > end_at
                                                                                ^^^
app/models/assessment.rb:367:81: C: Line is too long. [85/80]
      errors.add :handin_directory, "must be specified when handins are enabled" if d
                                                                                ^^^^^
app/models/assessment.rb:368:81: C: Line is too long. [84/80]
      errors.add :handin_filename, "must be specified when handins are enabled" if f
                                                                                ^^^^
app/models/assessment.rb:374:3: C: Method has too many lines. [17/10]
  def handin_directory_exists_or_disable_handins
  ^^^
app/models/assessment.rb:385:81: C: Line is too long. [102/80]
          errors.add :handin_directory, "(#{dir}) could not be created, please do so manually. (#{e})"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:4:1: C: Class definition is too long. [218/100]
class AssessmentUserDatum < ActiveRecord::Base
^^^^^
app/models/assessment_user_datum.rb:12:81: C: Line is too long. [96/80]
  # * when a new submission is made, it is possible that the number of grace days used increased
                                                                                ^^^^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:13:81: C: Line is too long. [101/80]
  #   so we need to invalidate the cumulative grace days used for all AUDs for assessments after this
                                                                                ^^^^^^^^^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:16:81: C: Line is too long. [92/80]
  # * similarly, when the grade type is updated, the number of grace days used could change.
                                                                                ^^^^^^^^^^^^
app/models/assessment_user_datum.rb:17:81: C: Line is too long. [97/80]
  #   submissions associated with AUDs with Zeroed and Excused grade types aren't counted as late
                                                                                ^^^^^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:18:81: C: Line is too long. [98/80]
  #   even if they were submitted past the due date whereas Normal grade type AUD submissions are.
                                                                                ^^^^^^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:19:81: C: Line is too long. [89/80]
  after_save :invalidate_cgdubs_for_assessments_after, if: :latest_submission_id_changed?
                                                                                ^^^^^^^^^
app/models/assessment_user_datum.rb:42:81: C: Line is too long. [104/80]
    (flags == UNCONFIRMED && membership_status == UNCONFIRMED) || ((membership_status & flags) == flags)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:49:81: C: Line is too long. [81/80]
  #   2. A: aud.latest_submission = find_latest_submission (returns submission 1)
                                                                                ^
app/models/assessment_user_datum.rb:51:81: C: Line is too long. [81/80]
  #   4. B: aud.latest_submission = find_latest_submission (returns submission 2)
                                                                                ^
app/models/assessment_user_datum.rb:52:81: C: Line is too long. [107/80]
  #   5. B: aud.save                                       (submission 2 is saved as aud.latest_submission)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:53:81: C: Line is too long. [116/80]
  #   6. A: aud.save                                       (but then submission 1 is saved as aud.latest_submission)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:70:81: C: Line is too long. [82/80]
                                       course_user_datum_id: course_user_datum_id,
                                                                                ^^
app/models/assessment_user_datum.rb:74:5: C: Redundant empty [33melse[0m-clause.
    else
    ^^^^
app/models/assessment_user_datum.rb:121:81: C: Line is too long. [82/80]
    # if the assessment has no max_grace_days specified, then upto grace_days_left
                                                                                ^^
app/models/assessment_user_datum.rb:167:3: C: Method has too many lines. [13/10]
  def can_submit?(at, submitter = course_user_datum)
  ^^^
app/models/assessment_user_datum.rb:188:81: C: Line is too long. [86/80]
      count = assessment.submissions.where(course_user_datum: course_user_datum).count
                                                                                ^^^^^^
app/models/assessment_user_datum.rb:202:81: C: Line is too long. [93/80]
    Extension.where(course_user_datum: course_user_datum, assessment_id: assessment_id).first
                                                                                ^^^^^^^^^^^^^
app/models/assessment_user_datum.rb:209:81: C: Line is too long. [88/80]
  # Quickly create an AUD (without any callbacks, validations, AR object creation, etc.)
                                                                                ^^^^^^^^
app/models/assessment_user_datum.rb:212:31: W: Ambiguous splat operator. Parenthesize the method arguments if it's surely a splat operator, or add a whitespace to the right of the [33m*[0m if it should be a multiplication.
    values = params.values_at *columns
                              ^
app/models/assessment_user_datum.rb:217:81: C: Line is too long. [84/80]
    insert_sql = "INSERT INTO #{table_name} (#{columns_sql}) VALUES (#{values_sql})"
                                                                                ^^^^
app/models/assessment_user_datum.rb:246:5: C: Annotation keywords should be all upper case, followed by a colon and a space, then a note describing the problem.
  # TODO:
    ^^^^^
app/models/assessment_user_datum.rb:269:3: C: Method has too many lines. [15/10]
  def final_score!(as_seen_by)
  ^^^
app/models/assessment_user_datum.rb:271:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when NORMAL
      ^^^^
app/models/assessment_user_datum.rb:279:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when ZEROED
      ^^^^
app/models/assessment_user_datum.rb:281:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when EXCUSED
      ^^^^
app/models/assessment_user_datum.rb:327:5: C: Redundant empty [33melse[0m-clause.
    else
    ^^^^
app/models/assessment_user_datum.rb:333:81: C: Line is too long. [100/80]
    auds = course_user_datum.assessment_user_data.joins(:assessment).order(Assessment::ORDERING).all
                                                                                ^^^^^^^^^^^^^^^^^^^^
app/models/attachment.rb:30:68: E: bare backslash only allowed before newline
    COURSE_LOGGER.log("Created Attachment #{id}:#{self.filename} " \ 
                                                                   ^
app/models/attachment.rb:31:7: E: unexpected token tSTRING_BEG
      "(#{self.mime_type}) as \"#{self.name}\")")
      ^
app/models/attachment.rb:31:49: E: unexpected token tRPAREN
      "(#{self.mime_type}) as \"#{self.name}\")")
                                                ^
app/models/authentication.rb:1:1: C: Missing top-level class documentation comment.
class Authentication < ActiveRecord::Base
^^^^^
app/models/autograding_setup.rb:1:1: C: Missing top-level class documentation comment.
class AutogradingSetup < ActiveRecord::Base
^^^^^
app/models/autograding_setup.rb:6:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :autograde_timeout
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/autograding_setup.rb:7:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :autograde_timeout
  ^^^^^^^^^^^^^^^^^^^^^
app/models/autograding_setup.rb:8:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :autograde_image
  ^^^^^^^^^^^^^^^^^^^^^
app/models/autograding_setup.rb:9:3: C: Prefer the new style validations [33mvalidates :column, length: value[0m over [33mvalidates_length_of[0m.
  validates_length_of :autograde_image,  maximum: 64
  ^^^^^^^^^^^^^^^^^^^
app/models/autograding_setup.rb:14:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless autograde_timeout.blank?
    ^^^^^^
app/models/autograding_setup.rb:15:81: C: Line is too long. [92/80]
      errors.add :autograde_timeout, "must be at least 10 seconds" if autograde_timeout < 10
                                                                                ^^^^^^^^^^^^
app/models/autograding_setup.rb:16:81: C: Line is too long. [93/80]
      errors.add :autograde_timeout, "must be at most 600 seconds" if autograde_timeout > 600
                                                                                ^^^^^^^^^^^^^
app/models/course.rb:4:1: C: Class definition is too long. [136/100]
class Course < ActiveRecord::Base
^^^^^
app/models/course.rb:4:1: C: Missing top-level class documentation comment.
class Course < ActiveRecord::Base
^^^^^
app/models/course.rb:6:3: C: Prefer the new style validations [33mvalidates :column, uniqueness: value[0m over [33mvalidates_uniqueness_of[0m.
  validates_uniqueness_of :name
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:7:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :display_name, :start_date, :end_date
  ^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:8:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :late_slack, :grace_days, :late_penalty, :version_penalty
  ^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:8:81: C: Line is too long. [81/80]
  validates_presence_of :late_slack, :grace_days, :late_penalty, :version_penalty
                                                                                ^
app/models/course.rb:9:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :grace_days, greater_than_or_equal_to: 0
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:10:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :version_threshold, only_integer: true, greater_than_or_equal_to: -1
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:10:81: C: Line is too long. [96/80]
  validates_numericality_of :version_threshold, only_integer: true, greater_than_or_equal_to: -1
                                                                                ^^^^^^^^^^^^^^^^
app/models/course.rb:32:3: C: Assignment Branch Condition size for init_course_folder is too high. [19.24/15]
  def init_course_folder
  ^^^
app/models/course.rb:36:20: W: [33m(...)[0m interpreted as grouped expression.
    FileUtils.touch (File.join course_dir, "autolab.log")
                   ^
app/models/course.rb:42:22: W: [33m(...)[0m interpreted as grouped expression.
    FileUtils.mkdir_p (File.join Rails.root, "assessmentConfig")
                     ^
app/models/course.rb:43:22: W: [33m(...)[0m interpreted as grouped expression.
    FileUtils.mkdir_p (File.join Rails.root, "courseConfig")
                     ^
app/models/course.rb:44:22: W: [33m(...)[0m interpreted as grouped expression.
    FileUtils.mkdir_p (File.join Rails.root, "gradebooks")
                     ^
app/models/course.rb:48:81: C: Line is too long. [81/80]
    errors.add(:start_date, "must come before end date") if start_date > end_date
                                                                                ^
app/models/course.rb:73:3: C: Assignment Branch Condition size for reload_config_file is too high. [27.96/15]
  def reload_config_file
  ^^^
app/models/course.rb:73:3: C: Method has too many lines. [21/10]
  def reload_config_file
  ^^^
app/models/course.rb:85:5: C: Prefer [33meach[0m over [33mfor[0m.
    for line in lines do
    ^^^
app/models/course.rb:96:5: W: The use of [33meval[0m is a serious security risk.
    eval("Course#{course.camelize}")
    ^^^^
app/models/course.rb:106:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => @error
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:141:81: C: Line is too long. [93/80]
    course_user_data.where(course_assistant: false, instructor: false, dropped: [false, nil])
                                                                                ^^^^^^^^^^^^^
app/models/course.rb:171:24: W: The use of [33meval[0m is a serious security risk.
      Class.new.extend eval(config_module_name)
                       ^^^^
app/models/course_logger.rb:1:1: C: Missing top-level class documentation comment.
class Logger
^^^^^
app/models/course_logger.rb:3:5: C: Use snake_case for variable names.
    strTime = time.strftime("%m/%d/%y %H:%M:%S")
    ^^^^^^^
app/models/course_logger.rb:8:1: C: Missing top-level class documentation comment.
class CourseLogger
^^^^^
app/models/course_logger.rb:13:7: C: Use snake_case for method names.
  def setCourse(course)
      ^^^^^^^^^
app/models/course_logger.rb:15:81: C: Line is too long. [87/80]
    @logger = Logger.new("#{Rails.root}/courses/#{course.name}/autolab.log", "monthly")
                                                                                ^^^^^^^
app/models/course_user_datum.rb:3:1: C: Class definition is too long. [200/100]
class CourseUserDatum < ActiveRecord::Base
^^^^^
app/models/course_user_datum.rb:3:1: C: Missing top-level class documentation comment.
class CourseUserDatum < ActiveRecord::Base
^^^^^
app/models/course_user_datum.rb:4:3: C: Missing top-level class documentation comment.
  class AuthenticationFailed < Exception
  ^^^^^
app/models/course_user_datum.rb:35:5: W: Useless assignment to variable - [33mconditions[0m.
    conditions = columns.map do|c|
    ^^^^^^^^^^
app/models/course_user_datum.rb:42:5: C: Prefer [33meach[0m over [33mfor[0m.
    for column in CourseUserDatum.content_columns
    ^^^
app/models/course_user_datum.rb:42:5: C: Use [33mnext[0m to skip iteration.
    for column in CourseUserDatum.content_columns
    ^^^
app/models/course_user_datum.rb:104:7: C: Use snake_case for method names.
  def CA_of?(student)
      ^^^^^^
app/models/course_user_datum.rb:118:7: C: Use snake_case for method names.
  def CA_only?
      ^^^^^^^^
app/models/course_user_datum.rb:134:81: C: Line is too long. [86/80]
    @category_average[category][as_seen_by] ||= category_average! category, as_seen_by
                                                                                ^^^^^^
app/models/course_user_datum.rb:137:3: C: Cyclomatic complexity for has_auth_level? is too high. [8/6]
  def has_auth_level?(level)
  ^^^
app/models/course_user_datum.rb:137:3: C: Method has too many lines. [12/10]
  def has_auth_level?(level)
  ^^^
app/models/course_user_datum.rb:137:7: C: Rename [33mhas_auth_level?[0m to [33mauth_level?[0m.
  def has_auth_level?(level)
      ^^^^^^^^^^^^^^^
app/models/course_user_datum.rb:174:5: W: Useless assignment to variable - [33mcud[0m.
    cud = user.course_user_data.where(course: course).first
    ^^^
app/models/course_user_datum.rb:179:3: C: Method has too many lines. [14/10]
  def self.find_or_create_cud_for_course(course, uid)
  ^^^
app/models/course_user_datum.rb:193:81: C: Line is too long. [86/80]
        return new_cud.save ? [new_cud, :admin_created] : [nil, :admin_creation_error]
                                                                                ^^^^^^
app/models/course_user_datum.rb:203:7: C: Use snake_case for method names.
  def create_AUDs_modulo_callbacks
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course_user_datum.rb:222:3: C: Method has too many lines. [12/10]
  def category_average!(category, as_seen_by)
  ^^^
app/models/course_user_datum.rb:234:5: W: [33mend[0m at 234, 4 is not aligned with [33mif[0m at 227, 14
    end
    ^^^
app/models/course_user_datum.rb:243:5: C: Redundant empty [33melse[0m-clause.
    else
    ^^^^
app/models/course_user_datum.rb:248:3: C: Assignment Branch Condition size for category_average_input is too high. [16.58/15]
  def category_average_input(category, as_seen_by)
  ^^^
app/models/course_user_datum.rb:253:5: W: Useless assignment to variable - [33muser_id[0m.
    user_id = id
    ^^^^^^^
app/models/course_user_datum.rb:263:3: C: Assignment Branch Condition size for average_input is too high. [17.46/15]
  def average_input(as_seen_by)
  ^^^
app/models/course_user_datum.rb:267:5: W: Useless assignment to variable - [33muser_id[0m.
    user_id = id
    ^^^^^^^
app/models/extension.rb:24:57: E: bare backslash only allowed before newline
      COURSE_LOGGER.log("Extension #{id}: CREATED for " \ 
                                                        ^
app/models/extension.rb:25:7: E: unexpected token tSTRING_BEG
      "#{course_user_datum.user.email} on" \
      ^
app/models/extension.rb:26:47: E: unexpected token tRPAREN
      " #{assessment.name} for unlimited days")
                                              ^
app/models/extension.rb:35:57: E: bare backslash only allowed before newline
    COURSE_LOGGER.log("Extension #{id}: DESTROYED for " \ 
                                                        ^
app/models/extension.rb:36:5: E: unexpected token tSTRING_BEG
    "#{course_user_datum.user.email} on" \
    ^
app/models/extension.rb:37:28: E: unexpected token tRPAREN
      " #{assessment.name}")
                           ^
app/models/grade_matrix.rb:1:1: C: Class definition is too long. [102/100]
class GradeMatrix
^^^^^
app/models/grade_matrix.rb:1:1: C: Missing top-level class documentation comment.
class GradeMatrix
^^^^^
app/models/grade_matrix.rb:4:3: C: Method has too many lines. [13/10]
  def initialize(course, as_seen_by)
  ^^^
app/models/grade_matrix.rb:12:41: W: Do not use prefix [33m_[0m for a variable that is used.
      AssociationCache.new(@course) do |_|
                                        ^
app/models/grade_matrix.rb:59:7: C: Rename [33mhas_assessment?[0m to [33massessment?[0m.
  def has_assessment?(asmt_id)
      ^^^^^^^^^^^^^^^
app/models/grade_matrix.rb:64:7: C: Rename [33mhas_cud?[0m to [33mcud?[0m.
  def has_cud?(cud_id)
      ^^^^^^^^
app/models/grade_matrix.rb:69:7: C: Rename [33mhas_category?[0m to [33mcategory?[0m.
  def has_category?(cat)
      ^^^^^^^^^^^^^
app/models/grade_matrix.rb:83:3: C: Assignment Branch Condition size for matrix! is too high. [32.08/15]
  def matrix!
  ^^^
app/models/grade_matrix.rb:83:3: C: Method has too many lines. [29/10]
  def matrix!
  ^^^
app/models/grade_matrix.rb:121:3: C: Assignment Branch Condition size for summarize is too high. [21.12/15]
  def summarize(aud)
  ^^^
app/models/grade_matrix.rb:121:3: C: Method has too many lines. [12/10]
  def summarize(aud)
  ^^^
app/models/grade_matrix.rb:127:81: C: Line is too long. [84/80]
    info["grade_type"] = (AssessmentUserDatum.grade_type_to_sym aud.grade_type).to_s
                                                                                ^^^^
app/models/group.rb:1:1: C: Missing top-level class documentation comment.
class Group < ActiveRecord::Base
^^^^^
app/models/group.rb:7:7: C: Rename [33mis_member[0m to [33mmember?[0m.
  def is_member(aud)
      ^^^^^^^^^
app/models/penalty.rb:1:1: C: Missing top-level class documentation comment.
class Penalty < ScoreAdjustment
^^^^^
app/models/penalty.rb:3:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :value, greater_than_or_equal_to: 0
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/problem.rb:1:1: C: Missing top-level class documentation comment.
class Problem < ActiveRecord::Base
^^^^^
app/models/problem.rb:9:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :name
  ^^^^^^^^^^^^^^^^^^^^^
app/models/problem.rb:18:18: W: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the [33m&[0m if it should be a binary AND.
    problems.map &:deserialize
                 ^
app/models/scheduler.rb:1:1: C: Missing top-level class documentation comment.
class Scheduler < ActiveRecord::Base
^^^^^
app/models/scheduler.rb:6:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :interval
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/scheduler.rb:7:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :action
  ^^^^^^^^^^^^^^^^^^^^^
app/models/score.rb:52:52: E: bare backslash only allowed before newline
      COURSE_LOGGER.log("Score #{id} UPDATED for " \  
                                                   ^
app/models/score.rb:53:7: E: unexpected token tSTRING_BEG
      "#{submission.course_user_datum.user.email} set to " \
      ^
app/models/score.rb:55:19: E: unexpected token tRPAREN
      " #{setter}")
                  ^
app/models/score_adjustment.rb:1:1: C: Missing top-level class documentation comment.
class ScoreAdjustment < ActiveRecord::Base
^^^^^
app/models/score_adjustment.rb:4:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :value, :kind
  ^^^^^^^^^^^^^^^^^^^^^
app/models/score_adjustment.rb:5:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :value
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/score_adjustment.rb:13:81: C: Line is too long. [83/80]
  # @param multiplier +ve int               Number of times to apply the adjustment
                                                                                ^^^
app/models/score_adjustment.rb:16:3: C: Method has too many lines. [18/10]
  def self.applied_value(adj, score, multiplier)
  ^^^
app/models/score_adjustment.rb:18:7: C: Provide an exception class and message as arguments to [33mfail[0m.
      fail ArgumentError.new("ScoreAdjustment.applied_value: score was nil")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/score_adjustment.rb:69:5: C: Favor [33mformat[0m over [33msprintf[0m.
    sprintf("%+g", value) + " " + type_str
    ^^^^^^^
app/models/scoreboard_setup.rb:1:1: C: Missing top-level class documentation comment.
class ScoreboardSetup < ActiveRecord::Base
^^^^^
app/models/scoreboard_setup.rb:18:3: C: Assignment Branch Condition size for col_spec is too high. [34.91/15]
  def col_spec
  ^^^
app/models/scoreboard_setup.rb:18:3: C: Cyclomatic complexity for col_spec is too high. [12/6]
  def col_spec
  ^^^
app/models/scoreboard_setup.rb:18:3: C: Method has too many lines. [35/10]
  def col_spec
  ^^^
app/models/scoreboard_setup.rb:18:3: C: Perceived complexity for col_spec is too high. [12/7]
  def col_spec
  ^^^
app/models/scoreboard_setup.rb:25:81: C: Line is too long. [88/80]
      quoted = colspec.gsub(/([a-zA-Z0-9]+):/, '"\1":').gsub(/:([a-zA-Z0-9]+)/, ':"\1"')
                                                                                ^^^^^^^^
app/models/scoreboard_setup.rb:27:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/models/scoreboard_setup.rb:38:81: C: Line is too long. [92/80]
    # Scoreboard object must be an array of hashes. The only valid keys are 'hdr' and 'asc'.
                                                                                ^^^^^^^^^^^^
app/models/scoreboard_setup.rb:40:81: C: Line is too long. [89/80]
      errors.add "colspec", "the 'scoreboard' object must be a non-empty array of hashes"
                                                                                ^^^^^^^^^
app/models/scoreboard_setup.rb:62:81: C: Line is too long. [112/80]
          errors.add "colspec", "'asc' key in col #{i} ignored because only the first three columns are sorted."
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/submission.rb:169:55: E: bare backslash only allowed before newline
      COURSE_LOGGER.log("Submission #{id} SAVED for " \ 
                                                      ^
app/models/submission.rb:170:9: E: unexpected token tSTRING_BEG
        "#{course_user_datum.user.email} on" \
        ^
app/models/submission.rb:172:35: E: unexpected token tRPAREN
        "version: #{self.version}") 
                                  ^
app/models/submission.rb:570:1: E: unexpected token $end
app/models/tweak.rb:1:1: C: Missing top-level class documentation comment.
class Tweak < ScoreAdjustment
^^^^^
app/models/tweak.rb:12:7: C: Provide an exception class and message as arguments to [33mfail[0m.
      fail ArgumentError.new("ScoreAdjustment.apply_tweak: score was nil")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:1:1: C: Class definition is too long. [136/100]
class User < ActiveRecord::Base
^^^^^
app/models/user.rb:1:1: C: Missing top-level class documentation comment.
class User < ActiveRecord::Base
^^^^^
app/models/user.rb:15:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :first_name, :last_name, :email
  ^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:22:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if cud.instructor?
      ^^
app/models/user.rb:34:10: C: Use [33mnext[0m to skip iteration.
    cuds.each do |cud|
         ^^^^
app/models/user.rb:36:9: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        unless cud.course.course_user_data.where(user: user).empty?
        ^^^^^^
app/models/user.rb:74:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if authentication && authentication.user
    ^^
app/models/user.rb:82:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if authentication && authentication.user
    ^^
app/models/user.rb:90:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if authentication && authentication.user
    ^^
app/models/user.rb:95:3: C: Assignment Branch Condition size for new_with_session is too high. [35.26/15]
  def self.new_with_session(params, session)
  ^^^
app/models/user.rb:95:3: C: Method has too many lines. [19/10]
  def self.new_with_session(params, session)
  ^^^
app/models/user.rb:97:15: W: Assignment in condition - you probably meant to use [33m==[0m.
      if data = session["devise.facebook_data"]
              ^
app/models/user.rb:103:18: W: Assignment in condition - you probably meant to use [33m==[0m.
      elsif data = session["devise.google_oauth2_data"]
                 ^
app/models/user.rb:109:18: W: Assignment in condition - you probably meant to use [33m==[0m.
      elsif data = session["devise.shibboleth_data"]
                 ^
app/models/user.rb:118:3: C: Assignment Branch Condition size for roster_create is too high. [19.26/15]
  def self.roster_create(email, first_name, last_name, school, major, year)
  ^^^
app/models/user.rb:118:3: C: Method has too many lines. [21/10]
  def self.roster_create(email, first_name, last_name, school, major, year)
  ^^^
app/models/user.rb:118:25: C: Avoid parameter lists longer than 5 parameters.
  def self.roster_create(email, first_name, last_name, school, major, year)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:147:3: C: Method has too many lines. [11/10]
  def self.instructor_create(email, course_name)
  ^^^
app/models/user_module.rb:1:1: C: Class definition is too long. [145/100]
class UserModule < ActiveRecord::Base
^^^^^
app/models/user_module.rb:1:1: C: Missing top-level class documentation comment.
class UserModule < ActiveRecord::Base
^^^^^
app/models/user_module.rb:14:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless whitelist.find { |c| c == arg.class }
    ^^^^^^
app/models/user_module.rb:20:7: C: Use snake_case for method names.
  def addColumn(field_name, data_type)
      ^^^^^^^^^
app/models/user_module.rb:21:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if data_type.class != Class
    ^^
app/models/user_module.rb:30:3: C: Method has too many lines. [12/10]
  def removeColumn(field_name)
  ^^^
app/models/user_module.rb:30:7: C: Use snake_case for method names.
  def removeColumn(field_name)
      ^^^^^^^^^^^^
app/models/user_module.rb:32:81: C: Line is too long. [85/80]
    result = ActiveRecord::Base.connection.select_all("SELECT `id` from module_fields
                                                                                ^^^^^
app/models/user_module.rb:35:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if result.empty?
    ^^
app/models/user_module.rb:46:3: C: Assignment Branch Condition size for put is too high. [18.14/15]
  def put(fieldName, data_id, data)
  ^^^
app/models/user_module.rb:46:3: C: Method has too many lines. [21/10]
  def put(fieldName, data_id, data)
  ^^^
app/models/user_module.rb:47:5: C: Use snake_case for variable names.
    fieldName = sql_safe(fieldName)
    ^^^^^^^^^
app/models/user_module.rb:51:81: C: Line is too long. [86/80]
    result =  ActiveRecord::Base.connection.select_all("SELECT `id` from module_fields
                                                                                ^^^^^^
app/models/user_module.rb:54:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if result.empty?
    ^^
app/models/user_module.rb:75:3: C: Method has too many lines. [11/10]
  def delete(fieldName, data_id)
  ^^^
app/models/user_module.rb:76:5: C: Use snake_case for variable names.
    fieldName = sql_safe(fieldName)
    ^^^^^^^^^
app/models/user_module.rb:79:81: C: Line is too long. [85/80]
    result = ActiveRecord::Base.connection.select_all("SELECT `id` from module_fields
                                                                                ^^^^^
app/models/user_module.rb:82:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if result.empty?
    ^^
app/models/user_module.rb:92:3: C: Assignment Branch Condition size for get is too high. [36.25/15]
  def get(fieldName, data_id = nil)
  ^^^
app/models/user_module.rb:92:3: C: Cyclomatic complexity for get is too high. [10/6]
  def get(fieldName, data_id = nil)
  ^^^
app/models/user_module.rb:92:3: C: Method has too many lines. [45/10]
  def get(fieldName, data_id = nil)
  ^^^
app/models/user_module.rb:92:3: C: Perceived complexity for get is too high. [13/7]
  def get(fieldName, data_id = nil)
  ^^^
app/models/user_module.rb:93:5: C: Use snake_case for variable names.
    fieldName = sql_safe(fieldName)
    ^^^^^^^^^
app/models/user_module.rb:100:81: C: Line is too long. [97/80]
    result = ActiveRecord::Base.connection.select_all("SELECT `id`,`data_type` from module_fields
                                                                                ^^^^^^^^^^^^^^^^^
app/models/user_module.rb:103:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if result.empty?
    ^^
app/models/user_module.rb:110:81: C: Line is too long. [82/80]
      result = ActiveRecord::Base.connection.select_all("SELECT * from module_data
                                                                                ^^
app/models/user_module.rb:113:81: C: Line is too long. [82/80]
      result = ActiveRecord::Base.connection.select_all("SELECT * from module_data
                                                                                ^^
app/models/user_module.rb:117:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if result.empty?
    ^^
app/models/user_module.rb:123:9: C: Prefer [33meach[0m over [33mfor[0m.
        for r in result do
        ^^^
app/models/user_module.rb:128:40: W: The use of [33meval[0m is a serious security risk.
          results[r["data_id"].to_i] = eval("#{data_type}(\"#{r['data']}\")")
                                       ^^^^
app/models/user_module.rb:132:16: W: The use of [33meval[0m is a serious security risk.
        return eval("#{data_type}(\"#{result[0]['data']}\")")
               ^^^^
app/models/user_module.rb:135:7: C: Do not write to stdout. Use Rails' logger if you want to log.
      puts $ERROR_INFO
      ^^^^
app/models/user_module.rb:138:9: C: Prefer [33meach[0m over [33mfor[0m.
        for r in result do
        ^^^
app/models/user_module.rb:147:3: C: Assignment Branch Condition size for getByVal is too high. [24.23/15]
  def getByVal(fieldName, data)
  ^^^
app/models/user_module.rb:147:3: C: Method has too many lines. [25/10]
  def getByVal(fieldName, data)
  ^^^
app/models/user_module.rb:147:7: C: Use snake_case for method names.
  def getByVal(fieldName, data)
      ^^^^^^^^
app/models/user_module.rb:148:5: C: Use snake_case for variable names.
    fieldName = sql_safe(fieldName)
    ^^^^^^^^^
app/models/user_module.rb:151:81: C: Line is too long. [97/80]
    result = ActiveRecord::Base.connection.select_all("SELECT `id`,`data_type` from module_fields
                                                                                ^^^^^^^^^^^^^^^^^
app/models/user_module.rb:154:5: C: Do not write to stdout. Use Rails' logger if you want to log.
    puts result
    ^^^^
app/models/user_module.rb:155:5: C: Do not write to stdout. Use Rails' logger if you want to log.
    puts result.count
    ^^^^
app/models/user_module.rb:156:5: C: Do not write to stdout. Use Rails' logger if you want to log.
    puts "restss"
    ^^^^
app/models/user_module.rb:157:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if result.empty?
    ^^
app/models/user_module.rb:164:5: W: Unreachable code detected.
    result = ActiveRecord::Base.connection.select_all("SELECT * from module_data
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user_module.rb:168:7: C: Prefer [33meach[0m over [33mfor[0m.
      for r in result do
      ^^^
assessmentConfig/AutoPopulated-balls.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-balls.rb:4:1: C: Missing top-level module documentation comment.
module BallsAutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-balls.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-balls2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-balls2.rb:4:1: C: Missing top-level module documentation comment.
module Balls2AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-balls2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category0assessment0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category0assessment0.rb:4:1: C: Missing top-level module documentation comment.
module Category0assessment0AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category0assessment0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category0assessment1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category0assessment1.rb:4:1: C: Missing top-level module documentation comment.
module Category0assessment1AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category0assessment1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category0assessment2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category0assessment2.rb:4:1: C: Missing top-level module documentation comment.
module Category0assessment2AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category0assessment2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category0assessment3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category0assessment3.rb:4:1: C: Missing top-level module documentation comment.
module Category0assessment3AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category0assessment3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category0assessment4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category0assessment4.rb:4:1: C: Missing top-level module documentation comment.
module Category0assessment4AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category0assessment4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category0assessment5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category0assessment5.rb:4:1: C: Missing top-level module documentation comment.
module Category0assessment5AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category0assessment5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category1assessment0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category1assessment0.rb:4:1: C: Missing top-level module documentation comment.
module Category1assessment0AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category1assessment0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category1assessment1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category1assessment1.rb:4:1: C: Missing top-level module documentation comment.
module Category1assessment1AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category1assessment1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category1assessment2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category1assessment2.rb:4:1: C: Missing top-level module documentation comment.
module Category1assessment2AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category1assessment2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category1assessment3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category1assessment3.rb:4:1: C: Missing top-level module documentation comment.
module Category1assessment3AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category1assessment3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category1assessment4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category1assessment4.rb:4:1: C: Missing top-level module documentation comment.
module Category1assessment4AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category1assessment4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category1assessment5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category1assessment5.rb:4:1: C: Missing top-level module documentation comment.
module Category1assessment5AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category1assessment5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category2assessment0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category2assessment0.rb:4:1: C: Missing top-level module documentation comment.
module Category2assessment0AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category2assessment0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category2assessment1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category2assessment1.rb:4:1: C: Missing top-level module documentation comment.
module Category2assessment1AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category2assessment1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category2assessment2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category2assessment2.rb:4:1: C: Missing top-level module documentation comment.
module Category2assessment2AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category2assessment2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category2assessment3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category2assessment3.rb:4:1: C: Missing top-level module documentation comment.
module Category2assessment3AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category2assessment3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category2assessment4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category2assessment4.rb:4:1: C: Missing top-level module documentation comment.
module Category2assessment4AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category2assessment4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-category2assessment5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-category2assessment5.rb:4:1: C: Missing top-level module documentation comment.
module Category2assessment5AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-category2assessment5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-homework0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-homework0.rb:4:1: C: Missing top-level module documentation comment.
module Homework0AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-homework0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-homework1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-homework1.rb:4:1: C: Missing top-level module documentation comment.
module Homework1AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-homework1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-homework2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-homework2.rb:4:1: C: Missing top-level module documentation comment.
module Homework2AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-homework2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-homework3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-homework3.rb:4:1: C: Missing top-level module documentation comment.
module Homework3AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-homework3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-homework4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-homework4.rb:4:1: C: Missing top-level module documentation comment.
module Homework4AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-homework4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-homework5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-homework5.rb:4:1: C: Missing top-level module documentation comment.
module Homework5AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-homework5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-lab0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-lab0.rb:4:1: C: Missing top-level module documentation comment.
module Lab0AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-lab0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-lab1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-lab1.rb:4:1: C: Missing top-level module documentation comment.
module Lab1AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-lab1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-lab2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-lab2.rb:4:1: C: Missing top-level module documentation comment.
module Lab2AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-lab2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-lab3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-lab3.rb:4:1: C: Missing top-level module documentation comment.
module Lab3AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-lab3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-lab4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-lab4.rb:4:1: C: Missing top-level module documentation comment.
module Lab4AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-lab4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-lab5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-lab5.rb:4:1: C: Missing top-level module documentation comment.
module Lab5AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-lab5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-labtemplate.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-labtemplate.rb:4:1: C: Missing top-level module documentation comment.
module LabtemplateAutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-labtemplate.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-quiz0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-quiz0.rb:4:1: C: Missing top-level module documentation comment.
module Quiz0AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-quiz0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-quiz1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-quiz1.rb:4:1: C: Missing top-level module documentation comment.
module Quiz1AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-quiz1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-quiz2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-quiz2.rb:4:1: C: Missing top-level module documentation comment.
module Quiz2AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-quiz2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-quiz3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-quiz3.rb:4:1: C: Missing top-level module documentation comment.
module Quiz3AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-quiz3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-quiz4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-quiz4.rb:4:1: C: Missing top-level module documentation comment.
module Quiz4AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-quiz4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-quiz5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-quiz5.rb:4:1: C: Missing top-level module documentation comment.
module Quiz5AutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-quiz5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-shankadonkey.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-shankadonkey.rb:4:1: C: Missing top-level module documentation comment.
module ShankadonkeyAutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-shankadonkey.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated-shankspank.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated-shankspank.rb:4:1: C: Missing top-level module documentation comment.
module ShankspankAutoPopulated
^^^^^^
assessmentConfig/AutoPopulated-shankspank.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-category2assessment5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-category2assessment5.rb:4:1: C: Missing top-level module documentation comment.
module Category2assessment5AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-category2assessment5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-homework0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-homework0.rb:4:1: C: Missing top-level module documentation comment.
module Homework0AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-homework0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-homework1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-homework1.rb:4:1: C: Missing top-level module documentation comment.
module Homework1AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-homework1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-homework2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-homework2.rb:4:1: C: Missing top-level module documentation comment.
module Homework2AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-homework2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-homework3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-homework3.rb:4:1: C: Missing top-level module documentation comment.
module Homework3AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-homework3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-homework4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-homework4.rb:4:1: C: Missing top-level module documentation comment.
module Homework4AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-homework4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-homework5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-homework5.rb:4:1: C: Missing top-level module documentation comment.
module Homework5AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-homework5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-lab0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-lab0.rb:4:1: C: Missing top-level module documentation comment.
module Lab0AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-lab0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-lab1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-lab1.rb:4:1: C: Missing top-level module documentation comment.
module Lab1AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-lab1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-lab2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-lab2.rb:4:1: C: Missing top-level module documentation comment.
module Lab2AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-lab2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-lab3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-lab3.rb:4:1: C: Missing top-level module documentation comment.
module Lab3AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-lab3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-lab4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-lab4.rb:4:1: C: Missing top-level module documentation comment.
module Lab4AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-lab4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-lab5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-lab5.rb:4:1: C: Missing top-level module documentation comment.
module Lab5AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-lab5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-labtemplate.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-labtemplate.rb:4:1: C: Missing top-level module documentation comment.
module LabtemplateAutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-labtemplate.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-quiz0.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-quiz0.rb:4:1: C: Missing top-level module documentation comment.
module Quiz0AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-quiz0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-quiz1.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-quiz1.rb:4:1: C: Missing top-level module documentation comment.
module Quiz1AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-quiz1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-quiz2.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-quiz2.rb:4:1: C: Missing top-level module documentation comment.
module Quiz2AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-quiz2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-quiz3.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-quiz3.rb:4:1: C: Missing top-level module documentation comment.
module Quiz3AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-quiz3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-quiz4.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-quiz4.rb:4:1: C: Missing top-level module documentation comment.
module Quiz4AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-quiz4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
assessmentConfig/AutoPopulated2-quiz5.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
assessmentConfig/AutoPopulated2-quiz5.rb:4:1: C: Missing top-level module documentation comment.
module Quiz5AutoPopulated2
^^^^^^
assessmentConfig/AutoPopulated2-quiz5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courseConfig/AutoPopulated.rb:1:1: C: Use snake_case for source file names.
require "CourseBase.rb"
^
courseConfig/AutoPopulated.rb:3:1: C: Missing top-level module documentation comment.
module CourseAutoPopulated
^^^^^^
courseConfig/AutoPopulated.rb:41:7: C: Use snake_case for method names.
  def fooAverage(_user)
      ^^^^^^^^^^
courseConfig/AutoPopulated.rb:57:7: C: Use snake_case for method names.
  def courseAverage(_user)
      ^^^^^^^^^^^^^
courseConfig/AutoPopulated.rb:64:7: C: Use snake_case for method names.
  def gradebookMessage
      ^^^^^^^^^^^^^^^^
courseConfig/AutoPopulated2.rb:1:1: C: Use snake_case for source file names.
require "CourseBase.rb"
^
courseConfig/AutoPopulated2.rb:3:1: C: Missing top-level module documentation comment.
module CourseAutoPopulated2
^^^^^^
courseConfig/AutoPopulated2.rb:41:7: C: Use snake_case for method names.
  def fooAverage(_user)
      ^^^^^^^^^^
courseConfig/AutoPopulated2.rb:57:7: C: Use snake_case for method names.
  def courseAverage(_user)
      ^^^^^^^^^^^^^
courseConfig/AutoPopulated2.rb:64:7: C: Use snake_case for method names.
  def gradebookMessage
      ^^^^^^^^^^^^^^^^
courses/AutoPopulated/balls/balls.rb:4:1: C: Missing top-level module documentation comment.
module Balls
^^^^^^
courses/AutoPopulated/balls/balls.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/balls2/balls2.rb:4:1: C: Missing top-level module documentation comment.
module Balls2
^^^^^^
courses/AutoPopulated/balls2/balls2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/course.rb:36:5: C: Use snake_case for method names.
def fooAverage(_user)
    ^^^^^^^^^^
courses/AutoPopulated/course.rb:52:5: C: Use snake_case for method names.
def courseAverage(_user)
    ^^^^^^^^^^^^^
courses/AutoPopulated/course.rb:59:5: C: Use snake_case for method names.
def gradebookMessage
    ^^^^^^^^^^^^^^^^
courses/AutoPopulated/homework0/homework0.rb:4:1: C: Missing top-level module documentation comment.
module Homework0
^^^^^^
courses/AutoPopulated/homework0/homework0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/homework1/homework1.rb:4:1: C: Missing top-level module documentation comment.
module Homework1
^^^^^^
courses/AutoPopulated/homework1/homework1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/homework2/homework2.rb:4:1: C: Missing top-level module documentation comment.
module Homework2
^^^^^^
courses/AutoPopulated/homework2/homework2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/homework3/homework3.rb:4:1: C: Missing top-level module documentation comment.
module Homework3
^^^^^^
courses/AutoPopulated/homework3/homework3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/homework4/homework4.rb:4:1: C: Missing top-level module documentation comment.
module Homework4
^^^^^^
courses/AutoPopulated/homework4/homework4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/homework5/homework5.rb:4:1: C: Missing top-level module documentation comment.
module Homework5
^^^^^^
courses/AutoPopulated/homework5/homework5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/hoo/hoo.rb:4:1: C: Missing top-level module documentation comment.
module Hoo
^^^^^^
courses/AutoPopulated/hoo/hoo.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/hoodoo/hoodoo.rb:4:1: C: Missing top-level module documentation comment.
module Hoodoo
^^^^^^
courses/AutoPopulated/hoodoo/hoodoo.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/lab0/lab0.rb:4:1: C: Missing top-level module documentation comment.
module Lab0
^^^^^^
courses/AutoPopulated/lab0/lab0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/lab1/lab1.rb:4:1: C: Missing top-level module documentation comment.
module Lab1
^^^^^^
courses/AutoPopulated/lab1/lab1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/lab2/lab2.rb:4:1: C: Missing top-level module documentation comment.
module Lab2
^^^^^^
courses/AutoPopulated/lab2/lab2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/lab3/lab3.rb:4:1: C: Missing top-level module documentation comment.
module Lab3
^^^^^^
courses/AutoPopulated/lab3/lab3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/lab4/lab4.rb:4:1: C: Missing top-level module documentation comment.
module Lab4
^^^^^^
courses/AutoPopulated/lab4/lab4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/lab5/lab5.rb:4:1: C: Missing top-level module documentation comment.
module Lab5
^^^^^^
courses/AutoPopulated/lab5/lab5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/labtemplate/labtemplate.rb:4:1: C: Missing top-level module documentation comment.
module Labtemplate
^^^^^^
courses/AutoPopulated/labtemplate/labtemplate.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/quiz0/quiz0.rb:4:1: C: Missing top-level module documentation comment.
module Quiz0
^^^^^^
courses/AutoPopulated/quiz0/quiz0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/quiz1/quiz1.rb:4:1: C: Missing top-level module documentation comment.
module Quiz1
^^^^^^
courses/AutoPopulated/quiz1/quiz1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/quiz2/quiz2.rb:4:1: C: Missing top-level module documentation comment.
module Quiz2
^^^^^^
courses/AutoPopulated/quiz2/quiz2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/quiz3/quiz3.rb:4:1: C: Missing top-level module documentation comment.
module Quiz3
^^^^^^
courses/AutoPopulated/quiz3/quiz3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/quiz4/quiz4.rb:4:1: C: Missing top-level module documentation comment.
module Quiz4
^^^^^^
courses/AutoPopulated/quiz4/quiz4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/quiz5/quiz5.rb:4:1: C: Missing top-level module documentation comment.
module Quiz5
^^^^^^
courses/AutoPopulated/quiz5/quiz5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/shankadonkey/shankadonkey.rb:4:1: C: Missing top-level module documentation comment.
module Shankadonkey
^^^^^^
courses/AutoPopulated/shankadonkey/shankadonkey.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/shankspank/shankspank.rb:4:1: C: Missing top-level module documentation comment.
module Shankspank
^^^^^^
courses/AutoPopulated/shankspank/shankspank.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated/shister/shister.rb:4:1: C: Missing top-level module documentation comment.
module Shister
^^^^^^
courses/AutoPopulated/shister/shister.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/course.rb:36:5: C: Use snake_case for method names.
def fooAverage(_user)
    ^^^^^^^^^^
courses/AutoPopulated2/course.rb:52:5: C: Use snake_case for method names.
def courseAverage(_user)
    ^^^^^^^^^^^^^
courses/AutoPopulated2/course.rb:59:5: C: Use snake_case for method names.
def gradebookMessage
    ^^^^^^^^^^^^^^^^
courses/AutoPopulated2/homework0/homework0.rb:4:1: C: Missing top-level module documentation comment.
module Homework0
^^^^^^
courses/AutoPopulated2/homework0/homework0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/homework1/homework1.rb:4:1: C: Missing top-level module documentation comment.
module Homework1
^^^^^^
courses/AutoPopulated2/homework1/homework1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/homework2/homework2.rb:4:1: C: Missing top-level module documentation comment.
module Homework2
^^^^^^
courses/AutoPopulated2/homework2/homework2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/homework3/homework3.rb:4:1: C: Missing top-level module documentation comment.
module Homework3
^^^^^^
courses/AutoPopulated2/homework3/homework3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/homework4/homework4.rb:4:1: C: Missing top-level module documentation comment.
module Homework4
^^^^^^
courses/AutoPopulated2/homework4/homework4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/homework5/homework5.rb:4:1: C: Missing top-level module documentation comment.
module Homework5
^^^^^^
courses/AutoPopulated2/homework5/homework5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/lab0/lab0.rb:4:1: C: Missing top-level module documentation comment.
module Lab0
^^^^^^
courses/AutoPopulated2/lab0/lab0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/lab1/lab1.rb:4:1: C: Missing top-level module documentation comment.
module Lab1
^^^^^^
courses/AutoPopulated2/lab1/lab1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/lab2/lab2.rb:4:1: C: Missing top-level module documentation comment.
module Lab2
^^^^^^
courses/AutoPopulated2/lab2/lab2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/lab3/lab3.rb:4:1: C: Missing top-level module documentation comment.
module Lab3
^^^^^^
courses/AutoPopulated2/lab3/lab3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/lab4/lab4.rb:4:1: C: Missing top-level module documentation comment.
module Lab4
^^^^^^
courses/AutoPopulated2/lab4/lab4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/lab5/lab5.rb:4:1: C: Missing top-level module documentation comment.
module Lab5
^^^^^^
courses/AutoPopulated2/lab5/lab5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/labtemplate/labtemplate.rb:4:1: C: Missing top-level module documentation comment.
module Labtemplate
^^^^^^
courses/AutoPopulated2/labtemplate/labtemplate.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/quiz0/quiz0.rb:4:1: C: Missing top-level module documentation comment.
module Quiz0
^^^^^^
courses/AutoPopulated2/quiz0/quiz0.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/quiz1/quiz1.rb:4:1: C: Missing top-level module documentation comment.
module Quiz1
^^^^^^
courses/AutoPopulated2/quiz1/quiz1.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/quiz2/quiz2.rb:4:1: C: Missing top-level module documentation comment.
module Quiz2
^^^^^^
courses/AutoPopulated2/quiz2/quiz2.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/quiz3/quiz3.rb:4:1: C: Missing top-level module documentation comment.
module Quiz3
^^^^^^
courses/AutoPopulated2/quiz3/quiz3.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/quiz4/quiz4.rb:4:1: C: Missing top-level module documentation comment.
module Quiz4
^^^^^^
courses/AutoPopulated2/quiz4/quiz4.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
courses/AutoPopulated2/quiz5/quiz5.rb:4:1: C: Missing top-level module documentation comment.
module Quiz5
^^^^^^
courses/AutoPopulated2/quiz5/quiz5.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
lib/__defaultAssessment.rb:5:3: E: class or module name must be a constant literal
  include AssessmentBase
  ^^^^^^^
lib/__defaultAssessment.rb:13:1: E: unexpected token kEND
end
^^^
lib/__defaultCourse.rb:1:1: C: Use snake_case for source file names.
#
^
lib/__defaultCourse.rb:36:5: C: Use snake_case for method names.
def fooAverage(_user)
    ^^^^^^^^^^
lib/__defaultCourse.rb:52:5: C: Use snake_case for method names.
def courseAverage(_user)
    ^^^^^^^^^^^^^
lib/__defaultCourse.rb:59:5: C: Use snake_case for method names.
def gradebookMessage
    ^^^^^^^^^^^^^^^^
lib/archive.rb:7:1: C: Missing top-level module documentation comment.
module Archive
^^^^^^
lib/archive.rb:8:3: C: Method has too many lines. [16/10]
  def self.get_files(archive_path)
  ^^^
lib/archive.rb:34:3: C: Method has too many lines. [19/10]
  def self.get_nth_file(archive_path, n)
  ^^^
lib/archive.rb:40:21: C: Use [33mnext[0m to skip iteration.
    archive_extract.each_with_index do |entry, i|
                    ^^^^^^^^^^^^^^^
lib/archive.rb:68:81: C: Line is too long. [106/80]
    IO.popen(["file", "--brief", "--mime-type", filename], in: :close, err: :close) { |io| io.read.chomp }
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/archive.rb:71:12: C: Rename [33mis_archive?[0m to [33marchive?[0m.
  def self.is_archive?(filename)
           ^^^^^^^^^^^
lib/archive.rb:74:81: C: Line is too long. [99/80]
    (archive_type.include?("tar") || archive_type.include?("gzip") || archive_type.include?("zip"))
                                                                                ^^^^^^^^^^^^^^^^^^^
lib/archive.rb:77:3: C: Method has too many lines. [15/10]
  def self.get_archive(filename, archive_type = nil)
  ^^^
lib/archive.rb:78:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if archive_type.nil?
    ^^
lib/archive.rb:84:81: C: Line is too long. [83/80]
      archive_extract.rewind # The extract has to be rewinded after every iteration
                                                                                ^^^
lib/archive.rb:86:81: C: Line is too long. [84/80]
      archive_extract = Gem::Package::TarReader.new(Zlib::GzipReader.open(filename))
                                                                                ^^^^
lib/archive.rb:110:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if paths.nil? || paths.empty?
    ^^
lib/archive.rb:121:81: C: Line is too long. [91/80]
    # the return value should be the return value of the outer block, which is the tempfile
                                                                                ^^^^^^^^^^^
lib/AssessmentBase.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentBase
^^^^^^
lib/AssessmentBase.rb:1:1: C: Use snake_case for source file names.
module AssessmentBase
^
lib/association_cache.rb:1:1: C: Missing top-level class documentation comment.
class AssociationCache
^^^^^
lib/association_cache.rb:46:81: C: Line is too long. [83/80]
      @latest_submissions[au_key sub.assessment_id, sub.course_user_datum_id] = sub
                                                                                ^^^
lib/association_cache.rb:52:81: C: Line is too long. [100/80]
    Score.on_latest_submissions.for_course(@course).where(find_options[:conditions]).each do |score|
                                                                                ^^^^^^^^^^^^^^^^^^^^
lib/association_cache.rb:53:81: C: Line is too long. [111/80]
      @latest_submission_scores[score.submission_id] = [] unless @latest_submission_scores[score.submission_id]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/association_cache.rb:61:3: C: Method has too many lines. [13/10]
  def setup_associations
  ^^^
lib/association_cache.rb:93:1: C: Missing top-level module documentation comment.
module CUDAssociationCache
^^^^^^
lib/association_cache.rb:109:1: C: Missing top-level module documentation comment.
module CourseAssociationCache
^^^^^^
lib/association_cache.rb:131:1: C: Missing top-level module documentation comment.
module AssessmentAssociationCache
^^^^^^
lib/association_cache.rb:159:1: C: Missing top-level module documentation comment.
module AUDAssociationCache
^^^^^^
lib/association_cache.rb:182:81: C: Line is too long. [81/80]
    @cud = cache.course_user_data[course_user_datum_id] if cache.course_user_data
                                                                                ^
lib/association_cache.rb:183:81: C: Line is too long. [121/80]
    @latest_submission = cache.latest_submissions[au_key assessment_id, course_user_datum_id] if cache.latest_submissions
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/association_cache.rb:187:1: C: Missing top-level module documentation comment.
module LatestSubmissionAssociationCache
^^^^^^
lib/association_cache.rb:211:3: C: Assignment Branch Condition size for association_cache= is too high. [19.1/15]
  def association_cache=(cache)
  ^^^
lib/association_cache.rb:215:81: C: Line is too long. [81/80]
    @cud = cache.course_user_data[course_user_datum_id] if cache.course_user_data
                                                                                ^
lib/association_cache.rb:217:81: C: Line is too long. [82/80]
    @scores = cache.latest_submission_scores[id] if cache.latest_submission_scores
                                                                                ^^
lib/CourseBase.rb:1:1: C: Use snake_case for source file names.
require "Statistics.rb"
^
lib/CourseBase.rb:3:1: C: Missing top-level module documentation comment.
module CourseBase
^^^^^^
lib/CourseBase.rb:4:7: C: Use snake_case for method names.
  def courseAverage(user)
      ^^^^^^^^^^^^^
lib/CourseBase.rb:8:7: C: Use snake_case for method names.
  def gradebookMessage
      ^^^^^^^^^^^^^^^^
lib/date_time_input.rb:1:1: C: Missing top-level module documentation comment.
module DateTimeInput
^^^^^^
lib/exception_notification/exception_notification/consider_local.rb:1:81: C: Line is too long. [109/80]
# This didn't belong on ExceptionNotifier and made backtraces worse.  To keep original functionality in place
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/consider_local.rb:2:81: C: Line is too long. [113/80]
# 'ActionController::Base.send :include, ExceptionNotification::ConsiderLocal' or just include in your controller
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/consider_local.rb:3:8: C: Use nested module/class definitions instead of compact style.
module ExceptionNotification::ConsiderLocal
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/consider_local.rb:4:3: C: Missing top-level module documentation comment.
  module ClassMethods
  ^^^^^^
lib/exception_notification/exception_notification/notifiable.rb:21:8: C: Use nested module/class definitions instead of compact style.
module ExceptionNotification::Notifiable
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifiable.rb:27:3: C: Missing top-level module documentation comment.
  module ClassMethods
  ^^^^^^
lib/exception_notification/exception_notification/notifiable.rb:55:81: C: Line is too long. [98/80]
    !self.class.skip_exception_notifications? && ![404, "404 Not Found"].include?(response.status)
                                                                                ^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifiable.rb:61:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when nil then {}
      ^^^^
lib/exception_notification/exception_notification/notifiable.rb:62:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Symbol then send(deliverer)
      ^^^^
lib/exception_notification/exception_notification/notifiable.rb:63:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Proc then deliverer.call(self)
      ^^^^
lib/exception_notification/exception_notification/notifiable.rb:66:81: C: Line is too long. [98/80]
    ExceptionNotification::Notifier.deliver_exception_notification(exception, self, request, data)
                                                                                ^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifier.rb:23:7: C: Use nested module/class definitions instead of compact style.
class ExceptionNotification::Notifier < ActionMailer::Base
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifier.rb:27:3: C: Replace class var @@sender_address with a class instance var.
  @@sender_address = %("Exception Notifier" <exception.notifier@default.com>)
  ^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifier.rb:30:3: C: Replace class var @@exception_recipients with a class instance var.
  @@exception_recipients = []
  ^^^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifier.rb:33:3: C: Replace class var @@email_prefix with a class instance var.
  @@email_prefix = "[ERROR] "
  ^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifier.rb:36:3: C: Replace class var @@sections with a class instance var.
  @@sections = %w(request session environment backtrace)
  ^^^^^^^^^^
lib/exception_notification/exception_notification/notifier.rb:43:3: C: Assignment Branch Condition size for exception_notification is too high. [22.05/15]
  def exception_notification(exception, controller, request, data = {})
  ^^^
lib/exception_notification/exception_notification/notifier.rb:47:81: C: Line is too long. [88/80]
    subject "#{email_prefix}#{source} (#{exception.class}) #{exception.message.inspect}"
                                                                                ^^^^^^^^
lib/exception_notification/exception_notification/notifier.rb:53:81: C: Line is too long. [141/80]
                    exception: exception, exception_source: source, host: (request.env["HTTP_X_FORWARDED_HOST"] || request.env["HTTP_HOST"]),
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifier.rb:71:81: C: Line is too long. [83/80]
    trace.map { |line| Pathname.new(line.gsub(re, "[Rails.root]")).cleanpath.to_s }
                                                                                ^^^
lib/exception_notification/exception_notification/notifier_helper.rb:23:8: C: Use nested module/class definitions instead of compact style.
module ExceptionNotification::NotifierHelper
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifier_helper.rb:29:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless summary.blank?
    ^^^^^^
lib/exception_notification/exception_notification/notifier_helper.rb:30:81: C: Line is too long. [82/80]
      title = render("exception_notifier/title", locals: { title: section }).strip
                                                                                ^^
lib/exception_notification/exception_notification/notifier_helper.rb:45:81: C: Line is too long. [99/80]
    result = result[0, len] + "... (#{result.length - len} bytes more)" if result.length > len + 20
                                                                                ^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification/notifier_helper.rb:58:81: C: Line is too long. [100/80]
    exclude_raw_post_parameters? ? @controller.__send__(:filter_parameters, parameters) : parameters
                                                                                ^^^^^^^^^^^^^^^^^^^^
lib/exception_notification/exception_notification.rb:2:1: C: Missing top-level module documentation comment.
module ExceptionNotification
^^^^^^
lib/ModuleBase.rb:1:1: C: Use snake_case for source file names.
# This module, which is inherited by all modules, organizes how
^
lib/ModuleBase.rb:4:1: C: Missing top-level module documentation comment.
module ModuleBase
^^^^^^
lib/ModuleBase.rb:5:3: C: Method has too many lines. [13/10]
  def updateModules
  ^^^
lib/ModuleBase.rb:5:7: C: Use snake_case for method names.
  def updateModules
      ^^^^^^^^^^^^^
lib/ModuleBase.rb:6:5: C: Use snake_case for variable names.
    @allModules = %w(Autograde Scoreboard Partners Svn)
    ^^^^^^^^^^^
lib/ModuleBase.rb:7:5: C: Use snake_case for variable names.
    @modulesUsed = []
    ^^^^^^^^^^^^
lib/ModuleBase.rb:9:5: C: Use snake_case for variable names.
    modName = (assign + (@course.name).gsub(/[^A-Za-z0-9]/, "")).camelize
    ^^^^^^^
lib/ModuleBase.rb:11:5: C: Prefer [33meach[0m over [33mfor[0m.
    for mod in @allModules do
    ^^^
lib/ModuleBase.rb:13:9: C: Use snake_case for variable names.
        modUsed = eval("#{modName}.include?(#{mod})")
        ^^^^^^^
lib/ModuleBase.rb:13:19: W: The use of [33meval[0m is a serious security risk.
        modUsed = eval("#{modName}.include?(#{mod})")
                  ^^^^
lib/ModuleBase.rb:14:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if modUsed
        ^^
lib/ModuleBase.rb:17:7: W: Do not suppress exceptions.
      rescue Exception
      ^^^^^^^^^^^^^^^^
lib/ModuleBase.rb:17:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception
      ^^^^^^^^^^^^^^^^
lib/ModuleBase.rb:24:3: C: Method has too many lines. [14/10]
  def listAdmin
  ^^^
lib/ModuleBase.rb:24:7: C: Use snake_case for method names.
  def listAdmin
      ^^^^^^^^^
lib/ModuleBase.rb:28:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @modulesUsed.include?("Autograde")
    ^^
lib/ModuleBase.rb:32:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @modulesUsed.include?("Scoreboard")
    ^^
lib/ModuleBase.rb:36:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @modulesUsed.include?("Partners")
    ^^
lib/ModuleBase.rb:40:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if @modulesUsed.include?("Svn")
    ^^
lib/ModuleBase.rb:40:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @modulesUsed.include?("Svn")
    ^^
lib/ModuleBase.rb:47:7: C: Use snake_case for method names.
  def loadHandinPage
      ^^^^^^^^^^^^^^
lib/ModuleBase.rb:54:3: C: Method has too many lines. [16/10]
  def validateHandin
  ^^^
lib/ModuleBase.rb:54:7: C: Use snake_case for method names.
  def validateHandin
      ^^^^^^^^^^^^^^
lib/ModuleBase.rb:58:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless partnersValidateHandin
      ^^^^^^
lib/ModuleBase.rb:65:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless svnValidateHandin
      ^^^^^^
lib/ModuleBase.rb:69:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless super()
      ^^^^^^
lib/ModuleBase.rb:78:7: C: Use snake_case for method names.
  def saveHandin
      ^^^^^^^^^^
lib/modules/Autograde.rb:1:1: C: Use snake_case for source file names.
# Production
^
lib/modules/Partners.rb:1:1: C: Missing top-level module documentation comment.
module Partners
^^^^^^
lib/modules/Partners.rb:1:1: C: Use snake_case for source file names.
module Partners
^
lib/modules/Scoreboard.rb:1:1: C: Use snake_case for source file names.
require "ModuleBase.rb"
^
lib/modules/Scoreboard.rb:3:1: C: Missing top-level module documentation comment.
module Scoreboard
^^^^^^
lib/modules/Svn.rb:1:1: C: Missing top-level module documentation comment.
module Svn
^^^^^^
lib/modules/Svn.rb:1:1: C: Use snake_case for source file names.
module Svn
^
lib/modules/Svn.rb:4:3: C: Method has too many lines. [12/10]
  def checkoutWork(_repo, targetDir)
  ^^^
lib/modules/Svn.rb:4:7: C: Use snake_case for method names.
  def checkoutWork(_repo, targetDir)
      ^^^^^^^^^^^^
lib/modules/Svn.rb:12:7: C: Use snake_case for variable names.
      testFile = File.join(targetDir, "test.txt")
      ^^^^^^^^
lib/modules/Svn.rb:26:7: C: Use snake_case for method names.
  def subversionType
      ^^^^^^^^^^^^^^
lib/pdf.rb:1:1: C: Missing top-level module documentation comment.
module PDF
^^^^^^
lib/pdf.rb:2:12: C: Rename [33mis_pdf?[0m to [33mpdf?[0m.
  def self.is_pdf?(file)
           ^^^^^^^
lib/Statistics.rb:1:1: C: Missing top-level class documentation comment.
class Statistics
^^^^^
lib/Statistics.rb:1:1: C: Use snake_case for source file names.
class Statistics
^
lib/Statistics.rb:6:31: C: Name [33minject[0m block params [33m|a, e|[0m.
      result = (a.inject(0) { |sum, el| sum + el }.to_f) / a.to_a.length
                              ^^^^^^^^^
lib/Statistics.rb:52:3: C: Assignment Branch Condition size for median is too high. [16.76/15]
  def median(a)
  ^^^
lib/Statistics.rb:52:3: C: Method has too many lines. [11/10]
  def median(a)
  ^^^
lib/Statistics.rb:53:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if a.nil? || a.empty?
    ^^
lib/utilities.rb:1:1: C: Missing top-level module documentation comment.
module Utilities
^^^^^^
lib/utilities.rb:8:12: C: Rename [33mis_url?[0m to [33murl?[0m.
  def self.is_url?(name)
           ^^^^^^^
lib/utilities.rb:19:3: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
  rescue Exception => e
  ^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:20:5: C: Provide an exception class and message as arguments to [33mraise[0m.
    raise InstructorException.new("Error executing #{invoked_method_name}: #{e}")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:20:81: C: Line is too long. [81/80]
    raise InstructorException.new("Error executing #{invoked_method_name}: #{e}")
                                                                                ^
lib/utilities.rb:23:3: C: Method has too many lines. [11/10]
  def self.validated_score_value(score, invoked_method_name, allow_nil = false)
  ^^^
lib/utilities.rb:23:3: C: Perceived complexity for validated_score_value is too high. [8/7]
  def self.validated_score_value(score, invoked_method_name, allow_nil = false)
  ^^^
lib/utilities.rb:27:19: C: Avoid using [33mrescue[0m in its modifier form.
      if (score = Float(score) rescue nil)
                  ^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:28:9: C: Provide an exception class and message as arguments to [33mfail[0m.
        fail InvalidComputedScoreException.new("#{message}: returned infinite number") unless score.finite?
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:28:81: C: Line is too long. [107/80]
        fail InvalidComputedScoreException.new("#{message}: returned infinite number") unless score.finite?
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:30:9: C: Provide an exception class and message as arguments to [33mfail[0m.
        fail InvalidComputedScoreException.new("#{message}: error converting to float")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:30:81: C: Line is too long. [87/80]
        fail InvalidComputedScoreException.new("#{message}: error converting to float")
                                                                                ^^^^^^^
lib/utilities.rb:33:7: C: Provide an exception class and message as arguments to [33mfail[0m.
      fail InvalidComputedScoreException.new("#{message}: returned nil") unless allow_nil
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:33:81: C: Line is too long. [89/80]
      fail InvalidComputedScoreException.new("#{message}: returned nil") unless allow_nil
                                                                                ^^^^^^^^^
spec/controllers/groups_controller_spec.rb:110:81: C: Line is too long. [81/80]
        put :update, { id: group.to_param, group: new_attributes }, valid_session
                                                                                ^
spec/controllers/groups_controller_spec.rb:117:81: C: Line is too long. [83/80]
        put :update, { id: group.to_param, group: valid_attributes }, valid_session
                                                                                ^^^
spec/controllers/groups_controller_spec.rb:123:81: C: Line is too long. [83/80]
        put :update, { id: group.to_param, group: valid_attributes }, valid_session
                                                                                ^^^
spec/controllers/groups_controller_spec.rb:131:81: C: Line is too long. [85/80]
        put :update, { id: group.to_param, group: invalid_attributes }, valid_session
                                                                                ^^^^^
spec/controllers/groups_controller_spec.rb:137:81: C: Line is too long. [85/80]
        put :update, { id: group.to_param, group: invalid_attributes }, valid_session
                                                                                ^^^^^
spec/spec_helper.rb:1:81: C: Line is too long. [92/80]
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
                                                                                ^^^^^^^^^^^^
spec/spec_helper.rb:3:81: C: Line is too long. [84/80]
# The generated `.rspec` file contains `--require spec_helper` which will cause this
                                                                                ^^^^
spec/spec_helper.rb:4:81: C: Line is too long. [81/80]
# file to always be loaded, without a need to explicitly require it in any files.
                                                                                ^
spec/spec_helper.rb:11:81: C: Line is too long. [81/80]
# the additional setup, and require it from the spec files that actually need it.
                                                                                ^
spec/spec_helper.rb:53:81: C: Line is too long. [89/80]
  #   # Limits the available syntax to the non-monkey patched syntax that is recommended.
                                                                                ^^^^^^^^^
spec/spec_helper.rb:76:81: C: Line is too long. [81/80]
  #   # order dependency and want to debug it, you can fix the order by providing
                                                                                ^
spec/spec_helper.rb:83:81: C: Line is too long. [81/80]
  #   # test failures related to randomization by passing the same `--seed` value
                                                                                ^
spec/support/controller_helpers.rb:1:1: C: Missing top-level module documentation comment.
module ControllerHelpers
^^^^^^
spec/support/controller_helpers.rb:2:3: C: Assignment Branch Condition size for sign_in is too high. [25.02/15]
  def sign_in(user = nil)
  ^^^
spec/support/controller_helpers.rb:4:81: C: Line is too long. [94/80]
      allow(request.env["warden"]).to receive(:authenticate!).and_throw(:warden, scope: :user)
                                                                                ^^^^^^^^^^^^^^
templates/AutoPopulated-labtemplate.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
templates/AutoPopulated-labtemplate.rb:4:1: C: Missing top-level module documentation comment.
module LabtemplateAutoPopulated
^^^^^^
templates/AutoPopulated-labtemplate.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
templates/labtemplate/labtemplate.rb:4:1: C: Missing top-level module documentation comment.
module Labtemplate
^^^^^^
templates/labtemplate/labtemplate.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
test/factories/course.rb:9:18: W: Ambiguous negative number operator. Parenthesize the method arguments if it's surely a negative number operator, or add a whitespace to the right of the [33m-[0m if it should be a subtraction.
    late_penalty -0.15
                 ^
test/factories/user.rb:4:13: W: [33m(...)[0m interpreted as grouped expression.
    sequence (:last_name) { |n| "User #{n}" }
            ^
test/factories/user.rb:5:13: W: [33m(...)[0m interpreted as grouped expression.
    sequence (:andrewID) { |n| "test#{n}" }
            ^
test/factories/user.rb:7:13: W: [33m(...)[0m interpreted as grouped expression.
    sequence (:email) { |n| "test#{n}@andrew.cmu.edu" }
            ^
test/performance/browsing_test.rb:4:1: C: Missing top-level class documentation comment.
class BrowsingTest < ActionDispatch::PerformanceTest
^^^^^
test/test_helper.rb:5:1: C: Missing top-level class documentation comment.
class ActiveSupport::TestCase
^^^^^
test/test_helper.rb:5:7: C: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:6:81: C: Line is too long. [88/80]
  # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.
                                                                                ^^^^^^^^
test/test_helper.rb:8:81: C: Line is too long. [89/80]
  # Note: You'll currently still have to declare fixtures explicitly in integration tests
                                                                                ^^^^^^^^^
test/unit/user_test.rb:3:1: C: Missing top-level class documentation comment.
class UserTest < ActiveSupport::TestCase
^^^^^
test/unit/user_test.rb:10:81: C: Line is too long. [87/80]
    u.nickname = "This nickname is way too long and should never be allowed on autolab"
                                                                                ^^^^^^^

224 files inspected, 1825 offenses detected
